Tue May 06 18:47:16 2025
-------------------------
CAS V2.15.1-rc1 - (C) Copyright 2000-2012 CHIPMAST TECHNOLOGY CO. LTD.
Main file   : main.asm
Current file: main.asm

     1                        ;********************************************************************************
     2                        ; PROJECT	: Calendar(MC830B)							*
     3                        ; AUTHOR	: WBN										*
     4                        ; REVISION	: 13/9/2024  V1.0	First issue				*
     5                        ; High OSC CLK  : Internal RC 4.4MHz	Fcpu = Fosc/2				*
     6                        ; Function	: 								*
     7                        ;********************************************************************************
     8                        	.CHIP	W65C02S      ;cpu的选型
     9                        	;.INCLIST	ON       ;宏定义和文件
    10                        	.MACLIST	ON
    11                        ;***************************************
    12                        CODE_BEG	EQU		C000H ;C000H(4K*4次)        ;起始地址
    13                        ;***************************************
    14                        
    15                        PROG	SECTION	OFFSET	CODE_BEG                ;定义代码段的偏移量从CODE_BEG开始，用于组织程序代码。
    16                        
    17                        ;***************************************
    18                        ;*	header include                               ;头文件
    19                        ;***************************************
    20                        	.include	50P016.h
     1                        .page0
     2                        .org 	00H
     3                        PA		EQU	01H
     4                        P_PA		EQU	PA
     5                        PAWAKE	EQU	02H
     6                        P_PA_WAKE	EQU	PAWAKE
     7                        PADIR	EQU	04H
     8                        P_PA_DIR	EQU	PADIR
     9                        P_PA_IO		EQU	PADIR
    10                        PB		EQU	05H
    11                        P_PB		EQU	PB
    12                        PBTYPE	EQU	06H
    13                        P_PB_TYPE	EQU	PBTYPE
    14                        PC		EQU	07H
    15                        P_PC 		EQU PC
    16                        PCDIR	EQU	08H
    17                        P_PC_IO 	EQU	PCDIR
    18                        P_PC_DIR	EQU	PCDIR
    19                        PCSEG	EQU	09H	;
    20                        P_PCSEG		EQU	PCSEG
    21                        PD		EQU	0AH
    22                        PDDIR	EQU 0BH
    23                        PADF0	EQU	0CH	;
    24                        P_PADF0		EQU	PADF0
    25                        PADF1	EQU	0DH	;
    26                        IER		EQU	0EH
    27                        P_IER 	EQU IER
    28                        IFR		EQU	0FH
    29                        P_IFR 		EQU IFR
    30                        TMR0	EQU	10H	;
    31                        P_TMR0		EQU	TMR0
    32                        TMR1	EQU	12H	;
    33                        P_TMR1  	EQU	TMR1
    34                        TMR2	EQU	14H	;
    35                        TMRC	EQU	16H	;
    36                        P_TMRCTRL 	EQU TMRC
    37                        P_TMRC		EQU	TMRC
    38                        bTMR0ON    EQU	   0
    39                        bTMR1ON    EQU	   1
    40                        bLCDON	   EQU	   4
    41                        bAUDON	   EQU	   7
    42                        
    43                        TMCLK	EQU	17H	;
    44                        P_TMRCLK 	EQU TMCLK
    45                        P_TMCLK 	EQU TMCLK
    46                        DIVC	EQU	18H	;
    47                        P_DIVC		EQU	DIVC
    48                        LCDCTRL	EQU	19H	;
    49                        LCDCOM	EQU	1AH	;
    50                        P_LCD_COM	EQU	LCDCOM
    51                        WDTC	EQU	1CH	;
    52                        SYSCLK	EQU	1DH
    53                        P_SYSCLK	EQU	SYSCLK
    54                        sysclk		equ SYSCLK
    55                        HALT	EQU	1EH	;
    56                        P_HALT		EQU	HALT
    57                        AUD0	EQU	1FH	;
    58                        P_AUD		EQU	AUD0
    59                        
    60                        AUDCR	EQU	20H	;
    61                        P_AUD_CTL	EQU	AUDCR
    62                        FRAME	EQU	21H	;
    63                        ;BANK	EQU	23H	;
    64                        MF		EQU	2FH
    65                        
    66                        SPCR	EQU	32H
    67                        SPSR	EQU	33H
    68                        SPDR	EQU	34H
    69                        PAK		EQU	3AH
    70                        PBK		EQU	3BH
    71                        PCK		EQU	3CH
    72                        LVC		EQU	3DH
    73                        FUSE	EQU	3EH
    74                        
    75                        PDSEG	EQU	5CH
    76                        RFCC0	EQU	5DH
    77                        RFCC1	EQU	5EH
    78                        
    79                        .ends
    79                        
    21                        	.INCLUDE	RAM.INC
     1                        .Kdata
     2                        ;***************************************
     3                        ; RAM Address
     4                        ;***************************************
     5                        RamStarAddr			EQU		1800H   ;RAM的开始地址
     6                        LCD_RamAddr			EQU		RamStarAddr     ;LCD RAM的地址
     7                        Time_Addr			EQU		RamStarAddr+Time_Str_Addr-Page0RamStarAddr
     8                        Cal_Addr			EQU		RamStarAddr+Calculator_Str_Addr-Page0RamStarAddr
     9                        RAM					EQU		80H
    10                        ;***************************************
    11                        ;Time_Addr		EUQ		B0H
    12                        ;***************************************
    13                        .PAGE0     ;page 0的内存布局
    14                        ;***************************************
    15                        ;	ORG	0098H
    16                        ;---------------------------------------------------------------------
    17                        	ORG	0080H
    18                        
    19                        Page0RamStarAddr	EQU		$
    20 00:0080: xx xx xx xx   LCDRAM					DS	6*5
    20 00:0080: xx xx xx xx   
    20 00:0080: xx xx xx xx   
    21                        D_LCD_RAM				EQU	6*5
    22                        
    23 00:009E: xx            R_Int_Backup			DS	1
    24                        
    25 00:009F: xx            Sys_Flag_A				DS	1		;0	系统状态
    26                        ; bit0 	=132hz标志
    27                        ; bit1	=1按键首次扫描标志
    28                        ; bit2 	=0按键循环扫描标志
    29                        ; bit3	=0设置模式
    30                        ; bit4 	=0快加设置(此工程无用)
    31                        ; bit5 	=0无效键设置
    32                        ; bit6	=01按键长按
    33                        ; bit7	=0按键按下返回时间模式的标志
    34 00:00A0: xx            Sys_Flag_B				DS	1	;时钟模式的系统状态
    35                        ; bit0 	=半秒标志
    36                        ; bit1	=一秒标志
    37                        ; bit2	=12小时/24小时制度
    38                        ; bit3	=1是润年标志
    39                        ; bit4 	=
    40                        ; bit5 	=
    41                        ; bit6	=
    42                        ; bit7	=
    43 00:00A1: xx            Sys_Flag_C				DS	1	;闹钟模式的系统状态
    44                        ; bit0 	=0闹铃界面/1 整点报时
    45                        ; bit1	=0关闭整点报时，开启整点报时
    46                        ; bit2 	=1设置输入的按键无效
    47                        ; bit3	=
    48                        ; bit4 	=闹钟闹铃
    49                        ; bit5 	=1按键音开启
    50                        ; bit6	=
    51                        ; bit7	=1贪睡标志
    52 00:00A2: xx            Sys_Flag_D				DS	1	;计时器模式的系统状态
    53                        ; bit0 	=1正计时开启计时
    54                        ; bit1	=1是倒计时开启计时
    55                        ; bit2	=1第一次倒计时
    56                        ; bit3	=
    57                        ; bit4 	=定时器闹铃
    58                        ; bit5 	=0无中途测量，1中途测量
    59                        ; bit6	=
    60                        ; bit7	=
    61 00:00A3: xx            R_Reset_Time					DS	1;全显时间,一般为2s
    62                        
    63 00:00A4: xx            R_Scankey_Time					DS	1;按键按下的时间
    64                        D_Rscankey_Half_Sec				EQU	16;按键时间
    65                        D_Rscankey_Sec					EQU	32
    66                        D_Rscankey_TWO_Sec				EQU	64
    67                        
    68                        
    69 00:00A5: xx            P_Scankey_value_T_1			DS	1
    70 00:00A6: xx            P_Scankey_value				DS	1;按键存储值
    71 00:00A7: xx            P_Scankey_value_Temporary	DS	1;按键临时储存
    72                        
    73                        D_PA_Value						EQU		01110000B
    74                        D_PA_Press						EQU		01111100B
    75                        D_PA2_Press						EQU		01110100B
    76                        D_PA3_Press						EQU		01111000B
    77                        D_PA4_Press						EQU		01100000B
    78                        D_PA5_Press						EQU		01010000B
    79                        D_PA6_Press						EQU		00110000B
    80                        D_PA5_PA6_Press					EQU		00010000B
    81                        
    82                        D_PC_Press						EQU		00001111B
    83                        D_PC0_Press						EQU		00000001B
    84                        D_PC1_Press						EQU		00000010B
    85                        D_PC2_Press						EQU		00000100B
    86                        D_PC3_Press						EQU		00001000B
    87                        
    88                        ; P_Beep_Frequency				DS	1	;声音大小
    89                        ; D_Beep_Frequency_1_2_Duty		EQU	0
    90                        ; D_Beep_Frequency_3/4_Duty		EQU 80H
    91                        ; D_Mode_Press					EQU		1 ;
    92                        ; D_ST_SP_Press					EQU		2 ;
    93                        ; D_Reset_Press					EQU		3 ;
    94                        ; D_Light_Press					EQU		4 ;
    95                        D_NUM1_Press					EQU		1;1
    96                        D_NUM2_Press					EQU		2;2
    97                        D_NUM3_Press					EQU		3;3
    98                        D_NUM4_Press					EQU		4;4
    99                        D_NUM5_Press					EQU		5;5
   100                        D_NUM6_Press					EQU		8;6
   101                        D_NUM7_Press					EQU		9;7
   102                        D_NUM8_Press					EQU		10;8
   103                        D_NUM9_Press					EQU		11;9
   104                        D_NUM0_Press					EQU		12;0
   105                        D_NUM_Point_Press				EQU		15;.
   106                        D_NUM_Equal_Press				EQU		20;=
   107                        D_NUM_Add_Press					EQU		16;+
   108                        D_NUM_Minus_Press				EQU		17;-
   109                        D_NUM_Multiply_Press			EQU		18;*
   110                        D_NUM_Divid_Press				EQU		19;/
   111                        D_B_Press						EQU		21;mode
   112                        D_C_Press						EQU		22;set
   113                        D_Beep_Test_Press				EQU		23;声音测试
   114                        
   115                        D_Date_Press					EQU		D_NUM_Divid_Press
   116                        D_Alm_Press						EQU		D_NUM4_Press
   117                        D_Sig_Press						EQU		D_NUM_Multiply_Press
   118                        D_ST_SP_Press					EQU		D_NUM_Add_Press
   119                        D_ST_Hour_Press					EQU		D_NUM_Divid_Press
   120                        D_Reset_Press					EQU		D_NUM0_Press
   121                        D_Mode_Press					EQU		D_C_Press
   122                        D_Set_Press						EQU		D_B_Press
   123                        
   124                        ;---------------------------------------
   125                        Time_Str_Addr	EQU		$
   126 00:00A8: xx            R_Time_Sec						DS	1;时钟的秒数;
   127 00:00A9: xx            R_Time_Min						DS	1;时钟的分钟数;
   128 00:00AA: xx            R_Time_Hr 						DS	1;时钟的小时数;
   129 00:00AB: xx            R_Time_Day 						DS	1;日
   130 00:00AC: xx            R_Time_Month 					DS	1;月
   131 00:00AD: xx            R_Time_Year						DS	1;年
   132 00:00AE: xx            R_Time_Week						DS	1;0是星期天，1是星期一---
   133                        
   134 00:00AF: xx            R_Time_Min_Another				DS	1;第二时间的分钟
   135 00:00B0: xx            R_Time_Hr_Another				DS	1;第二时间的小时
   136                        
   137 00:00B1: xx            R_Timer_Ms						DS	1;定时器10ms次数
   138 00:00B2: xx            R_Timer_Sec						DS	1;定时器显示时间/正计时时间秒数
   139 00:00B3: xx            R_Timer_Min						DS	1;定时器显示时间/正计时时间分钟
   140 00:00B4: xx            R_Timer_Hr						DS	1;定时器显示时间/正计时时间小时
   141 00:00B5: xx            R_Timer_X						DS	1
   142 00:00B6: xx            R_Timer_X_1						DS	1
   143                        
   144                        R_Timer_Hr_Measurement			EQU	BUF4
   145                        R_Timer_Min_Measurement			EQU	BUF4+1
   146                        R_Timer_Sec_Measurement			EQU	BUF4+2
   147                        R_Timer_Ms_Measurement			EQU	BUF4+3
   148                        
   149                        
   150                        D_Beep_Open_Last_Time_Alarm		EQU	11
   151                        
   152 00:00B7: xx            R_Alarm_Clock_Min				DS	1;闹钟的分钟;	10
   153 00:00B8: xx            R_Alarm_Clock_Hr 				DS	1;闹钟的小时;	11
   154 00:00B9: xx            R_Alarm_Mode					DS	1;闹钟的模式，0是闹钟关闭，1是闹钟开启，2是循环闹铃
   155                        
   156                        
   157                        D_Snz_Time						EQU	5
   158                        D_Snz_Frequency					EQU	6
   159                        
   160                        
   161                        
   162                        
   163                        
   164                        
   165                        ;==================================================
   166                        ;==================================================
   167                        ;===================================================
   168                        Calculator_Str_Addr	EQU		$
   169                        
   170                        
   171                        
   172                        
   173                        ; Sys_Flag_Cala		DS		1
   174                        MAX_DIG		.EQU	8
   175                        Dig			.EQU	MAX_DIG
   176                        MAX_BYTE	.EQU	MAX_DIG / 2
   177                        
   178                        FD			.EQU	MAX_DIG
   179 00:00BA: xx xx xx xx   BUF1		DS		MAX_DIG+1
   179 00:00BA: xx xx xx xx   
   179 00:00BA: xx            
   180                        ;这个加1是存储小数点位置的，bit7是存储数据的正负，其余是存储有效移位次数
   181 00:00C3: xx xx xx xx   BUF2		DS		MAX_DIG+1;
   181 00:00C3: xx xx xx xx   
   181 00:00C3: xx            
   182 00:00CC: xx xx xx xx   BUF3		DS		MAX_DIG
   182 00:00CC: xx xx xx xx   
   183 00:00D4: xx xx xx xx   BUF4		DS		MAX_DIG
   183 00:00D4: xx xx xx xx   
   184 00:00DC: xx xx xx xx   BUF5		DS		MAX_DIG
   184 00:00DC: xx xx xx xx   
   185 00:00E4: xx xx xx xx   BUF6		DS		4
   186 00:00E8: xx xx xx xx   IBUF		DS		MAX_DIG+1
   186 00:00E8: xx xx xx xx   
   186 00:00E8: xx            
   187                        ACC			.EQU		P_Temp
   188                        IFD			.EQU	MAX_BYTE
   189                        ERR_NULL	.EQU	0
   190                        ERR_DIV0	.EQU	1
   191                        Err_FUll	.EQU	2
   192                        ERR_SQRT	.EQU	3
   193                        ERR_M		.EQU	4
   194                        ERR_GT		.EQU	5
   195                        ERR_MU		.EQU	6
   196                        ERR_PCT		.EQU	7
   197                        ERR_IN		.EQU	8
   198 00:00F1: xx            R_Mode_Set					DS	1;设置模式
   199                        
   200                        DINX		.EQU	P_Temp+6
   201                        
   202                        
   203                        D1FD		.EQU	MAX_BYTE
   204                        DFD			.EQU	MAX_BYTE
   205                        
   206                        
   207                        
   208                        ; Calculator_State		DS	1
   209                        Calculator_State_Init				.EQU	0
   210                        Calculator_State_Symbol_First_Press	.EQU	1
   211                        Calculator_State_Input				.EQU	2
   212                        Calculator_State_Equal_Press		.EQU	3
   213                        ; Calculator_Symbol_State	DS	1
   214                        State_Null			.EQU	0
   215                        State_Add			.EQU	1
   216                        State_SUB			.EQU	2
   217                        State_Mul			.EQU	3
   218                        State_DIV			.EQU	4
   219                        State_Involution	.EQU	5
   220                        
   221                        
   222                        State_Equal			.EQU	1
   223                        
   224                        
   225                        Calc_Init				.EQU	0	;初始化，无意义
   226                        Calc_First_Output		.EQU	1	;按键第一次按下加减乘除符号键
   227                        Calc_First_Output_		.EQU	2	;第一次运算没有数字输入
   228                        ;---------------------------------------
   229 00:00F2: xx xx xx xx   P_Temp			ds	10
   229 00:00F2: xx xx xx xx   
   229 00:00F2: xx xx         
   230                        ;显示从写P_Temp+4
   231                        ;---------------------------------------
   232                        ;---------------------------------------
   233                        ;***************************************
   234                        .ENDS
   235                        ;***************************************
   236                        .Udata
   237                        ;---------------------------------------
   238                        	ORG    1880H
   239                        ;---------------------------------------
   240                        ;---------------------------------------
   241                        
   242                        ; IBUF		DS		MAX_DIG+1
   243                        
   244 00:1880: xx xx xx xx   DBUF		DS		MAX_BYTE+1
   244 00:1880: xx            
   245 00:1885: xx xx xx xx   D1BUF		DS		MAX_BYTE+1
   245 00:1885: xx            
   246 00:188A: xx xx xx xx   BBUF		DS		MAX_BYTE+1
   246 00:188A: xx            
   247                        
   248                        
   249                        
   250                        
   251                        
   252                        
   253 00:188F: xx            ERR			DS		1
   254 00:1890: xx            R_Mode						DS	1;0是时钟模式，1是闹钟，2是正计时，3是第二时钟，4是倒计时
   255                        
   256 00:1891: xx            R_Set_Mode_Exit_Time			DS	1;自动设置退出时间
   257                        D_Set_Mode_Exit_Time			EQU	81
   258 00:1892: xx            R_Alarm_Clock_Open_Beep_Time	DS	1;32Hz转化为16hz
   259 00:1893: xx            R_Close_Beep_Time				DS	1;闹铃关闭时间，闹铃响多久
   260 00:1894: xx            R_Voice_Unit					DS	1;闹铃响的次数，一秒响几次
   261                        
   262 00:1895: xx            R_Snz_Time						DS	1;贪睡闹钟的分钟;
   263 00:1896: xx            R_Snz_Frequency					DS	1;贪睡闹钟的小时;
   264                        
   265 00:1897: xx            Calculator_State				DS	1
   266 00:1898: xx            Calculator_Symbol_State			DS	1
   267 00:1899: xx            Calculator_State_Mechine		DS	1
   268 00:189A: xx            Calculator_Symbol_State_Equal	DS	1
   269                        
   270                        .ENDS
   270                        
    22                        	.include	50P016.mac
     1                        ;------------------------------------
     2                        PB2_PB2_COMS MACRO
     3                                RMB0    PADF0
     4                                SMB2    PBTYPE ;COMS
     5                                ENDM
     6                        PB2_PB2_NOMS MACRO
     7                                RMB0    PADF0
     8                                RMB2    PBTYPE ;NOMS
     9                                ENDM
    10                        PB2_PWM MACRO
    11                                SMB0    PADF0
    12                                SMB2    PBTYPE ;COMS
    13                                ENDM
    14                        PB3_PB3_COMS MACRO
    15                                RMB1    PADF0
    16                                SMB3    PBTYPE ;NMOS
    17                                ENDM
    18                        PB3_PB3_NOMS MACRO
    19                                RMB1    PADF0
    20                                RMB3    PBTYPE ;CMOS
    21                                ENDM
    22                        PB3_PWM MACRO
    23                                SMB1    PADF0
    24                                SMB3    PBTYPE ;CMOS
    25                                ENDM
    26                        
    27                        PA4_PA4 MACRO
    28                                RMB3    PADF0
    29                                RMB4    PADF0
    30                                ENDM
    31                        PA4_IR_FSUB     MACRO
    32                                SMB3    PADF0
    33                                RMB4    PADF0
    34                                ENDM
    35                        PA4_IR_TMR0_D2  MACRO
    36                                RMB3    PADF0
    37                                SMB4    PADF0
    38                                ENDM
    39                        PA4_IR_TMR0_D3  MACRO
    40                                SMB3    PADF0
    41                                SMB4    PADF0
    42                                ENDM
    43                        
    44                        PA7_PA7 MACRO
    45                                RMB2    PADF0
    46                                ENDM
    47                        
    48                        PA7_EXT MACRO
    49                                SMB2    PADF0 ;falling edge trigger
    50                                ENDM
    51                        
    52                        PC45_PC45       MACRO
    53                                RMB4    PCSEG
    54                                ENDM
    55                        
    56                        PC67_PC67       MACRO
    57                                RMB5    PCSEG
    58                                RMB4    DIVC
    59                                ENDM
    60                        
    61                        PC67_EL01       MACRO
    62                                RMB5    PCSEG
    63                                SMB4    DIVC
    64                                ENDM
    65                        
    66                        PC03_SEG       MACRO
    67                                SMB0    PCSEG
    68                                SMB1    PCSEG
    69                                SMB2    PCSEG
    70                                SMB3    PCSEG
    71                                ENDM
    72                        
    73                        PC45_SEG       MACRO
    74                                SMB4    PCSEG
    75                                ENDM
    76                        PC67_SEG	MACRO
    77                                SMB5    PCSEG
    78                                ENDM
    79                        
    80                        PD03_SEG	MACRO
    81                        		SMB6	PCSEG
    82                                ENDM
    83                        PD03_RFC	MACRO
    84                        		RMB6	PCSEG
    85                        ;		RMB0	PDSEG
    86                        ;		RMB1	PDSEG
    87                        ;		RMB2	PDSEG
    88                        ;		RMB3	PDSEG
    89                        		SMB0	RFCC0
    90                        		SMB1	RFCC0
    91                        		SMB2	RFCC0
    92                        		SMB3	RFCC0
    93                                ENDM
    94                        PD03_PD03	MACRO
    95                        		RMB6	PCSEG
    96                        ;		RMB0	PDSEG
    97                        ;		RMB1	PDSEG
    98                        ;		RMB2	PDSEG
    99                        ;		RMB3	PDSEG
   100                        		RMB0	RFCC0
   101                        		RMB1	RFCC0
   102                        		RMB2	RFCC0
   103                        		RMB3	RFCC0
   104                                ENDM
   105                        PD0_SEG	MACRO
   106                        ;		RMB6	PCSEG
   107                        		SMB0	PDSEG
   108                                ENDM
   109                        PD1_SEG	MACRO
   110                        ;		RMB6	PCSEG
   111                        		SMB1	PDSEG
   112                                ENDM
   113                        PD2_SEG	MACRO
   114                        ;		RMB6	PCSEG
   115                        		SMB2	PDSEG
   116                                ENDM
   117                        PD3_SEG	MACRO
   118                        		RMB6	PCSEG
   119                        		SMB3	PDSEG
   120                                ENDM
   121                        
   122                        PD47_SEG	MACRO
   123                        		SMB7	PCSEG
   124                                ENDM
   125                        PD47_RFC	MACRO
   126                        		RMB7	PCSEG
   127                        ;		RMB4	PDSEG
   128                        ;		RMB5	PDSEG
   129                        ;		RMB6	PDSEG
   130                        ;		RMB7	PDSEG
   131                        		SMB4	RFCC0
   132                        		SMB5	RFCC0
   133                        		SMB6	RFCC0
   134                        		SMB7	RFCC0
   135                                ENDM
   136                        PD47_PD47	MACRO
   137                        		RMB7	PCSEG
   138                        ;		RMB4	PDSEG
   139                        ;		RMB5	PDSEG
   140                        ;		RMB6	PDSEG
   141                        ;		RMB7	PDSEG
   142                        		RMB4	RFCC0
   143                        		RMB5	RFCC0
   144                        		RMB6	RFCC0
   145                        		RMB7	RFCC0
   146                                ENDM
   147                        PD4_SEG	MACRO
   148                        ;		RMB7	PCSEG
   149                        		SMB4	PDSEG
   150                                ENDM
   151                        PD5_SEG	MACRO
   152                        ;		RMB7	PCSEG
   153                        		SMB5	PDSEG
   154                                ENDM
   155                        PD6_SEG	MACRO
   156                        ;		RMB7	PCSEG
   157                        		SMB6	PDSEG
   158                                ENDM
   159                        PD7_SEG	MACRO
   160                        		RMB7	PCSEG
   161                        		SMB7	PDSEG
   162                                ENDM
   163                        
   164                        PC_PD_SEG	MACRO
   165                        		lda		#$FF
   166                        		STA		PCSEG	;S1~S7,S8~S15
   167                                ENDM
   168                        
   169                        LCD_2COM	MACRO
   170                        		SMB0	LCDCOM
   171                        		RMB1	LCDCOM
   172                        		RMB2	LCDCOM
   173                                ENDM
   174                        LCD_3COM	MACRO
   175                        		RMB0	LCDCOM
   176                        		SMB1	LCDCOM
   177                        		RMB2	LCDCOM
   178                                ENDM
   179                        LCD_4COM	MACRO
   180                        		SMB0	LCDCOM
   181                        		SMB1	LCDCOM
   182                        		RMB2	LCDCOM
   183                                ENDM
   184                        LCD_5COM	MACRO
   185                        		RMB0	LCDCOM
   186                        		RMB1	LCDCOM
   187                        		SMB2	LCDCOM
   188                                ENDM
   189                        LCD_6COM	MACRO
   190                        		SMB0	LCDCOM
   191                        		RMB1	LCDCOM
   192                        		SMB2	LCDCOM
   193                                ENDM
   194                        LCD_7COM	MACRO
   195                        		RMB0	LCDCOM
   196                        		SMB1	LCDCOM
   197                        		SMB2	LCDCOM
   198                                ENDM
   199                        LCD_8COM	MACRO
   200                        		SMB0	LCDCOM
   201                        		SMB1	LCDCOM
   202                        		SMB2	LCDCOM
   203                                ENDM
   204                        
   205                        LCD_ENCH_EN		MACRO
   206                        		SMB6	LCDCOM
   207                                ENDM
   208                        LCD_ENCH_DIS	MACRO
   209                        		RMB6	LCDCOM
   210                                ENDM
   211                        
   212                        LCD_C_TYPE	MACRO
   213                        		SMB7	LCDCOM
   214                        		SMB0	PCSEG
   215                        		SMB1	PCSEG
   216                        		SMB2	PCSEG
   217                        		SMB3	PCSEG
   218                                ENDM
   219                        LCD_DRIVE_2	MACRO
   220                        		SMB0	LCDCTRL
   221                        		RMB1	LCDCTRL
   222                                ENDM
   223                        LCD_DRIVE_4	MACRO
   224                        		RMB0	LCDCTRL
   225                        		SMB1	LCDCTRL
   226                                ENDM
   227                        LCD_DRIVE_8	MACRO
   228                        		SMB0	LCDCTRL
   229                        		SMB1	LCDCTRL
   230                                ENDM
   231                        LCD_DRIVE_FULL	MACRO
   232                        		RMB0	LCDCTRL
   233                        		RMB1	LCDCTRL
   234                                ENDM
   235                        LCD_C_1_2_BAIS_3V	MACRO
   236                        		RMB2	LCDCTRL
   237                        		RMB3	LCDCTRL
   238                                ENDM
   239                        LCD_C_1_3_BAIS_3V	MACRO
   240                        		SMB2	LCDCTRL
   241                        		RMB3	LCDCTRL
   242                                ENDM
   243                        LCD_C_1_3_BAIS_4V	MACRO
   244                        		SMB2	LCDCTRL
   245                        		SMB3	LCDCTRL
   246                                ENDM
   247                        
   248                        LCD_R_TYPE	MACRO
   249                        		RMB7	LCDCOM
   250                                ENDM
   251                        LCD_R_1_2_BAIS	MACRO
   252                        		SMB2	LCDCTRL
   253                        		SMB3	LCDCTRL
   254                                ENDM
   255                        LCD_R_1_3_BAIS	MACRO
   256                        		RMB2	LCDCTRL
   257                        		RMB3	LCDCTRL
   258                                ENDM
   259                        LCD_R_1_4_BAIS	MACRO
   260                        		SMB2	LCDCTRL
   261                        		RMB3	LCDCTRL
   262                                ENDM
   263                        ;------------------------------------
   264                        Fext_WEAK       MACRO
   265                                RMB0    SYSCLK
   266                                ENDM
   267                        Fext_STRONG     MACRO
   268                                SMB0    SYSCLK
   269                                ENDM
   270                        
   271                        Fext_OFF        MACRO
   272                                RMB1    SYSCLK
   273                                ENDM
   274                        Fext_ON         MACRO
   275                                SMB1    SYSCLK
   276                                ENDM
   277                        
   278                        Fosc_OFF        MACRO
   279                                RMB2    SYSCLK
   280                                ENDM
   281                        Fosc_ON         MACRO
   282                                SMB2    SYSCLK
   283                                ENDM
   284                        
   285                        Fext_Xtal       MACRO
   286                                RMB3    SYSCLK
   287                                ENDM
   288                        Fext_RC         MACRO
   289                                SMB3    SYSCLK
   290                                ENDM
   291                        
   292                        Fsys_4MHZ MACRO
   293                                RMB4    SYSCLK
   294                                RMB5    SYSCLK
   295                                ENDM
   296                        Fsys_2MHZ MACRO
   297                                SMB4    SYSCLK
   298                                RMB5    SYSCLK
   299                                ENDM
   300                        Fsys_1MHZ MACRO
   301                                RMB4    SYSCLK
   302                                SMB5    SYSCLK
   303                                ENDM
   304                        Fsys_500K MACRO
   305                                SMB4    SYSCLK
   306                                SMB5    SYSCLK
   307                                ENDM
   308                        
   309                        Fsub_Fext MACRO
   310                                SMB6    SYSCLK
   311                                ENDM
   312                        Fsub_32KCLK     MACRO
   313                                RMB6    SYSCLK
   314                                ENDM
   315                        
   316                        Fcpu_Fext  MACRO
   317                                SMB7    SYSCLK
   318                                ENDM
   319                        Fcpu_Fsys  MACRO
   320                                RMB7    SYSCLK
   321                                ENDM
   322                        
   323                        ;------------------------------------
   324                        DIV_8KHZ  MACRO
   325                                RMB0    DIVC
   326                                RMB1    DIVC
   327                        		RMB5	DIVC
   328                                ENDM
   329                        DIV_16KHZ  MACRO
   330                                SMB0    DIVC
   331                                RMB1    DIVC
   332                        		RMB5	DIVC
   333                                ENDM
   334                        DIV_512HZ  MACRO
   335                                RMB0    DIVC
   336                                SMB1    DIVC
   337                        		RMB5	DIVC
   338                                ENDM
   339                        DIV_1KHZ  MACRO
   340                                SMB0    DIVC
   341                                SMB1    DIVC
   342                        		RMB5	DIVC
   343                                ENDM
   344                        DIV_256HZ  MACRO
   345                        		SMB5	DIVC
   346                                ENDM
   347                        ;------------------------------------
   348                        WDTC_CLK_256HZ   MACRO
   349                                RMB0    WDTC
   350                                RMB1    WDTC
   351                                ENDM
   352                        WDTC_CLK_DIV     MACRO
   353                                SMB0    WDTC
   354                                RMB1    WDTC
   355                                ENDM
   356                        WDTC_CLK_TMR1   MACRO
   357                                RMB0    WDTC
   358                                SMB1    WDTC
   359                                ENDM
   360                        WDTC_CLK_LCDS    MACRO
   361                                SMB0    WDTC
   362                                SMB1    WDTC
   363                                ENDM
   364                        
   365                        WDTC_CLR MACRO
   366                                RMB2    WDTC
   367                                ENDM
   368                        
   369                        WDTC_ON  MACRO
   370                                SMB3    WDTC
   371                                ENDM
   372                        WDTC_OFF MACRO
   373                                RMB3    WDTC
   374                                ENDM
   375                        
   376                        IF_WDTC MACRO   LAB
   377                                BBS4    WDTC,LAB
   378                                ENDM
   379                        
   380                        ;------------------------------------
   381                        TMR0_ON MACRO
   382                                SMB0    TMRC
   383                                ENDM
   384                        TMR0_OFF MACRO
   385                                RMB0    TMRC
   386                                ENDM
   387                        TMR0_CLK_FOSC   MACRO
   388                                SMB0    TMCLK
   389                                RMB1    TMCLK
   390                                ENDM
   391                        TMR0_CLK_FSUB    MACRO
   392                                RMB0    TMCLK
   393                                RMB1    TMCLK
   394                                RMB0	PADF1
   395                                ENDM
   396                        TMR0_CLK_128K	macro
   397                        		RMB0    TMCLK
   398                                SMB1    TMCLK
   399                                ENDM
   400                        TMR0_CLK_32K	macro
   401                        		RMB0    TMCLK
   402                                RMB1    TMCLK
   403                                SMB0	PADF1
   404                                ENDM
   405                        TMR0_CLK_1M   MACRO
   406                                SMB0    TMCLK
   407                                SMB1    TMCLK
   408                                RMB6	TMRC
   409                                ENDM
   410                        
   411                        TMR1_ON MACRO
   412                                SMB1    TMRC
   413                                ENDM
   414                        TMR1_OFF MACRO
   415                                RMB1    TMRC
   416                                ENDM
   417                        TMR1_CLK_TMR0   MACRO
   418                                RMB2    TMCLK
   419                                RMB3    TMCLK
   420                                ENDM
   421                        TMR1_CLK_512Hz    MACRO
   422                                SMB2    TMCLK
   423                                RMB3    TMCLK
   424                                ENDM
   425                        TMR1_CLK_128K	macro
   426                        		RMB2    TMCLK
   427                                SMB3    TMCLK
   428                                ENDM
   429                        TMR1_CLK_1M		macro
   430                        		SMB2    TMCLK
   431                                SMB3    TMCLK
   432                                ENDM
   433                        
   434                        TMR2_ON MACRO
   435                                SMB2    TMRC
   436                                ENDM
   437                        TMR2_OFF MACRO
   438                                RMB2    TMRC
   439                                ENDM
   440                        ;TMR2_CLK_1KDIV2    MACRO
   441                        ;       RMB4    TMCLK
   442                        ;        RMB5    TMCLK
   443                        ;        ENDM
   444                        ;TMR2_CLK_1KDIV3    MACRO
   445                        ;        SMB4    TMCLK
   446                        ;        RMB5    TMCLK
   447                        ;        ENDM
   448                        ;TMR2_CLK_FOSCDIV8  MACRO
   449                        ;        RMB4    TMCLK
   450                        ;        SMB5    TMCLK
   451                        ;        ENDM
   452                        ;TMR2_CLK_FSUB      MACRO
   453                        ;        SMB4    TMCLK
   454                        ;        SMB5    TMCLK
   455                        ;        ENDM
   456                        
   457                        
   458                        TONE_2KHZ       MACRO
   459                                RMB2    DIVC
   460                                RMB3    DIVC
   461                                ENDM
   462                        TONE_TMR0_2     MACRO
   463                                SMB2    DIVC
   464                                RMB3    DIVC
   465                                ENDM
   466                        TONE_L       MACRO
   467                                RMB2    DIVC
   468                                SMB3    DIVC
   469                                ENDM
   470                        TONE_H       MACRO
   471                                SMB2    DIVC
   472                                SMB3    DIVC
   473                                ENDM
   474                        ;------------------------------------
   475                        EN_DIV_IRQ     MACRO
   476                                SMB0    IER
   477                                ENDM
   478                        EN_TMR0_IRQ     MACRO
   479                                SMB1    IER
   480                                ENDM
   481                        EN_TMR1_IRQ     MACRO
   482                                SMB2    IER
   483                                ENDM
   484                        EN_TMR2_IRQ     MACRO
   485                                SMB3    IER
   486                                ENDM
   487                        EN_KEY_IRQ      MACRO
   488                                SMB4    IER
   489                                ENDM
   490                        EN_PA_IRQ      MACRO
   491                                SMB4    IER
   492                                ENDM
   493                        EN_EXT_IRQ      MACRO
   494                                SMB5    IER
   495                                ENDM
   496                        EN_LCD_IRQ      MACRO
   497                                SMB6    IER
   498                                ENDM
   499                        
   500                        DIS_DIV_IRQ     MACRO
   501                                RMB0    IER
   502                                ENDM
   503                        DIS_TMR0_IRQ     MACRO
   504                                RMB1    IER
   505                                ENDM
   506                        DIS_TMR1_IRQ     MACRO
   507                                RMB2    IER
   508                                ENDM
   509                        DIS_TMR2_IRQ     MACRO
   510                                RMB3    IER
   511                                ENDM
   512                        DIS_KEY_IRQ      MACRO
   513                                RMB4    IER
   514                                ENDM
   515                        DIS_PA_IRQ		 MACRO
   516                                RMB4    IER
   517                                ENDM
   518                        DIS_EXT_IRQ      MACRO
   519                                RMB5    IER
   520                                ENDM
   521                        DIS_LCD_IRQ      MACRO
   522                                RMB6    IER
   523                                ENDM
   524                        
   525                        CLR_DIV_IRQ_FLAG MACRO
   526                                RMB0    IFR
   527                                ENDM
   528                        CLR_TMR0_IRQ_FLAG      MACRO
   529                                RMB1    IFR
   530                                ENDM
   531                        CLR_TMR1_IRQ_FLAG      MACRO
   532                                RMB2    IFR
   533                                ENDM
   534                        CLR_TMR2_IRQ_FLAG      MACRO
   535                                RMB3    IFR
   536                                ENDM
   537                        CLR_KEY_IRQ_FLAG      MACRO
   538                                RMB4    IFR
   539                                ENDM
   540                        CLR_PA_IRQ_FLAG      MACRO
   541                                RMB4    IFR
   542                                ENDM
   543                        CLR_PA_IRQF      MACRO
   544                                RMB4    IFR
   545                                ENDM
   546                        CLR_EXT_IRQ_FLAG       MACRO
   547                                RMB5    IFR
   548                                ENDM
   549                        CLR_LCD_IRQ_FLAG       MACRO
   550                                RMB6    IFR
   551                                ENDM
   552                        
   553                        IF_DIV_IRQ_FLAG MACRO   LAB1
   554                                BBS0    IFR,LAB1
   555                                ENDM
   556                        IF_TMR0_IRQ_FLAG MACRO   LAB1
   557                                BBS1    IFR,LAB1
   558                                ENDM
   559                        IF_TMR1_IRQ_FLAG MACRO   LAB1
   560                                BBS2    IFR,LAB1
   561                                ENDM
   562                        IF_TMR2_IRQ_FLAG MACRO   LAB1
   563                                BBS3    IFR,LAB1
   564                                ENDM
   565                        IF_KEY_IRQ_FLAG MACRO   LAB1
   566                                BBS4    IFR,LAB1
   567                                ENDM
   568                        IF_EXT_IRQ_FLAG MACRO   LAB1
   569                                BBS5    IFR,LAB1
   570                                ENDM
   571                        IF_LCD_IRQ_FLAG MACRO   LAB1
   572                                BBS6    IFR,LAB1
   573                                ENDM
   574                        ;------------------------------------
   575                        LCD_ON           MACRO
   576                                SMB4    TMRC
   577                                ENDM
   578                        LCD_OFF          MACRO
   579                                RMB4    TMRC
   580                                ENDM
   581                        
   582                        PWM_ON  MACRO
   583                        		SMB0	SYSCLK	;Strong Mode
   584                                SMB7    TMRC
   585                                ENDM
   586                        PWM_OFF MACRO
   587                                RMB7    TMRC
   588                        ;		lda		R_Strong_2S
   589                        ;		bne		?Skip
   590                        		RMB0	SYSCLK	;WeakMode
   591                        ?Skip:
   592                                ENDM
   593                        ;DAC_ON		MACRO
   594                        ;	SMB7	P_TMRCTRL
   595                        ;	ENDM
   596                        ;DAC_OFF		MACRO
   597                        ;	RMB7	P_TMRCTRL
   598                        ;	ENDM
   599                        
   600                        IF_PWM_ON       MACRO   LAB
   601                                BBS7    TMRC,LAB
   602                                ENDM
   603                        IF_PWM_OFF      MACRO   LAB
   604                                BBR7    TMRC,LAB
   605                                ENDM
   606                        
   607                        SEL_PWM MACRO
   608                                SMB1    AUDCR
   609                                ENDM
   610                        DAC_LATCH_TMR0	MACRO
   611                        		SMB5	AUDCR
   612                        		ENDM
   613                        SEL_TONE MACRO
   614                                RMB2    AUDCR
   615                                RMB4    AUDCR
   616                                RMB5    AUDCR
   617                                ENDM
   618                        
   619                        SEL_MELODY  MACRO
   620                                RMB2    AUDCR
   621                                SMB4    AUDCR
   622                        ;        SMB5    AUDCR
   623                                RMB5    AUDCR
   624                                ENDM
   625                        SEL_VOICE   MACRO
   626                                SMB2    AUDCR
   627                                RMB4    AUDCR
   628                                SMB5    AUDCR
   629                                ENDM
   630                        ;------------------------------------
   631                        ClrAllRam MACRO
   632                            LDA		#$00
   633                        	LDX		#$FF
   634                        	STA		$1800
   635                        ?ClrAllRamLoop:
   636                        	STA		$1800,X
   637                        	DEX
   638                        	BNE		?ClrAllRamLoop
   639                            ENDM
   640                        ;------------------------------------
   641                        CHECK_LCD	MACRO
   642                        	LDA		#11111110B
   643                        	STA		P_PC_DIR		;PC0 is Output
   644                        	LDA		#11111110B
   645                        	STA		P_PC			;PC0 Output "0"
   646                        	NOP
   647                        	NOP
   648                        	NOP
   649                        	LDA		P_PC
   650                        	AND		#00000010B
   651                        ?_Loop
   652                        	STA		P_Temp+1
   653                        	LDA		#$0F
   654                        ?_LoopPort
   655                        	DEC
   656                        	BNE		?_LoopPort
   657                        	LDA		P_PC
   658                        	AND		#00000010B
   659                        	STA		P_Temp
   660                        	CMP		P_Temp+1
   661                        	BNE		?_Loop
   662                        	BBS1	P_Temp,?LCD_R_Type
   663                        ?LCD_C_Type:
   664                        	LCD_C_TYPE
   665                        	LCD_ENCH_EN
   666                        	LCD_4COM
   667                        	LCD_DRIVE_8
   668                        	LCD_C_1_3_BAIS_3V
   669                        	JMP		?Exit
   670                        ?LCD_R_Type:
   671                        	LCD_R_TYPE
   672                        ;	LCD_ENCH_EN
   673                        	LCD_4COM
   674                        ;	LCD_DRIVE_8
   675                        	LCD_R_1_3_BAIS
   676                        
   677                        ?Exit:
   678                        	LDA		#$00
   679                        	STA		P_PC_IO
   680                        	STA		P_PC
   681                        ;	STA		P_PC_IO_Backup
   682                        ;	STA		P_PC_Backup
   683                        	ENDM
   684                        ;------------------------------------
   685                        ;------------------------------------
   685                        
    23                        	.INCLUDE	MACRO.MAC
     1                        ;***********************************************************************
     2                        BRA_IDX MACRO	MEM
     3                        	if	MEM<$100
     4                        	BRA	($80+MEM)
     5                        	else
     6                        	BRA	(MEM)
     7                        	endif
     8                        	ENDM
     9                        
    10                        LDLN	MACRO	mem
    11                        	if	mem<$100
    12                        	LDA	$780+mem
    13                        	else
    14                        	LDA	$700+mem
    15                        	endif
    16                        	ENDM
    17                        
    18                        LDHN	MACRO	mem
    19                        	if	mem<$100
    20                        	LDA	$F80+mem
    21                        	else
    22                        	LDA	$F00+mem
    23                        	endif
    24                        	ENDM
    25                        
    26                        STLN	MACRO	mem
    27                        	if	mem<$100
    28                        	STA	$780+mem
    29                        	else
    30                        	STA	$700+mem
    31                        	endif
    32                        	ENDM
    33                        
    34                        STHN	MACRO	mem
    35                        	if	mem<$100
    36                        	STA	$F80+mem
    37                        	else
    38                        	STA	$F00+mem
    39                        	endif
    40                        	ENDM
    41                        
    42                        LXLN	MACRO	mem
    43                        	if	mem<$100
    44                        	LDX	$780+mem
    45                        	else
    46                        	LDX	$700+mem
    47                        	endif
    48                        	ENDM
    49                        
    50                        LXHN	MACRO	mem
    51                        	if	mem<$100
    52                        	LDX	$F80+mem
    53                        	else
    54                        	LDX	$F00+mem
    55                        	endif
    56                        	ENDM
    57                        
    58                        SXLN	MACRO	mem
    59                        	if	mem<$100
    60                        	STX	$780+mem
    61                        	else
    62                        	STX	$700+mem
    63                        	endif
    64                        	ENDM
    65                        
    66                        SXHN	MACRO	mem
    67                        	if	mem<$100
    68                        	STX	$F80+mem
    69                        	else
    70                        	STX	$F00+mem
    71                        	endif
    72                        	ENDM
    73                        
    74                        LDLN_X	MACRO	mem
    75                        	if	mem<$100
    76                        	LDA	$780+mem,X
    77                        	else
    78                        	LDA	$700+mem,X
    79                        	endif
    80                        	ENDM
    81                        
    82                        STLN_X	MACRO	mem
    83                        	if	mem<$100
    84                        	STA	$780+mem,X
    85                        	else
    86                        	STA	$700+mem,X
    87                        	endif
    88                        	ENDM
    89                        
    90                        LDHN_X	MACRO	mem
    91                        	if	mem<$100
    92                        	LDA	$F80+mem,X
    93                        	else
    94                        	LDA	$F00+mem,X
    95                        	endif
    96                        	ENDM
    97                        
    98                        STHN_X	MACRO	mem
    99                        	if	mem<$100
   100                        	STA	$F80+mem,X
   101                        	else
   102                        	STA	$F00+mem,X
   103                        	endif
   104                        	ENDM
   105                        
   106                        INCHN_X	MACRO	mem
   107                        	if	mem<$100
   108                        	INC	$F80+mem,X
   109                        	else
   110                        	INC	$F00+mem,X
   111                        	endif
   112                        	ENDM
   113                        
   114                        DECHN_X	MACRO	mem
   115                        	if	mem<$100
   116                        	DEC	$F80+mem,X
   117                        	else
   118                        	DEC	$F00+mem,X
   119                        	endif
   120                        	ENDM
   121                        
   122                        ADCLN	MACRO	mem
   123                        	if	mem<$100
   124                        	ADC	$780+mem
   125                        	else
   126                        	ADC	$700+mem
   127                        	endif
   128                        	ENDM
   129                        
   130                        ADCHN	MACRO	mem
   131                        	if	mem<$100
   132                        	ADC	$F80+mem
   133                        	else
   134                        	ADC	$F00+mem
   135                        	endif
   136                        	ENDM
   137                        
   138                        CMPLN	MACRO	mem
   139                        	if	mem<$100
   140                        	CMP	$780+mem
   141                        	else
   142                        	CMP	$700+mem
   143                        	endif
   144                        	ENDM
   145                        
   146                        CMPHN	MACRO	mem
   147                        	if	mem<$100
   148                        	CMP	$F80+mem
   149                        	else
   150                        	CMP	$F00+mem
   151                        	endif
   152                        	ENDM
   153                        
   154                        INCLN	MACRO	mem
   155                        	if	mem<$100
   156                        	INC	$780+mem
   157                        	else
   158                        	INC	$700+mem
   159                        	endif
   160                        	ENDM
   161                        
   162                        INCHN	MACRO	mem
   163                        	if	mem<$100
   164                        	INC	$F80+mem
   165                        	else
   166                        	INC	$F00+mem
   167                        	endif
   168                        	ENDM
   169                        
   170                        DECLN	MACRO	mem
   171                        	if	mem<$100
   172                        	DEC	$780+mem
   173                        	else
   174                        	DEC	$700+mem
   175                        	endif
   176                        	ENDM
   177                        
   178                        DECHN	MACRO	mem
   179                        	if	mem<$100
   180                        	DEC	$F80+mem
   181                        	else
   182                        	DEC	$F00+mem
   183                        	endif
   184                        	ENDM
   185                        
   186                        LDA_X	MACRO	mem
   187                        	if	mem<$100
   188                        	LDA	$80+mem,X
   189                        	else
   190                        	LDA	mem,X
   191                        	endif
   192                        	ENDM
   193                        
   194                        STA_X	MACRO	mem
   195                        	if	mem<$100
   196                        	STA	$80+mem,X
   197                        	else
   198                        	STA	mem,X
   199                        	endif
   200                        	ENDM
   201                        
   202                        STZ_X	MACRO	mem
   203                        	if	mem<$100
   204                        	STZ	$80+mem,X
   205                        	else
   206                        	STZ	mem,X
   207                        	endif
   208                        	ENDM
   209                        
   210                        INC_X	MACRO	mem
   211                        	if	mem<$100
   212                        	INC	$80+mem,X
   213                        	else
   214                        	INC	mem,X
   215                        	endif
   216                        	ENDM
   217                        
   218                        ADC_X	MACRO	mem
   219                        	if	mem<$100
   220                        	ADC	$80+mem,X
   221                        	else
   222                        	ADC	mem,X
   223                        	endif
   224                        	ENDM
   225                        
   226                        SBC_X	MACRO	mem
   227                        	if	mem<$100
   228                        	SBC	$80+mem,X
   229                        	else
   230                        	SBC	mem,X
   231                        	endif
   232                        	ENDM
   233                        
   234                        CMP_X	MACRO	mem
   235                        	if	mem<$100
   236                        	CMP	$80+mem,X
   237                        	else
   238                        	CMP	mem,X
   239                        	endif
   240                        	ENDM
   241                        
   242                        ASLLN	MACRO	mem
   243                        	if	mem<$100
   244                        	ASL	$780+mem
   245                        	else
   246                        	ASL	$700+mem
   247                        	endif
   248                        	ENDM
   249                        
   250                        LSRLN	MACRO	mem
   251                        	if	mem<$100
   252                        	LSR	$780+mem
   253                        	else
   254                        	LSR	$700+mem
   255                        	endif
   256                        	ENDM
   257                        
   258                        ROLLN	MACRO	mem
   259                        	if	mem<$100
   260                        	ROL	$780+mem
   261                        	else
   262                        	ROL	$700+mem
   263                        	endif
   264                        	ENDM
   265                        
   266                        RORLN	MACRO	mem
   267                        	if	mem<$100
   268                        	ROR	$780+mem
   269                        	else
   270                        	ROR	$700+mem
   271                        	endif
   272                        	ENDM
   273                        
   274                        ASLHN	MACRO	mem
   275                        	if	mem<$100
   276                        	ASL	$F80+mem
   277                        	else
   278                        	ASL	$F00+mem
   279                        	endif
   280                        	ENDM
   281                        
   282                        LSRHN	MACRO	mem
   283                        	if	mem<$100
   284                        	LSR	$F80+mem
   285                        	else
   286                        	LSR	$F00+mem
   287                        	endif
   288                        	ENDM
   289                        
   290                        ROLHN	MACRO	mem
   291                        	if	mem<$100
   292                        	ROL	$F80+mem
   293                        	else
   294                        	ROL	$F00+mem
   295                        	endif
   296                        	ENDM
   297                        
   298                        RORHN	MACRO	mem
   299                        	if	mem<$100
   300                        	ROR	$F80+mem
   301                        	else
   302                        	ROR	$F00+mem
   303                        	endif
   304                        	ENDM
   305                        
   306                        
   307                        BR0	MACRO	PARA,VAR,LABLE
   308                        	BBR@<VAR.mod.8> PARA,LABLE
   309                        	ENDM
   310                        
   311                        BR1	MACRO	PARA,VAR,LABLE
   312                        	BBS@<VAR.mod.8>	PARA,LABLE
   313                        	ENDM
   314                        
   315                        xSETB	MACRO	flag,bit
   316                        	SMB@<bit>  flag
   317                        	ENDM
   318                        
   319                        xCLRB	MACRO	flag,bit
   320                        	RMB@<bit>  flag
   321                        	ENDM
   321                        
    24                        	.INCLUDE	Calculator\Calculator_MAC.asm
     1                        .MACRO	LJNZ Addr
     2                        	.local _add
     3                        	BEQ		_add
     4                        	JMP		Addr
     5                        	_add:
     6                        .ENDMACRO
     7                        ;===============================================================.
     8                        .MACRO	JNZ Addr									;ZΪ0��ת
     9                        	BNE		Addr
    10                        .ENDMACRO
    11                        ;================================================================
    12                        .MACRO	LJZ	Addr
    13                        	.local _add
    14                        	BNE		_add
    15                        	JMP		Addr
    16                        	_add:
    17                        .ENDMACRO
    18                        ;=================================================================
    19                        .MACRO	JE	Ram,Val,Addr,R
    20                        	.if(.blank(R))
    21                        	LDA		Ram
    22                        	CMP		#Val
    23                        	BEQ		Addr
    24                        	.else
    25                        	LDA		Ram
    26                        	CMP		Val
    27                        	BEQ		Addr
    28                        	.endif
    29                        .ENDMACRO
    30                        .MACRO	LJE	Ram,Val,Addr,R
    31                        	.local	_add
    32                        	.if(.blank(R))
    33                        	LDA		Ram
    34                        	CMP		#Val
    35                        	BNE		_add
    36                        	JMP		Addr
    37                        	.else
    38                        	LDA		Ram
    39                        	CMP		Val
    40                        	BNE		_add
    41                        	JMP		Addr
    42                        	.endif
    43                        	_add:
    44                        .ENDMACRO
    45                        ;=========================================================
    46                        .MACRO	JNC	Addr									;CΪ0��ת
    47                        	BCC		Addr
    48                        .ENDMACRO
    48                        
    25                        ;***************************************
    26                        STACK_BOT		EQU		FFH                     ;堆栈底部
    27                        ;***************************************
    28                        	.PROG										;程序开始
    29                        V_RESET:
    30 00:C000: 1A            	NOP
    31 00:C001: 1A            	NOP
    32 00:C002: 1A            	NOP
    33 00:C003: 5E FF         	LDX		#STACK_BOT
    34 00:C005: 1E            	TXS	      ;使用这个值初始化堆栈指针，这通常是为了设置堆栈的底部地址，确保程序运行中堆栈的正确使用。
    35 00:C006: 53 B7         	LDA		#$B7	;#$07
    36 00:C008: 7F 1D         	STA		SYSCLK	;设置系统时钟
    37 00:C00A: 73 3E         	LDA		FUSE
    38 00:C00C: 7F 2F         	STA		MF	;精准主频3.64M
    39                        ;***************************************
    40                        	ClrAllRam	;清空ram
+   40 00:C00E: 53 00          LDA #$0000
+   40 00:C010: 5E FF          LDX #$00FF
+   40 00:C012: 4F 00 18       STA $1800
+   40                        ?ClrAllRamLoop:
+   40 00:C015: 6F 00 18       STA $1800,X
+   40 00:C018: 0F             DEX
+   40 00:C019: 12 FA          BNE ?ClrAllRamLoop
    41                        	WDTC_CLR
+   41 00:C01B: 22 1C          RMB2 WDTC
    42                        	;CHECK_LCD   ;初始化LCD
    43                        ;***************************************定时器初始化，特殊功能寄存器初始化
    44 00:C01D: 53 00         	LDA		#0
    45 00:C01F: 7F 0D         	STA		PADF1  ;定时器0的时钟源选择
    46 00:C021: 7F 10         	STA		TMR0   ;128HZ
    47 00:C023: 7F 12         	STA		TMR1   ;512
    48 00:C025: 7F 14         	STA		TMR2	;定时器的开始数
    49 00:C027: 7F 18         	STA		DIVC    ;分频控制器，定时器与DICV异步   2048
    50 00:C029: 7F 0E         	STA		IER     ;不允许中断
    51 00:C02B: 7F 0F         	STA		IFR     ;中断请求标志
    52 00:C02D: 7F 1F         	STA		AUD0    ;pwm输出值设置
    53 00:C02F: 7F 20         	STA		AUDCR   ;
    54 00:C031: 7F 05         	STA		PB
    55                        ;***************************************LCD初始化
    56                        	LCD_C_TYPE
+   56 00:C033: 2F 1A          SMB7 LCDCOM
+   56 00:C035: 28 09          SMB0 PCSEG
+   56 00:C037: 29 09          SMB1 PCSEG
+   56 00:C039: 2A 09          SMB2 PCSEG
+   56 00:C03B: 2B 09          SMB3 PCSEG
    57                        	LCD_ENCH_EN
+   57 00:C03D: 2E 1A          SMB6 LCDCOM
    58                        	;LCD_4COM
    59                        	LCD_DRIVE_8
+   59 00:C03F: 28 19          SMB0 LCDCTRL
+   59 00:C041: 29 19          SMB1 LCDCTRL
    60 00:C043: 22 19         	RMB2	LCDCTRL
    61 00:C045: 2B 19         	SMB3	LCDCTRL
    62 00:C047: 20 1A         	RMB0	P_LCD_COM
    63 00:C049: 29 1A         	SMB1	P_LCD_COM;设置为5com
    64 00:C04B: 25 1A         	RMB5	P_LCD_COM;设置LCD中断频率为32Hz
    65                        ;***************************************端口配置（等待图纸）
    66 00:C04D: 15 F1 C0      	JSR		L_Scankey_INIT
    67 00:C050: 28 1D         	SMB0	P_SYSCLK
    68                        	PB2_PB2_NOMS
+   68 00:C052: 20 0C          RMB0 PADF0
+   68 00:C054: 22 06          RMB2 PBTYPE
    69                        	PB3_PB3_NOMS
+   69 00:C056: 21 0C          RMB1 PADF0
+   69 00:C058: 23 06          RMB3 PBTYPE
    70 00:C05A: 53 00         	LDA		#0
    71 00:C05C: 7F 09         	STA		PCSEG
    72                        	PD03_SEG
+   72 00:C05E: 2E 09          SMB6 PCSEG
    73                        	PD47_SEG;
+   73 00:C060: 2F 09          SMB7 PCSEG
    74 00:C062: 15 D1 C0      	JSR		L_Init_SystemRam_Prog   ;初始化系统RAM并禁用所有断电保留的RAM
    75 00:C065: 15 E0 C0      	JSR		L_Dis_All_DisRam_Prog	;初始化系统RAM并禁用所有断电保留的RAM
    76                        ;***************************************开启中断
    77                        	; SMB0	DIVC
    78                        	; SMB1	DIVC
    79                        	; RMB2	DIVC
    80                        	TMR1_CLK_512Hz;初始化定时器1为256hz,定时器2为512hz
+   80 00:C068: 2A 17          SMB2 TMCLK
+   80 00:C06A: 23 17          RMB3 TMCLK
    81 00:C06C: 53 AE         	LDA		#174
    82 00:C06E: 7F 14         	STA		TMR2
    83                        	LCD_ON
+   83 00:C070: 2C 16          SMB4 TMRC
    84                        	TMR1_ON;半秒计时
+   84 00:C072: 29 16          SMB1 TMRC
    85                        	EN_TMR1_IRQ              ;定时器和LCD使能
+   85 00:C074: 2A 0E          SMB2 IER
    86                        	EN_PA_IRQ;下降沿触发
+   86 00:C076: 2C 0E          SMB4 IER
    87 00:C078: 53 07         	LDA		#$07		;#$07    系统时钟和中断使能
    88 00:C07A: 7F 1D         	STA		SYSCLK		;Strong
    89 00:C07C: 05            	CLI
    90                        
    91                        ;***********************************************************************
    92                        ;***********************************************************************
    93                        MainLoop:
    94 00:C07D: 15 39 C1      	JSR		L_LCD_IRQ_WorkProg
    95 00:C080: 15 58 D7      	JSR		L_Half_Second_Prog
    96 00:C083: 43 94 18      	LDA		R_Voice_Unit
    97 00:C086: 12 F5         	BNE		MainLoop
    98                        
    99 00:C088: 2C 1D         	SMB4	SYSCLK;280k
   100 00:C08A: 7F 1E         	STA		P_HALT
   101 00:C08C: 24 1D         	RMB4	SYSCLK;560k
   102 00:C08E: 17 ED         	BRA		MainLoop
   103                        
   104                        ;***********************************************************************
   105                        ;***********************************************************************
   106                        V_IRQ:
   107 00:C090: 0A            	PHA
   108 00:C091: 73 0E         	LDA		P_IER
   109 00:C093: 71 0F         	AND		P_IFR
   110 00:C095: 7F 9E         	STA		R_Int_Backup
   111                        
   112 00:C097: 3E 9E 31      	BBS6	R_Int_Backup,L_LcdIrq
   113 00:C09A: 3B 9E 12      	BBS3	R_Int_Backup,L_Timer2Irq
   114 00:C09D: 3C 9E 21      	BBS4	R_Int_Backup,L_PaIrp
   115 00:C0A0: 38 9E 08      	BBS0	R_Int_Backup,L_DivIrq
   116 00:C0A3: 3A 9E 13      	BBS2	R_Int_Backup,L_Timer1Irq
   117 00:C0A6: 39 9E 0C      	BBS1	R_Int_Backup,L_Timer0Irq
   118 00:C0A9: 17 24         	BRA		L_EndIrq
   119                        
   120                        L_DivIrq:
   121                        	CLR_DIV_IRQ_FLAG
+  121 00:C0AB: 20 0F          RMB0 IFR
   122 00:C0AD: 17 20         	BRA		L_EndIrq
   123                        
   124                        L_Timer2Irq:
   125                        	CLR_TMR2_IRQ_FLAG
+  125 00:C0AF: 23 0F          RMB3 IFR
   126                        	WDTC_CLR
+  126 00:C0B1: 22 1C          RMB2 WDTC
   127 00:C0B3: 17 1A         	BRA		L_EndIrq
   128                        
   129                        L_Timer0Irq:
   130                        	CLR_TMR0_IRQ_FLAG
+  130 00:C0B5: 21 0F          RMB1 IFR
   131 00:C0B7: 17 16         	BRA		L_EndIrq
   132                        
   133                        L_Timer1Irq:
   134                        	CLR_TMR1_IRQ_FLAG
+  134 00:C0B9: 22 0F          RMB2 IFR
   135                        	WDTC_CLR
+  135 00:C0BB: 22 1C          RMB2 WDTC
   136 00:C0BD: 28 A0         	SMB0	Sys_Flag_B	;设置Half Second Flag
   137 00:C0BF: 17 0E         	BRA		L_EndIrq
   138                        
   139                        L_PaIrp:
   140                        	CLR_KEY_IRQ_FLAG
+  140 00:C0C1: 24 0F          RMB4 IFR
   141                        	EN_LCD_IRQ
+  141 00:C0C3: 2E 0E          SMB6 IER
   142                        	DIS_PA_IRQ
+  142 00:C0C5: 24 0E          RMB4 IER
   143 00:C0C7: 29 9F         	SMB1	Sys_Flag_A
   144 00:C0C9: 17 04         	BRA		L_EndIrq
   145                        L_LcdIrq:
   146                        	CLR_LCD_IRQ_FLAG
+  146 00:C0CB: 26 0F          RMB6 IFR
   147 00:C0CD: 28 9F         	SMB0	Sys_Flag_A	;设置LCD中断标志，32Hz扫描
   148                        L_EndIrq:
   149                        ;	BBS3	IFR,L_Timer2Irq
   150 00:C0CF: 0C            	PLA
   151 00:C0D0: 08            	RTI
   152                        ;***********************************************************************
   153                        .INCLUDE	Init.asm
     1                        ;------------------------------------------------------
     2                        L_Init_SystemRam_Prog:     ;初始化系统RAM的程序数据
     3 00:C0D1: 53 04         	LDA		#4
     4 00:C0D3: 7F A3         	STA		R_Reset_Time
     5 00:C0D5: 53 19         	LDA		#25
     6 00:C0D7: 7F AD         	STA		R_Time_Year
     7 00:C0D9: 53 01         	LDA		#1
     8 00:C0DB: 7F AB         	STA		R_Time_Day
     9 00:C0DD: 7F AC         	STA		R_Time_Month
    10                        	; JSR		L_Auto_Counter_Week
    11 00:C0DF: 09            	RTS
    12                        ;======================================================
    13                        L_Dis_All_DisRam_Prog:
    14 00:C0E0: 53 FF         	LDA		#$FF
    15                        L_All_DisRam:
    16 00:C0E2: 5E 00         	LDX		#0
    17                        L_Loop_DisplayRam:
    18 00:C0E4: 6F 00 18      	STA		LCD_RamAddr,X
    19 00:C0E7: 0B            	INX
    20 00:C0E8: 57 1E         	CPX		#D_LCD_RAM
    21 00:C0EA: 10 F8         	BCC		L_Loop_DisplayRam    ;C=0是跳转
    22 00:C0EC: 09            	RTS
    23                        ;----------------------------------------------------
    24                        L_Clr_All_DisRam_Prog:
    25 00:C0ED: 53 00         	LDA		#0
    26 00:C0EF: 17 F1         	BRA		L_All_DisRam
    27                        
    28                        L_Scankey_INIT:
    29 00:C0F1: 53 FD         	LDA		#11111101B;
    30 00:C0F3: 7F 04         	STA		P_PA_IO;PA0输出,其余输入
    31 00:C0F5: 53 8D         	LDA		#10001101B
    32 00:C0F7: 7F 01         	STA		P_PA	;其他全部下拉
    33 00:C0F9: 53 7C         	LDA		#01111100B
    34 00:C0FB: 7F 02         	STA		P_PA_WAKE;	将PA做唤醒
    35 00:C0FD: 53 00         	LDA		#0
    36 00:C0FF: 7F 08         	STA		P_PC_IO
    37 00:C101: 7F 07         	STA		P_PC
    38 00:C103: 09            	RTS
    39                        
    40                        L_Judgement_Scankey_Prog:
    41                        	; LDA		#11111101B;
    42                        	; STA		P_PA_IO;PA0输出,其余输入
    43 00:C104: 53 8D         	LDA		#10001101B
    44 00:C106: 7F 01         	STA		P_PA	;其他全部下拉
    45 00:C108: 53 00         	LDA		#0
    46 00:C10A: 7F 07         	STA		P_PC;PC口输出0
    47 00:C10C: 09            	RTS
    48                        L_PA_Intput_Low_Prog:
    49 00:C10D: 53 FD         	LDA		#11111101B
    50 00:C10F: 7F 01         	STA		P_PA
    51 00:C111: 09            	RTS
    52                        L_PC0_Output_High_Prog:
    53 00:C112: 53 01         	LDA		#01H
    54 00:C114: 7F 07         	STA		P_PC
    55 00:C116: 09            	RTS
    56                        L_PC1_Output_High_Prog:
    57 00:C117: 53 02         	LDA		#02H
    58 00:C119: 7F 07         	STA		P_PC
    59 00:C11B: 09            	RTS
    60                        L_PC2_Output_High_Prog:
    61 00:C11C: 53 04         	LDA		#04H
    62 00:C11E: 7F 07         	STA		P_PC
    63 00:C120: 09            	RTS
    64                        L_PC3_Output_High_Prog:
    65 00:C121: 53 08         	LDA		#08H
    66 00:C123: 7F 07         	STA		P_PC
    67 00:C125: 09            	RTS
    68                        
    69                        L_PC4_Output_High_Prog:
    70 00:C126: 53 10         	LDA		#10H
    71 00:C128: 7F 07         	STA		P_PC
    72 00:C12A: 09            	RTS
    73                        
    74                        L_PC5_Output_High_Prog:
    75 00:C12B: 53 20         	LDA		#20H
    76 00:C12D: 7F 07         	STA		P_PC
    77 00:C12F: 09            	RTS
    78                        
    79                        ; L_PA257_Input_Low:
    80                        ; 	LDA		#10101101B
    81                        ; 	STA		P_PA	;其他全部下拉
    82                        ; 	RTS
    83                        ; L_PA257_Input_High:
    84                        ; 	LDA		#00000001B
    85                        ; 	STA		P_PA
    86                        ; 	RTS
    87                        L_Scankey_Effictive_Init:
    88 00:C130: 53 F1         	LDA		#11110001B;
    89 00:C132: 7F 01         	STA		P_PA
    90 00:C134: 53 00         	LDA		#0
    91 00:C136: 7F 07         	STA		P_PC
    92 00:C138: 09            	RTS
    92                        
   154                        
   155                        .INCLUDE	Key\ScanKey.ASM
     1                        ;==================================================
     2                        L_LCD_IRQ_WorkProg:;
     3 00:C139: 30 9F 0F      	BBR0	Sys_Flag_A,L_END_LCD_IRQ_WorkProg;32hz扫键
     4 00:C13C: 20 9F         	RMB0	Sys_Flag_A
     5 00:C13E: 15 CD DA      	JSR		L_control_Beep_prog
     6 00:C141: 15 D8 D9      	JSR		L_Update_Timer_Ms_Prog
     7 00:C144: 73 A3         	LDA		R_Reset_Time
     8 00:C146: 12 03         	BNE		L_END_LCD_IRQ_WorkProg
     9 00:C148: 15 72 C1      	JSR		L_Scankey_Prog
    10                        L_END_LCD_IRQ_WorkProg:
    11 00:C14B: 09                RTS
    12                        ; ==============================================
    13                        L_ScanKey_Null_Prog:;如果编码器没有开启退出并且扫描到空键，停止按键扫描
    14 00:C14C: 43 94 18      	LDA		R_Voice_Unit
    15 00:C14F: 12 FA         	BNE		L_END_LCD_IRQ_WorkProg
    16 00:C151: 38 A2 F7      	BBS0	Sys_Flag_D,L_END_LCD_IRQ_WorkProg
    17                        	DIS_LCD_IRQ
+   17 00:C154: 26 0E          RMB6 IER
    18 00:C156: 15 04 C1      	JSR		L_Judgement_Scankey_Prog
    19 00:C159: 09            	RTS
    20                        L_Scankey_Prog_Ineffective:
    21                        
    22 00:C15A: 15 DC C3      	JSR		L_Scankey_usually_Prog
    23 00:C15D: 73 A7         	LDA		P_Scankey_value_Temporary
    24 00:C15F: 12 EA         	BNE		L_END_LCD_IRQ_WorkProg;如果为0则执行空键程序
    25 00:C161: 15 04 C1      	JSR		L_Judgement_Scankey_Prog
    26 00:C164: 25 9F         	RMB5	Sys_Flag_A;清空无效标志位
    27 00:C166: 53 8B         	LDA		#10001011B
    28 00:C168: 71 9F         	AND		Sys_Flag_A
    29 00:C16A: 7F 9F         	STA		Sys_Flag_A
    30 00:C16C: 15 4E DB      	JSR		L_ScanKey_Delay_Prog
    31                        	EN_PA_IRQ
+   31 00:C16F: 2C 0E          SMB4 IER
    32 00:C171: 09            	RTS
    33                        
    34                        ;====================================================
    35                        L_Scankey_Prog:
    36 00:C172: 3D 9F E5      	BBS5	Sys_Flag_A,L_Scankey_Prog_Ineffective
    37 00:C175: 39 9F 07      	BBS1	Sys_Flag_A,L_Scankey_Prog_First_TO;首次扫描判断
    38                        
    39 00:C178: 3E 9F 07      	BBS6	Sys_Flag_A,L_Scankey_Prog_Long_Press;快加情况
    40                        
    41 00:C17B: 32 9F CE      	BBR2	Sys_Flag_A,L_ScanKey_Null_Prog;没有按键扫描标志
    42                        
    43 00:C17E: 09            	RTS
    44                        
    45                        
    46                        
    47                        L_Scankey_Prog_First_TO:
    48 00:C17F: 16 43 C3      	JMP		L_Scankey_Prog_First
    49                        
    50                        L_Scankey_Prog_Long_Press:
    51 00:C182: 15 DC C3      	JSR		L_Scankey_usually_Prog
    52 00:C185: 73 A7         	LDA		P_Scankey_value_Temporary
    53 00:C187: 76 A6         	CMP		P_Scankey_value
    54 00:C189: 13 0A         	BEQ		L_Scankey_Prog_Long_Press_RTS
    55 00:C18B: 26 9F         	RMB6	Sys_Flag_A
    56 00:C18D: 2D 9F         	SMB5	Sys_Flag_A
    57 00:C18F: 15 0B CD      	JSR		L_Clr_All_8Bit_Prog
    58 00:C192: 15 BE C9      	JSR		L_Display_Prog
    59                        L_Scankey_Prog_Long_Press_RTS:
    60                        	RTS
    60 00:C195: 09            
   156                        .INCLUDE	Key\Scankey_First_Press.asm
     1                        ;======================================================================
     2                        ;非设置模式下吗,任何模式Mode键按下触发，更改显示模式,计算器模式下，非0情况下清零
     3                        ;如果按键则跳转回时间模式
     4                        ;======================================================================
     5                        L_Scankey_Mode_Press_Prog:
     6 00:C196: 15 59 DB      	JSR		L_Beep_1s
     7 00:C199: 3F 9F 1C      	BBS7	Sys_Flag_A,L_Scankey_Mode_Press_Prog_TO_Clock_Mode
     8 00:C19C: 15 ED C0      	JSR		L_Clr_All_DisRam_Prog
     9 00:C19F: 43 90 18      	LDA		R_Mode
    10 00:C1A2: 56 04         	CMP		#4
    11 00:C1A4: 11 0B         	BCS		L_Scankey_Mode_Press_Prog_Clr
    12 00:C1A6: 43 90 18      	LDA		R_Mode
    13 00:C1A9: 54 01         	ADC		#1
    14 00:C1AB: 4F 90 18      	STA		R_Mode
    15                        L_Scankey_Mode_Press_Prog_1:
    16 00:C1AE: 16 BE C9      	JMP		L_Display_Prog
    17                        L_Scankey_Mode_Press_Prog_Clr:
    18 00:C1B1: 53 00         	LDA		#0
    19 00:C1B3: 4F 90 18      	STA		R_Mode
    20 00:C1B6: 17 F6         	BRA		L_Scankey_Mode_Press_Prog_1
    21                        
    22                        L_Scankey_Mode_Press_Prog_TO_Clock_Mode:
    23 00:C1B8: 27 9F         	RMB7	Sys_Flag_A
    24 00:C1BA: 43 90 18      	LDA		R_Mode
    25 00:C1BD: 13 D7         	BEQ		L_Scankey_Mode_Press_Prog
    26 00:C1BF: 56 01         	CMP		#1
    27 00:C1C1: 13 0C         	BEQ		L_Scankey_Mode_Press_Prog_Calculator
    28 00:C1C3: 53 00         	LDA		#0
    29 00:C1C5: 4F 90 18      	STA		R_Mode
    30 00:C1C8: 15 ED C0      	JSR		L_Clr_All_DisRam_Prog
    31 00:C1CB: 15 BE C9      	JSR		L_Display_Prog
    32 00:C1CE: 09            	RTS
    33                        L_Scankey_Mode_Press_Prog_Calculator:
    34 00:C1CF: 73 BA         	LDA		BUF1
    35 00:C1D1: 70 BB         	ORA		BUF1+1
    36 00:C1D3: 70 BC         	ORA		BUF1+2
    37 00:C1D5: 70 BD         	ORA		BUF1+3
    38 00:C1D7: 70 BE         	ORA		BUF1+4
    39 00:C1D9: 70 BF         	ORA		BUF1+5
    40 00:C1DB: 12 02         	BNE		L_Scankey_Mode_Press_Prog_Calculator_RTS
    41 00:C1DD: 17 D2         	BRA		L_Scankey_Mode_Press_Prog_Clr
    42                        
    43                        L_Scankey_Mode_Press_Prog_Calculator_RTS:
    44 00:C1DF: 5E 3B         	LDX		#(BUF1+1-RAM)
    45 00:C1E1: 15 C4 CE      	JSR		L_Clear_BUF_Prog
    46 00:C1E4: 15 34 D3      	JSR		L_Display_Calculator_Prog
    47 00:C1E7: 09            	RTS
    48                        
    49                        ;======================================================================
    50                        ;非设置模式下吗,闹钟模式，
    51                        ;短按RESET，在整点报时界面，开启或关闭整点报时，按下触发
    52                        ;在闹钟界面,按下触发闹铃模式的切换，关闭，普通和贪睡
    53                        ;======================================================================
    54                        
    55                        
    55                        
   157                        .INCLUDE	Key\Scankey_First_Set_Mode.asm
     1                        L_Scankey_Set_Mode_First_Press_Prog:
     2 00:C1E8: 2D 9F             SMB5    Sys_Flag_A
     3 00:C1EA: 73 A6             LDA     P_Scankey_value
     4 00:C1EC: 56 16             CMP     #D_Mode_Press
     5 00:C1EE: 13 25             BEQ     L_Scankey_Set_Mode_Mode_First_Press_Prog
     6 00:C1F0: 56 15             CMP     #D_Set_Press
     7 00:C1F2: 13 5C             BEQ     L_Scankey_Set_Mode_Set_Press_First_Press_Prog
     8 00:C1F4: 15 FB C1          JSR     L_Scankey_Set_Mode_First_Press_Prog_1
     9 00:C1F7: 15 9A C9          JSR     L_Display_Set_Mode_Prog
    10 00:C1FA: 09                RTS
    11                        
    12                        L_Scankey_Set_Mode_First_Press_Prog_1:
    13 00:C1FB: 06                CLD
    14 00:C1FC: 04                CLC
    15 00:C1FD: 43 90 18          LDA     R_Mode
    16 00:C200: 18                ROL
    17 00:C201: 1B                TAX
    18 00:C202: 63 0C C2          LDA     Table_Set_Mode_1+1,X
    19 00:C205: 0A                PHA
    20 00:C206: 63 0B C2          LDA     Table_Set_Mode_1,X
    21 00:C209: 0A                PHA
    22                        L_Scankey_Set_Mode_First_Press_Prog_RTS:
    23 00:C20A: 09                RTS
    24                        Table_Set_Mode_1:
    25 00:C20B: 15 C5             DW      L_Scankey_Set_Mode_Prog_Clock-1
    26 00:C20D: 09 C2             DW      L_Scankey_Set_Mode_First_Press_Prog_RTS-1
    27 00:C20F: 1D C7             DW      L_Scankey_Set_Mode_Prog_Alarm_Clock-1
    28 00:C211: 94 C6             DW      L_Scankey_Set_Mode_Prog_Another_Time-1
    29 00:C213: 09 C2             DW      L_Scankey_Set_Mode_First_Press_Prog_RTS-1
    30                        ;==========================================
    31                        ;设置模式下，按下mode键更换设置的情况
    32                        L_Scankey_Set_Mode_Mode_First_Press_Prog:
    33 00:C215: 2D 9F             SMB5    Sys_Flag_A
    34 00:C217: 43 90 18          LDA     R_Mode
    35 00:C21A: 56 01             CMP     #1
    36 00:C21C: 13 24             BEQ     L_Control_Key_Voice_Prog
    37 00:C21E: 56 04             CMP     #4
    38 00:C220: 13 15             BEQ     L_Scankey_Set_Mode_Mode_First_Press_Prog_OUT
    39 00:C222: 1B                TAX
    40 00:C223: 63 4B C2          LDA     Table_Set_Mode,X
    41 00:C226: 7F F2             STA     P_Temp
    42 00:C228: 73 F1             LDA     R_Mode_Set
    43 00:C22A: 76 F2             CMP     P_Temp
    44 00:C22C: 11 0A             BCS     L_Scankey_Set_Mode_Mode_First_Press_Prog_1
    45 00:C22E: 73 F1             LDA     R_Mode_Set
    46 00:C230: 54 01             ADC     #1
    47 00:C232: 7F F1             STA     R_Mode_Set
    48 00:C234: 15 9A C9          JSR     L_Display_Set_Mode_Prog
    49                        L_Scankey_Set_Mode_Mode_First_Press_Prog_OUT:
    50 00:C237: 09                RTS
    51                        
    52                        L_Scankey_Set_Mode_Mode_First_Press_Prog_1:
    53 00:C238: 53 00             LDA     #0
    54 00:C23A: 7F F1             STA     R_Mode_Set
    55 00:C23C: 15 ED C0          JSR     L_Clr_All_DisRam_Prog
    56 00:C23F: 16 BE C9          JMP     L_Display_Prog
    57                        
    58                        L_Control_Key_Voice_Prog:
    59 00:C242: 3D A1 03          BBS5    Sys_Flag_C,L_Control_Key_Voice_Prog_Close
    60 00:C245: 2D A1             SMB5    Sys_Flag_C
    61 00:C247: 09                RTS
    62                        L_Control_Key_Voice_Prog_Close:
    63 00:C248: 25 A1             RMB5    Sys_Flag_C
    64 00:C24A: 09                RTS
    65                        
    66                        Table_Set_Mode:
    67 00:C24B: 0A                DB      10
    68 00:C24C: 00                DB      0
    69 00:C24D: 03                DB      3
    70 00:C24E: 03                DB      3
    71 00:C24F: 00                DB      0
    72                        
    73                        ;============================================
    74                        ;设置模式下按下Set键，退出设置
    75                        ;=============================================
    76                        L_Scankey_Set_Mode_Set_Press_First_Press_Prog:
    77 00:C250: 23 9F             RMB3    Sys_Flag_A
    78 00:C252: 53 00             LDA     #0
    79 00:C254: 7F F1             STA     R_Mode_Set
    80 00:C256: 15 ED C0          JSR     L_Clr_All_DisRam_Prog
    81 00:C259: 15 BE C9          JSR     L_Display_Prog
    82 00:C25C: 09                RTS
    83                        
    84                        
    85                        
    86                        
    87                        
    88                        ;设置模式下的通用函数;(闹钟和第二时间可以使用)
    89                        ;======================================
    90                        ;入口A寄存器存储最大值（16进制），X寄存器存储偏移值
    91                        ;适用于时间的分钟，24小时制是的小时，分钟
    92                        ;P_Temp+4存储最大值,P_Temp+5存储读到的值，P_Temp+3存储改变的函数值
    93                        ;=======================================
    94                        L_Scankey_Input_Set_Mode_Usally:
    95 00:C25D: 7F F6             STA     P_Temp+4
    96 00:C25F: 63 28 18          LDA     Time_Addr,X
    97 00:C262: 15 5C CD          JSR     L_A_HexToHexD
    98 00:C265: 7F F5             STA     P_Temp+3
    99 00:C267: 15 F6 C2          JSR     L_Scankey_Input_Press
   100 00:C26A: 3A A1 28          BBS2    Sys_Flag_C,L_Scankey_Input_Set_Mode_Usally_Low_Bit_RTS
   101 00:C26D: 7F F7             STA     P_Temp+5
   102 00:C26F: 30 F1 32          BBR0    R_Mode_Set,L_Scankey_Input_Set_Mode_Usally_High_Bit;根据R_Mode_Set判断是否为高位
   103                        L_Scankey_Input_Set_Mode_Usally_Low_Bit:
   104 00:C272: 73 F5             LDA     P_Temp+3
   105 00:C274: 51 F0             AND     #F0H
   106 00:C276: 7F F8             STA     P_Temp+6
   107 00:C278: 73 F6             LDA     P_Temp+4
   108 00:C27A: 51 F0             AND     #F0H
   109 00:C27C: 76 F8             CMP     P_Temp+6;判断当前内存的高四位和最大值的高四位，当小于时，直接将输入的值给到低四位
   110 00:C27E: 10 16             BCC     L_Scankey_Input_Set_Mode_Usally_Low_Bit_Conutine
   111 00:C280: 73 F6             LDA     P_Temp+4
   112 00:C282: 51 0F             AND     #0FH
   113 00:C284: 76 F7             CMP     P_Temp+5;判断当前内存的低四位和最大值的低四位，当小于时，直接将输入的值给到低四位
   114 00:C286: 10 0D             BCC     L_Scankey_Input_Set_Mode_Usally_Low_Bit_RTS
   115 00:C288: 73 F8             LDA     P_Temp+6
   116 00:C28A: 70 F7             ORA     P_Temp+5
   117 00:C28C: 15 82 CD          JSR     L_A_HexDToHex
   118 00:C28F: 6F 28 18          STA		Time_Addr,X
   119 00:C292: 15 15 C2          JSR     L_Scankey_Set_Mode_Mode_First_Press_Prog
   120                        L_Scankey_Input_Set_Mode_Usally_Low_Bit_RTS:
   121 00:C295: 09                RTS
   122                        L_Scankey_Input_Set_Mode_Usally_Low_Bit_Conutine:
   123 00:C296: 73 F8             LDA     P_Temp+6
   124 00:C298: 70 F7             ORA     P_Temp+5
   125 00:C29A: 15 82 CD          JSR     L_A_HexDToHex
   126 00:C29D: 6F 28 18          STA		Time_Addr,X
   127 00:C2A0: 15 15 C2          JSR     L_Scankey_Set_Mode_Mode_First_Press_Prog
   128 00:C2A3: 09                RTS
   129                        ;======================================================
   130                        
   131                        L_Scankey_Input_Set_Mode_Usally_High_Bit:
   132 00:C2A4: 15 4A C8          JSR     L_ROL_4Bit_Prog;高4bit将读取到的按键值向左平移4个Bit
   133 00:C2A7: 7F F7             STA     P_Temp+5
   134 00:C2A9: 73 F6             LDA     P_Temp+4
   135 00:C2AB: 51 F0             AND     #F0H
   136 00:C2AD: 76 F7             CMP     P_Temp+5;将最大值和读取到的数比较，当大于时退出
   137 00:C2AF: 13 03             BEQ     L_Scankey_Input_Set_Mode_Usally_High_Bit_Countine_Special
   138 00:C2B1: 11 1B             BCS     L_Scankey_Input_Set_Mode_Usally_High_Bit_Countine;当按键输入值的前四位大于最大值时推出
   139                        
   140                        L_Scankey_Input_Set_Mode_Usally_High_Bit_RTS:
   141 00:C2B3: 09                RTS
   142                        L_Scankey_Input_Set_Mode_Usally_High_Bit_Countine_Special:
   143 00:C2B4: 73 F5             LDA     P_Temp+3
   144 00:C2B6: 51 0F             AND     #0FH
   145 00:C2B8: 7F F8             STA     P_Temp+6
   146 00:C2BA: 73 F6             LDA     P_Temp+4
   147 00:C2BC: 51 0F             AND     #0FH
   148 00:C2BE: 76 F8             CMP     P_Temp+6;将最大值的低四位和对应内存的低四位相比较，小于或等于跳转，否则清零低四位
   149 00:C2C0: 11 0C             BCS     L_Scankey_Input_Set_Mode_Usally_High_Bit_Countine
   150                            ; BEQ     L_Scankey_Input_Set_Mode_Usally_High_Bit_Countine
   151 00:C2C2: 73 F7             LDA     P_Temp+5
   152 00:C2C4: 15 82 CD          JSR     L_A_HexDToHex
   153 00:C2C7: 6F 28 18          STA		Time_Addr,X
   154 00:C2CA: 15 15 C2          JSR     L_Scankey_Set_Mode_Mode_First_Press_Prog
   155 00:C2CD: 09                RTS
   156                        L_Scankey_Input_Set_Mode_Usally_High_Bit_Countine:
   157 00:C2CE: 73 F5             LDA     P_Temp+3;当小于时，直接将按键读取的值给到对应的内存
   158 00:C2D0: 51 0F             AND     #0FH
   159 00:C2D2: 70 F7             ORA     P_Temp+5
   160 00:C2D4: 15 82 CD          JSR     L_A_HexDToHex
   161 00:C2D7: 6F 28 18          STA		Time_Addr,X
   162 00:C2DA: 15 15 C2          JSR     L_Scankey_Set_Mode_Mode_First_Press_Prog
   163 00:C2DD: 09                RTS
   164                        
   165                        L_Scankey_Input_Set_Mode_Hr_usually:
   166 00:C2DE: 7C F9             STX     P_Temp+7
   167 00:C2E0: 15 F6 C2          JSR     L_Scankey_Input_Press
   168 00:C2E3: 7F F6             STA     P_Temp+4
   169 00:C2E5: 3A A1 CB          BBS2    Sys_Flag_C,L_Scankey_Input_Set_Mode_Usally_High_Bit_RTS
   170 00:C2E8: 63 28 18          LDA     Time_Addr,X
   171 00:C2EB: 7F F5             STA     P_Temp+3
   172 00:C2ED: 30 F1 03          BBR0    R_Mode_Set,L_Scankey_Input_Set_Mode_High_Bit_To
   173 00:C2F0: 16 6A C6          JMP     L_Scankey_Input_Set_Mode_Low_Bit
   174                        
   175                        L_Scankey_Input_Set_Mode_High_Bit_To:
   176 00:C2F3: 16 27 C6          JMP     L_Scankey_Input_Set_Mode_High_Bit
   177                        
   178                        
   179                        
   180                        L_Scankey_Input_Press:
   181 00:C2F6: 22 A1             RMB2    Sys_Flag_C
   182 00:C2F8: 73 A6             LDA     P_Scankey_value
   183 00:C2FA: 56 0C             CMP     #D_NUM0_Press
   184 00:C2FC: 13 27             BEQ     L_Input_Prog_Time_Mode_NUM0_Press
   185 00:C2FE: 56 01             CMP     #D_NUM1_Press
   186 00:C300: 13 26             BEQ     L_Input_Prog_Time_Mode_NUM1_Press
   187 00:C302: 56 02             CMP     #D_NUM2_Press
   188 00:C304: 13 25             BEQ     L_Input_Prog_Time_Mode_NUM2_Press
   189 00:C306: 56 03             CMP     #D_NUM3_Press
   190 00:C308: 13 24             BEQ     L_Input_Prog_Time_Mode_NUM3_Press
   191 00:C30A: 56 04             CMP     #D_NUM4_Press
   192 00:C30C: 13 23             BEQ     L_Input_Prog_Time_Mode_NUM4_Press
   193 00:C30E: 56 05             CMP     #D_NUM5_Press
   194 00:C310: 13 22             BEQ     L_Input_Prog_Time_Mode_NUM5_Press
   195 00:C312: 56 08             CMP     #D_NUM6_Press
   196 00:C314: 13 21             BEQ     L_Input_Prog_Time_Mode_NUM6_Press
   197 00:C316: 56 09             CMP     #D_NUM7_Press
   198 00:C318: 13 20             BEQ     L_Input_Prog_Time_Mode_NUM7_Press
   199 00:C31A: 56 0A             CMP     #D_NUM8_Press
   200 00:C31C: 13 1F             BEQ     L_Input_Prog_Time_Mode_NUM8_Press
   201 00:C31E: 56 0B             CMP     #D_NUM9_Press
   202 00:C320: 13 1E             BEQ     L_Input_Prog_Time_Mode_NUM9_Press
   203 00:C322: 2A A1             SMB2    Sys_Flag_C
   204 00:C324: 09                RTS
   205                        L_Input_Prog_Time_Mode_NUM0_Press:
   206 00:C325: 53 00             LDA     #0
   207 00:C327: 09                RTS
   208                        L_Input_Prog_Time_Mode_NUM1_Press:
   209 00:C328: 53 01             LDA     #1
   210 00:C32A: 09                RTS
   211                        L_Input_Prog_Time_Mode_NUM2_Press:
   212 00:C32B: 53 02             LDA     #2
   213 00:C32D: 09                RTS
   214                        L_Input_Prog_Time_Mode_NUM3_Press:
   215 00:C32E: 53 03             LDA     #3
   216 00:C330: 09                RTS
   217                        L_Input_Prog_Time_Mode_NUM4_Press:
   218 00:C331: 53 04             LDA     #4
   219 00:C333: 09                RTS
   220                        L_Input_Prog_Time_Mode_NUM5_Press:
   221 00:C334: 53 05             LDA     #5
   222 00:C336: 09                RTS
   223                        L_Input_Prog_Time_Mode_NUM6_Press:
   224 00:C337: 53 06             LDA     #6
   225 00:C339: 09                RTS
   226                        L_Input_Prog_Time_Mode_NUM7_Press:
   227 00:C33A: 53 07             LDA     #7
   228 00:C33C: 09                RTS
   229                        L_Input_Prog_Time_Mode_NUM8_Press:
   230 00:C33D: 53 08             LDA     #8
   231 00:C33F: 09                RTS
   232                        L_Input_Prog_Time_Mode_NUM9_Press:
   233 00:C340: 53 09             LDA     #9
   234 00:C342: 09                RTS
   235                        
   235                        
   158                        .INCLUDE	Key\Scankey_First_Press_Judgment.asm
     1                        L_Scankey_Prog_First:
     2 00:C343: 73 A5         	LDA		P_Scankey_value_T_1;清空无效标志位
     3 00:C345: 56 01         	CMP		#1
     4 00:C347: 11 0F         	BCS		L_Scankey_Prog_First_1
     5 00:C349: 15 DC C3      	JSR		L_Scankey_usually_Prog
     6 00:C34C: 73 A7         	LDA		P_Scankey_value_Temporary
     7 00:C34E: 7F A6         	STA		P_Scankey_value
     8 00:C350: 78 A5         	INC		P_Scankey_value_T_1
     9                        L_Scankey_Prog_First_RTS:
    10 00:C352: 09            	RTS
    11                        L_ScanKey_Null_Prog_To:
    12 00:C353: 2D 9F         	SMB5	Sys_Flag_A
    13 00:C355: 16 5A C1      	JMP		L_Scankey_Prog_Ineffective
    14                        
    15                        
    16                        
    17                        
    18                        
    19                        L_Scankey_Prog_First_1:
    20 00:C358: 21 9F         	RMB1	Sys_Flag_A
    21 00:C35A: 53 00         	LDA		#0
    22 00:C35C: 7F A5         	STA		P_Scankey_value_T_1
    23 00:C35E: 15 DC C3      	JSR		L_Scankey_usually_Prog
    24 00:C361: 73 A7         	LDA		P_Scankey_value_Temporary
    25 00:C363: 7F A6         	STA		P_Scankey_value
    26 00:C365: 13 EC         	BEQ		L_ScanKey_Null_Prog_To
    27 00:C367: 3D 9F E9      	BBS5	Sys_Flag_A,L_ScanKey_Null_Prog_To
    28 00:C36A: 53 00         	LDA		#0
    29 00:C36C: 4F 93 18      	STA		R_Close_Beep_Time
    30 00:C36F: 4F 94 18      	STA		R_Voice_Unit
    31 00:C372: 4F 91 18      	STA		R_Set_Mode_Exit_Time
    32 00:C375: 4F 92 18      	STA		R_Alarm_Clock_Open_Beep_Time
    33 00:C378: 7F A4         	STA		R_Scankey_Time
    34                        
    35 00:C37A: 2D 9F         	SMB5	Sys_Flag_A
    36 00:C37C: 3C A1 2B      	BBS4	Sys_Flag_C,L_Scankey_Short_ST_SP_Press_Prog_Alarm_TO;闹铃判断
    37 00:C37F: 2A 9F         	SMB2	Sys_Flag_A
    38                        ;=======================
    39                        ;-----按键无效键和按下触发的事件判定
    40 00:C381: 3B 9F 23      	BBS3	Sys_Flag_A,L_Scankey_Set_Mode_First_Press_Prog_TO
    41 00:C384: 73 A6         	LDA		P_Scankey_value
    42 00:C386: 56 16         	CMP		#D_Mode_Press
    43 00:C388: 13 1A         	BEQ		L_Scankey_Mode_Press_Prog_TO
    44 00:C38A: 2F 9F         	SMB7	Sys_Flag_A
    45 00:C38C: 56 15         	CMP		#D_Set_Press
    46 00:C38E: 13 1D         	BEQ		L_Scankey_Set_Press_Prog
    47 00:C390: 43 90 18      	LDA		R_Mode
    48 00:C393: 56 05         	CMP		#5
    49 00:C395: 11 2D         	BCS		L_Scankey_Prog_First_1_OUT
    50 00:C397: 06            	CLD
    51 00:C398: 04            	CLC
    52 00:C399: 18            	ROL
    53 00:C39A: 1B            	TAX
    54 00:C39B: 63 D3 C3      	LDA		Table_Mode+1,X
    55 00:C39E: 0A            	PHA
    56 00:C39F: 63 D2 C3      	LDA		Table_Mode,X
    57 00:C3A2: 0A            	PHA
    58 00:C3A3: 09            	RTS
    59                        L_Scankey_Mode_Press_Prog_TO:
    60 00:C3A4: 16 96 C1      	JMP		L_Scankey_Mode_Press_Prog
    61                        L_Scankey_Set_Mode_First_Press_Prog_TO:
    62 00:C3A7: 16 E8 C1      	JMP		L_Scankey_Set_Mode_First_Press_Prog
    63                        L_Scankey_Short_ST_SP_Press_Prog_Alarm_TO:
    64 00:C3AA: 16 0F DB      	JMP		L_Scankey_Short_ST_SP_Press_Prog_Alarm
    65                        L_Scankey_Set_Press_Prog:
    66 00:C3AD: 2D 9F         	SMB5	Sys_Flag_A
    67 00:C3AF: 43 90 18      	LDA		R_Mode
    68 00:C3B2: 56 01         	CMP		#1
    69 00:C3B4: 13 19         	BEQ		L_Scankey_Prog_First_OUT
    70 00:C3B6: 56 04         	CMP		#4
    71 00:C3B8: 13 15         	BEQ		L_Scankey_Prog_First_OUT
    72 00:C3BA: 53 00         	LDA		#0
    73 00:C3BC: 7F F1         	STA		R_Mode_Set
    74 00:C3BE: 2B 9F         	SMB3	Sys_Flag_A
    75 00:C3C0: 15 9A C9      	JSR		L_Display_Set_Mode_Prog
    76 00:C3C3: 09            	RTS
    77                        
    78                        L_Scankey_Prog_First_1_OUT:
    79 00:C3C4: 53 00         	LDA		#0
    80 00:C3C6: 4F 90 18      	STA		R_Mode
    81 00:C3C9: 15 ED C0      	JSR		L_Clr_All_DisRam_Prog
    82 00:C3CC: 15 BE C9      	JSR		L_Display_Prog
    83                        
    84                        L_Scankey_Prog_First_OUT:
    85 00:C3CF: 2D 9F         	SMB5	Sys_Flag_A
    86 00:C3D1: 09            	RTS
    87                        
    88                        
    89                        Table_Mode:
    90 00:C3D2: 04 C5         	DW		L_Clock_First_Press_Prog-1
    91 00:C3D4: DA D4         	DW		L_Calculator_Frist_Press_Prog-1
    92 00:C3D6: DB C6         	DW		L_Alarm_First_Press_Prog-1
    93 00:C3D8: 93 C6         	DW		L_Clock_Twice_First_Press_Prog-1
    94 00:C3DA: 77 C7         	DW		L_Positive_Timer_First_Press_Prog-1
    95                        
    95                        
   159                        .INCLUDE	Key\Scankey_Normal.asm
     1                        L_Scankey_usually_Prog:
     2 00:C3DC: 15 04 C1      	JSR		L_Judgement_Scankey_Prog;调整按键输入输出模式
     3 00:C3DF: 15 4E DB      	JSR		L_ScanKey_Delay_Prog
     4 00:C3E2: 53 00         	LDA		#0
     5 00:C3E4: 7F A7         	STA		P_Scankey_value_Temporary
     6 00:C3E6: 73 01         	LDA		P_PA
     7 00:C3E8: 51 7C         	AND		#D_PA_Press
     8 00:C3EA: 56 70         	CMP		#D_PA_Value
     9 00:C3EC: 12 08         	BNE		L_Scankey_usually_Prog_Countine;不相等跳转
    10                        L_Scankey_usually_Prog_RTS:
    11 00:C3EE: 09            	RTS
    12                        L_Scankey_Effictive_Prog:
    13 00:C3EF: 2D 9F         	SMB5	Sys_Flag_A
    14 00:C3F1: 53 5A         	LDA		#90
    15 00:C3F3: 7F A7         	STA		P_Scankey_value_Temporary
    16 00:C3F5: 09            	RTS
    17                        L_Scankey_usually_Prog_Countine:
    18 00:C3F6: 7F F3         	STA		P_Temp+1;将读取的按键值存储起来
    19 00:C3F8: 56 74         	CMP		#D_PA2_Press
    20 00:C3FA: 13 1D         	BEQ		L_Scankey_usually_Prog_Countine_PA2
    21 00:C3FC: 56 78         	CMP		#D_PA3_Press
    22 00:C3FE: 13 1E         	BEQ		L_Scankey_usually_Prog_Countine_PA3
    23 00:C400: 56 10         	CMP		#D_PA5_PA6_Press
    24 00:C402: 13 1F         	BEQ		L_Scankey_usually_Prog_Countine_PA5_PA6;先扫描单键单独口的键和多键
    25 00:C404: 15 55 C4      	JSR		L_PC_Output_High_Prog
    26 00:C407: 3D 9F E5      	BBS5	Sys_Flag_A,L_Scankey_Effictive_Prog
    27 00:C40A: 73 F3         	LDA		P_Temp+1
    28 00:C40C: 56 60         	CMP		#D_PA4_Press
    29 00:C40E: 13 2D         	BEQ		L_Scankey_usually_Prog_Countine_PA4
    30 00:C410: 56 50         	CMP		#D_PA5_Press
    31 00:C412: 13 31         	BEQ		L_Scankey_usually_Prog_Countine_PA5
    32 00:C414: 56 30         	CMP		#D_PA6_Press
    33 00:C416: 13 35         	BEQ		L_Scankey_usually_Prog_Countine_PA6
    34                        
    35 00:C418: 09            	RTS
    36                        
    37                        L_Scankey_usually_Prog_Countine_PA2:
    38 00:C419: 53 15         	LDA		#D_B_Press
    39 00:C41B: 7F A7         	STA		P_Scankey_value_Temporary
    40 00:C41D: 09            	RTS
    41                        
    42                        L_Scankey_usually_Prog_Countine_PA3:
    43 00:C41E: 53 16         	LDA		#D_C_Press
    44 00:C420: 7F A7         	STA		P_Scankey_value_Temporary
    45 00:C422: 09            	RTS
    46                        L_Scankey_usually_Prog_Countine_PA5_PA6:;
    47 00:C423: 15 55 C4      	JSR		L_PC_Output_High_Prog
    48 00:C426: 73 F5         	LDA		P_Temp+3
    49 00:C428: 70 F7         	ORA		P_Temp+5
    50 00:C42A: 70 F8         	ORA		P_Temp+6
    51 00:C42C: 70 FA         	ORA		P_Temp+8
    52 00:C42E: 12 BF         	BNE		L_Scankey_Effictive_Prog
    53 00:C430: 73 F6         	LDA		P_Temp+4
    54 00:C432: 13 BB         	BEQ		L_Scankey_Effictive_Prog
    55 00:C434: 73 F9         	LDA		P_Temp+7
    56 00:C436: 13 B7         	BEQ		L_Scankey_Effictive_Prog
    57 00:C438: 53 17         	LDA		#D_Beep_Test_Press
    58 00:C43A: 7F A7         	STA		P_Scankey_value_Temporary
    59 00:C43C: 09            	RTS
    60                        
    61                        L_Scankey_usually_Prog_Countine_PA4:
    62 00:C43D: 04            	CLC
    63 00:C43E: 53 00         	LDA		#0
    64 00:C440: 74 F4         	ADC		P_Temp+2
    65 00:C442: 7F A7         	STA		P_Scankey_value_Temporary
    66 00:C444: 09            	RTS
    67                        
    68                        L_Scankey_usually_Prog_Countine_PA5:
    69 00:C445: 04            	CLC
    70 00:C446: 53 07         	LDA		#7
    71 00:C448: 74 F4         	ADC		P_Temp+2
    72 00:C44A: 7F A7         	STA		P_Scankey_value_Temporary
    73 00:C44C: 09            	RTS
    74                        
    75                        L_Scankey_usually_Prog_Countine_PA6:
    76 00:C44D: 04            	CLC
    77 00:C44E: 53 0E         	LDA		#14
    78 00:C450: 74 F4         	ADC		P_Temp+2
    79 00:C452: 7F A7         	STA		P_Scankey_value_Temporary
    80 00:C454: 09            	RTS
    81                        
    82                        
    83                        L_PC_Output_High_Prog:;按键扫描程序
    84 00:C455: 15 0D C1      	JSR		L_PA_Intput_Low_Prog
    85 00:C458: 15 12 C1      	JSR		L_PC0_Output_High_Prog
    86 00:C45B: 15 4E DB      	JSR		L_ScanKey_Delay_Prog
    87                        
    88 00:C45E: 73 01         	LDA		P_PA
    89 00:C460: 51 7C         	AND		#D_PA_Press
    90 00:C462: 7F F5         	STA		P_Temp+3
    91                        
    92 00:C464: 15 17 C1      	JSR		L_PC1_Output_High_Prog
    93 00:C467: 15 4E DB      	JSR		L_ScanKey_Delay_Prog
    94                        
    95 00:C46A: 73 01         	LDA		P_PA
    96 00:C46C: 51 7C         	AND		#D_PA_Press
    97 00:C46E: 7F F6         	STA		P_Temp+4
    98                        
    99 00:C470: 15 1C C1      	JSR		L_PC2_Output_High_Prog
   100 00:C473: 15 4E DB      	JSR		L_ScanKey_Delay_Prog
   101                        
   102 00:C476: 73 01         	LDA		P_PA
   103 00:C478: 51 7C         	AND		#D_PA_Press
   104 00:C47A: 7F F7         	STA		P_Temp+5
   105                        
   106 00:C47C: 15 21 C1      	JSR		L_PC3_Output_High_Prog
   107 00:C47F: 15 4E DB      	JSR		L_ScanKey_Delay_Prog
   108                        
   109 00:C482: 73 01         	LDA		P_PA
   110 00:C484: 51 7C         	AND		#D_PA_Press
   111 00:C486: 7F F8         	STA		P_Temp+6
   112                        
   113 00:C488: 15 26 C1      	JSR		L_PC4_Output_High_Prog
   114 00:C48B: 15 4E DB      	JSR		L_ScanKey_Delay_Prog
   115                        
   116 00:C48E: 73 01         	LDA		P_PA
   117 00:C490: 51 7C         	AND		#D_PA_Press
   118 00:C492: 7F F9         	STA		P_Temp+7
   119                        
   120 00:C494: 15 2B C1      	JSR		L_PC5_Output_High_Prog
   121 00:C497: 15 4E DB      	JSR		L_ScanKey_Delay_Prog
   122                        
   123 00:C49A: 73 01         	LDA		P_PA
   124 00:C49C: 51 7C         	AND		#D_PA_Press
   125 00:C49E: 7F FA         	STA		P_Temp+8
   126                        
   127                        
   128                        
   129 00:C4A0: 15 30 C1      	JSR		L_Scankey_Effictive_Init
   130                        
   131 00:C4A3: 73 F5         	LDA		P_Temp+3
   132 00:C4A5: 12 15         	BNE		L_PC_Output_High_Prog_PC0
   133 00:C4A7: 73 F6         	LDA		P_Temp+4
   134 00:C4A9: 12 22         	BNE		L_PC_Output_High_Prog_PC1
   135 00:C4AB: 73 F7         	LDA		P_Temp+5
   136 00:C4AD: 12 2D         	BNE		L_PC_Output_High_Prog_PC2
   137 00:C4AF: 73 F8         	LDA		P_Temp+6
   138 00:C4B1: 12 36         	BNE		L_PC_Output_High_Prog_PC3
   139 00:C4B3: 73 F9         	LDA		P_Temp+7
   140 00:C4B5: 12 3D         	BNE		L_PC_Output_High_Prog_PC4
   141 00:C4B7: 73 FA         	LDA		P_Temp+8
   142 00:C4B9: 12 42         	BNE		L_PC_Output_High_Prog_PC5
   143 00:C4BB: 09            	RTS
   144                        
   145                        L_PC_Output_High_Prog_PC0:
   146 00:C4BC: 73 F6         	LDA		P_Temp+4
   147 00:C4BE: 70 F7         	ORA		P_Temp+5
   148 00:C4C0: 70 F8         	ORA		P_Temp+6
   149 00:C4C2: 70 F9         	ORA		P_Temp+7
   150 00:C4C4: 70 FA         	ORA		P_Temp+8
   151 00:C4C6: 12 3A         	BNE		L_Scankey_Effictive_Prog_To
   152 00:C4C8: 53 01         	LDA		#1
   153 00:C4CA: 7F F4         	STA		P_Temp+2
   154 00:C4CC: 09            	RTS
   155                        L_PC_Output_High_Prog_PC1:
   156 00:C4CD: 73 F7         	LDA		P_Temp+5
   157 00:C4CF: 70 F8         	ORA		P_Temp+6
   158 00:C4D1: 70 F9         	ORA		P_Temp+7
   159 00:C4D3: 70 FA         	ORA		P_Temp+8
   160 00:C4D5: 12 2B         	BNE		L_Scankey_Effictive_Prog_To
   161 00:C4D7: 53 02         	LDA		#2
   162 00:C4D9: 7F F4         	STA		P_Temp+2
   163 00:C4DB: 09            	RTS
   164                        L_PC_Output_High_Prog_PC2:
   165 00:C4DC: 73 F8         	LDA		P_Temp+6
   166 00:C4DE: 70 F9         	ORA		P_Temp+7
   167 00:C4E0: 70 FA         	ORA		P_Temp+8
   168 00:C4E2: 12 1E         	BNE		L_Scankey_Effictive_Prog_To
   169 00:C4E4: 53 03         	LDA		#3
   170 00:C4E6: 7F F4         	STA		P_Temp+2
   171 00:C4E8: 09            	RTS
   172                        
   173                        L_PC_Output_High_Prog_PC3:
   174 00:C4E9: 73 F9         	LDA		P_Temp+7
   175 00:C4EB: 70 FA         	ORA		P_Temp+8
   176 00:C4ED: 12 13         	BNE		L_Scankey_Effictive_Prog_To
   177 00:C4EF: 53 04         	LDA		#4
   178 00:C4F1: 7F F4         	STA		P_Temp+2
   179 00:C4F3: 09            	RTS
   180                        L_PC_Output_High_Prog_PC4:
   181 00:C4F4: 73 FA         	LDA		P_Temp+8
   182 00:C4F6: 12 0A         	BNE		L_Scankey_Effictive_Prog_To
   183 00:C4F8: 53 05         	LDA		#5
   184 00:C4FA: 7F F4         	STA		P_Temp+2
   185 00:C4FC: 09            	RTS
   186                        L_PC_Output_High_Prog_PC5:
   187 00:C4FD: 53 06         	LDA		#6
   188 00:C4FF: 7F F4         	STA		P_Temp+2
   189 00:C501: 09            	RTS
   190                        L_Scankey_Effictive_Prog_To:
   191 00:C502: 16 EF C3      	JMP		L_Scankey_Effictive_Prog
   191                        
   160                        .INCLUDE	Key\ScanKey_Function_Time.ASM
     1                        ;======================================================================
     2                        ;非设置模式下吗,时钟模式按下/号键，显示日期
     3                        ;======================================================================
     4                        L_Clock_First_Press_Prog:
     5 00:C505: 73 A6         	LDA		P_Scankey_value
     6 00:C507: 56 13         	CMP		#D_Date_Press
     7 00:C509: 12 0A         	BNE		L_Clock_First_Press_Prog_OUT
     8 00:C50B: 15 0B CD          JSR		L_Clr_All_8Bit_Prog
     9 00:C50E: 15 43 CA      	JSR		L_Display_Time_Date_Prog
    10 00:C511: 2E 9F         	SMB6	Sys_Flag_A
    11 00:C513: 25 9F         	RMB5	Sys_Flag_A
    12                        L_Clock_First_Press_Prog_OUT:
    13 00:C515: 09            	RTS
    14                        ;==================================
    15                        ;时间模式下，设置模式下按键处理问题
    16                        ;==================================
    17                        L_Scankey_Set_Mode_Prog_Clock:
    18 00:C516: 73 A6             LDA     P_Scankey_value
    19 00:C518: 56 10             CMP     #D_ST_SP_Press
    20 00:C51A: 13 16             BEQ     L_Change_12_Clock_24_Clock_Prog_TO;按下加键，改变24小时——12小时制
    21 00:C51C: 56 0F             CMP     #D_NUM_Point_Press
    22 00:C51E: 13 0F             BEQ     L_Change_12_24_Prog_PM_AM_TO
    23 00:C520: 73 F1             LDA     R_Mode_Set
    24 00:C522: 06                CLD
    25 00:C523: 04                CLC
    26 00:C524: 18                ROL
    27 00:C525: 1B                TAX
    28 00:C526: 63 36 C5          LDA     Table_Time_Plus+1,X
    29 00:C529: 0A                PHA
    30 00:C52A: 63 35 C5          LDA     Table_Time_Plus,X
    31 00:C52D: 0A                PHA
    32 00:C52E: 09                RTS
    33                        L_Change_12_24_Prog_PM_AM_TO:
    34 00:C52F: 16 5A C5          JMP     L_Change_12_24_Prog_PM_AM
    35                        L_Change_12_Clock_24_Clock_Prog_TO:;按下按键改变12小时制和24小时制
    36 00:C532: 16 4B C5          JMP     L_Change_12_Clock_24_Clock_Prog
    37                        
    38                        Table_Time_Plus:
    39 00:C535: 62 C5             DW      L_Control_Set_Mode_Clock_Prog_Sec-1
    40 00:C537: 82 C5             DW      L_Control_Set_Mode_Clock_Prog_Hr-1
    41 00:C539: 82 C5             DW      L_Control_Set_Mode_Clock_Prog_Hr-1
    42 00:C53B: 7B C5             DW      L_Control_Set_Mode_Clock_Prog_Min-1
    43 00:C53D: 7B C5             DW      L_Control_Set_Mode_Clock_Prog_Min-1
    44 00:C53F: A5 C5             DW      L_Control_Set_Mode_Clock_Prog_Year-1
    45 00:C541: A5 C5             DW      L_Control_Set_Mode_Clock_Prog_Year-1
    46 00:C543: 9D C5             DW      L_Control_Set_Mode_Clock_Prog_Month-1
    47 00:C545: 9D C5             DW      L_Control_Set_Mode_Clock_Prog_Month-1
    48 00:C547: 91 C5             DW      L_Control_Set_Mode_Clock_Prog_Day-1
    49 00:C549: 91 C5             DW      L_Control_Set_Mode_Clock_Prog_Day-1
    50                        
    51                        ;========================================
    52                        ;在时间设置模式下按下+键，改变24小时12小时制
    53                        ;========================================
    54                        L_Change_12_Clock_24_Clock_Prog:
    55 00:C54B: 3A A0 06          BBS2    Sys_Flag_B,L_Change_12_24_Prog_12;当前是24小时制是跳转
    56 00:C54E: 2A A0             SMB2    Sys_Flag_B
    57 00:C550: 15 67 CA          JSR     L_Display_Time_Hr_Prog
    58 00:C553: 09                RTS
    59                        L_Change_12_24_Prog_12:
    60 00:C554: 22 A0             RMB2    Sys_Flag_B
    61 00:C556: 15 67 CA          JSR     L_Display_Time_Hr_Prog
    62 00:C559: 09                RTS
    63                        ;========================================
    64                        ;在时间设置模式下按下.键，改变12小时的AM_PM
    65                        ;========================================
    66                        L_Change_12_24_Prog_PM_AM:
    67 00:C55A: 5E 02             LDX     #(R_Time_Hr-Time_Str_Addr)
    68 00:C55C: 15 5A C7          JSR     L_Change_12_14_Prog_AM_PM_ususally_Prog
    69 00:C55F: 15 67 CA          JSR     L_Display_Time_Hr_Prog
    70 00:C562: 09                RTS
    71                        ;=============================================
    72                        ;---------------------------------------------
    73                        ;=============================================
    74                        
    75                        L_Control_Set_Mode_Clock_Prog_Sec:;30秒及以上清零并分钟加1，不到30秒清零
    76 00:C563: 73 A7             LDA     P_Scankey_value_Temporary
    77 00:C565: 56 0C             CMP     #D_NUM0_Press
    78 00:C567: 12 12             BNE     L_Control_Set_Mode_Clock_Prog_Sec_RTS
    79 00:C569: 73 A8             LDA     R_Time_Sec
    80 00:C56B: 7F F2             STA     P_Temp
    81 00:C56D: 53 00             LDA     #0
    82 00:C56F: 7F A8             STA     R_Time_Sec
    83 00:C571: 73 F2             LDA     P_Temp
    84 00:C573: 56 1E             CMP     #30
    85 00:C575: 11 01             BCS     L_Control_Set_Mode_Clock_Prog_Sec_1
    86 00:C577: 09                RTS
    87                        L_Control_Set_Mode_Clock_Prog_Sec_1:
    88 00:C578: 15 E9 D7          JSR     L_Update_Time_Min_Prog
    89                        L_Control_Set_Mode_Clock_Prog_Sec_RTS:
    90 00:C57B: 09                RTS
    91                        ;=============================================
    92                        ;---------------------------------------------
    93                        ;=============================================
    94                        L_Control_Set_Mode_Clock_Prog_Min:
    95 00:C57C: 5E 01             LDX     #(R_Time_Min-Time_Str_Addr)
    96 00:C57E: 53 59             LDA     #59H
    97 00:C580: 16 B1 C5          JMP     L_Scankey_Input_Set_Mode_Usally_Time
    98                        ;=============================================
    99                        ;---------------------------------------------
   100                        ;=============================================
   101                        L_Control_Set_Mode_Clock_Prog_Hr:
   102 00:C583: 5E 02             LDX     #(R_Time_Hr-Time_Str_Addr)
   103 00:C585: 32 A0 05          BBR2    Sys_Flag_B,L_Control_Set_Mode_Clock_Prog_Hr_1
   104 00:C588: 53 23             LDA     #23H
   105 00:C58A: 16 B1 C5          JMP     L_Scankey_Input_Set_Mode_Usally_Time
   106                        L_Control_Set_Mode_Clock_Prog_Hr_1:
   107 00:C58D: 53 12             LDA     #12H
   108 00:C58F: 16 12 C6          JMP     L_Scankey_Input_Set_Mode_Hr_Time
   109                        
   110                        ;=============================================
   111                        ;---------------------------------------------
   112                        ;=============================================
   113                        L_Control_Set_Mode_Clock_Prog_Day:
   114 00:C592: 15 82 D8          JSR     L_Check_MaxDay_Prog
   115 00:C595: 15 5C CD          JSR     L_A_HexToHexD
   116 00:C598: 5E 03             LDX     #(R_Time_Day-Time_Str_Addr)
   117 00:C59A: 15 CC C5          JSR     L_Scankey_Input_Set_Mode_Usally_Time_Date
   118 00:C59D: 09                RTS
   119                        ;=============================================
   120                        ;---------------------------------------------
   121                        ;=============================================
   122                        L_Control_Set_Mode_Clock_Prog_Month
   123 00:C59E: 5E 04             LDX     #(R_Time_Month-Time_Str_Addr)
   124 00:C5A0: 53 12             LDA     #12H
   125 00:C5A2: 15 CC C5          JSR     L_Scankey_Input_Set_Mode_Usally_Time_Date
   126                            ; JSR		L_Auto_Counter_Week
   127 00:C5A5: 09                RTS
   128                        ;=============================================
   129                        ;---------------------------------------------
   130                        ;=============================================
   131                        L_Control_Set_Mode_Clock_Prog_Year
   132 00:C5A6: 5E 05             LDX     #(R_Time_Year-Time_Str_Addr)
   133 00:C5A8: 53 99             LDA     #99H
   134 00:C5AA: 15 B1 C5          JSR     L_Scankey_Input_Set_Mode_Usally_Time
   135 00:C5AD: 15 C7 D8          JSR		L_Auto_Counter_Week
   136 00:C5B0: 09                RTS
   137                        
   138                        ;==========================================
   139                        ;按键按下后输入的通用函数
   140                        ;==========================================
   141                        L_Scankey_Input_Set_Mode_Usally_Time:
   142 00:C5B1: 7F F6             STA     P_Temp+4
   143 00:C5B3: 63 28 18          LDA     Time_Addr,X
   144 00:C5B6: 15 5C CD          JSR     L_A_HexToHexD
   145 00:C5B9: 7F F5             STA     P_Temp+3
   146 00:C5BB: 15 F6 C2          JSR     L_Scankey_Input_Press
   147 00:C5BE: 3A A1 43          BBS2    Sys_Flag_C,L_Scankey_Input_Set_Mode_Usally_Time_Date_Low_BIT_RTS
   148 00:C5C1: 7F F7             STA     P_Temp+5
   149 00:C5C3: 38 F1 03          BBS0    R_Mode_Set,L_Scankey_Input_Set_Mode_Usally_High_Bit_TO;根据R_Mode_Set判断是否为高位
   150 00:C5C6: 16 72 C2          JMP     L_Scankey_Input_Set_Mode_Usally_Low_Bit
   151                        L_Scankey_Input_Set_Mode_Usally_High_Bit_TO:
   152 00:C5C9: 16 A4 C2          JMP     L_Scankey_Input_Set_Mode_Usally_High_Bit
   153                        ;==========================================
   154                        ;==========================================
   155                        ;==========================================
   156                        L_Scankey_Input_Set_Mode_Usally_Time_Date:
   157 00:C5CC: 7F F6             STA     P_Temp+4
   158 00:C5CE: 63 28 18          LDA     Time_Addr,X
   159 00:C5D1: 15 5C CD          JSR     L_A_HexToHexD
   160 00:C5D4: 7F F5             STA     P_Temp+3
   161 00:C5D6: 15 F6 C2          JSR     L_Scankey_Input_Press
   162 00:C5D9: 3A A1 28          BBS2    Sys_Flag_C,L_Scankey_Input_Set_Mode_Usally_Time_Date_Low_BIT_RTS
   163 00:C5DC: 7F F7             STA     P_Temp+5
   164 00:C5DE: 38 F1 E8          BBS0    R_Mode_Set,L_Scankey_Input_Set_Mode_Usally_High_Bit_TO;根据R_Mode_Set判断是否为高位
   165                        L_Scankey_Input_Set_Mode_Usally_Time_Date_Low_BIT:
   166 00:C5E1: 73 F5             LDA     P_Temp+3
   167 00:C5E3: 51 F0             AND     #F0H
   168 00:C5E5: 7F F8             STA     P_Temp+6
   169 00:C5E7: 73 F6             LDA     P_Temp+4
   170 00:C5E9: 51 F0             AND     #F0H
   171 00:C5EB: 76 F8             CMP     P_Temp+6;判断当前内存的高四位和最大值的高四位，当小于时，直接将输入的值给到低四位
   172 00:C5ED: 11 16             BCS     L_Scankey_Input_Set_Mode_Usally_Time_Date_Low_BIT_Conutine
   173 00:C5EF: 73 F6             LDA     P_Temp+4
   174 00:C5F1: 51 0F             AND     #0FH
   175 00:C5F3: 76 F7             CMP     P_Temp+5;判断当前内存的低四位和最大值的低四位，当小于时，直接将输入的值给到低四位
   176 00:C5F5: 10 0D             BCC     L_Scankey_Input_Set_Mode_Usally_Time_Date_Low_BIT_RTS
   177 00:C5F7: 73 F8             LDA     P_Temp+6
   178 00:C5F9: 70 F7             ORA     P_Temp+5
   179 00:C5FB: 15 82 CD          JSR     L_A_HexDToHex
   180 00:C5FE: 6F 28 18          STA		Time_Addr,X
   181 00:C601: 15 15 C2          JSR     L_Scankey_Set_Mode_Mode_First_Press_Prog
   182                        L_Scankey_Input_Set_Mode_Usally_Time_Date_Low_BIT_RTS:
   183 00:C604: 09                RTS
   184                        L_Scankey_Input_Set_Mode_Usally_Time_Date_Low_BIT_Conutine:
   185 00:C605: 73 F5             LDA     P_Temp+3
   186 00:C607: 51 F0             AND     #F0H
   187 00:C609: 12 04             BNE     L_Scankey_Input_Set_Mode_Usally_Time_Date_Low_BIT_Conutine_1
   188 00:C60B: 73 F7             LDA     P_Temp+5
   189 00:C60D: 13 F5             BEQ     L_Scankey_Input_Set_Mode_Usally_Time_Date_Low_BIT_RTS
   190                        L_Scankey_Input_Set_Mode_Usally_Time_Date_Low_BIT_Conutine_1:
   191 00:C60F: 16 96 C2          JMP     L_Scankey_Input_Set_Mode_Usally_Low_Bit_Conutine
   192                        ;================================================================
   193                        ;================================================================
   194                        ;================================================================
   195                        ;================================================================
   196                        
   197                        
   198                        ;P_Temp+3存储读取到的时间，P_Temp+4
   199                        ;
   200                        L_Scankey_Input_Set_Mode_Hr_Time:
   201 00:C612: 7C F9             STX     P_Temp+7
   202 00:C614: 15 F6 C2          JSR     L_Scankey_Input_Press
   203 00:C617: 7F F6             STA     P_Temp+4
   204 00:C619: 3A A1 E8          BBS2    Sys_Flag_C,L_Scankey_Input_Set_Mode_Usally_Time_Date_Low_BIT_RTS
   205 00:C61C: 63 28 18          LDA     Time_Addr,X
   206 00:C61F: 7F F5             STA     P_Temp+3
   207 00:C621: 38 F1 03          BBS0    R_Mode_Set,L_Scankey_Input_Set_Mode_High_Bit
   208 00:C624: 16 6A C6          JMP     L_Scankey_Input_Set_Mode_Low_Bit
   209                        L_Scankey_Input_Set_Mode_High_Bit:
   210 00:C627: 73 F5             LDA     P_Temp+3
   211 00:C629: 15 AB CD          JSR     L_12_24_Prog
   212 00:C62C: 15 5C CD          JSR     L_A_HexToHexD
   213 00:C62F: 7F F7             STA     P_Temp+5
   214                        
   215 00:C631: 73 F6             LDA     P_Temp+4
   216 00:C633: 56 02             CMP     #2
   217 00:C635: 11 0D             BCS     L_Scankey_Input_Set_Mode_High_Bit_RTS
   218 00:C637: 15 4A C8          JSR     L_ROL_4Bit_Prog
   219 00:C63A: 7F F8             STA     P_Temp+6
   220 00:C63C: 56 00             CMP     #0
   221 00:C63E: 13 15             BEQ     L_Scankey_Input_Set_Mode_High_Bit_0_Press
   222 00:C640: 56 10             CMP     #10H
   223 00:C642: 13 01             BEQ     L_Scankey_Input_Set_Mode_High_Bit_1_Press
   224                        
   225                        L_Scankey_Input_Set_Mode_High_Bit_RTS:
   226 00:C644: 09                RTS
   227                        L_Scankey_Input_Set_Mode_High_Bit_1_Press:
   228 00:C645: 73 F7             LDA     P_Temp+5
   229 00:C647: 51 0F             AND     #0FH
   230 00:C649: 56 03             CMP     #3
   231 00:C64B: 10 04             BCC     L_Scankey_Input_Set_Mode_High_Bit_1_Press_1
   232 00:C64D: 73 F8             LDA     P_Temp+6
   233 00:C64F: 17 08             BRA     L_Scankey_Input_Set_Mode_High_Bit_usually
   234                        
   235                        L_Scankey_Input_Set_Mode_High_Bit_1_Press_1:
   236 00:C651: 70 F8             ORA     P_Temp+6
   237 00:C653: 17 04             BRA     L_Scankey_Input_Set_Mode_High_Bit_usually
   238                        L_Scankey_Input_Set_Mode_High_Bit_0_Press:
   239 00:C655: 73 F7             LDA     P_Temp+5
   240 00:C657: 51 0F             AND     #0FH
   241                        L_Scankey_Input_Set_Mode_High_Bit_usually:
   242 00:C659: 15 82 CD          JSR     L_A_HexDToHex
   243 00:C65C: 7F F7             STA     P_Temp+5
   244 00:C65E: 15 E5 CD          JSR     L_12_To_24_Prog
   245 00:C661: 7E F9             LDX     P_Temp+7
   246 00:C663: 6F 28 18          STA     Time_Addr,X
   247 00:C666: 15 15 C2          JSR     L_Scankey_Set_Mode_Mode_First_Press_Prog
   248                        
   249 00:C669: 09                RTS
   250                        
   251                        L_Scankey_Input_Set_Mode_Low_Bit:
   252 00:C66A: 73 F5             LDA     P_Temp+3
   253 00:C66C: 15 AB CD          JSR     L_12_24_Prog
   254 00:C66F: 15 5C CD          JSR     L_A_HexToHexD
   255 00:C672: 7F F8             STA     P_Temp+6
   256 00:C674: 51 F0             AND     #F0H
   257 00:C676: 13 07             BEQ     L_Scankey_Input_Set_Mode_Low_Bit_0_Prog
   258 00:C678: 73 F6             LDA     P_Temp+4
   259 00:C67A: 56 03             CMP     #3
   260 00:C67C: 10 01             BCC     L_Scankey_Input_Set_Mode_Low_Bit_0_Prog
   261 00:C67E: 09                RTS
   262                        
   263                        L_Scankey_Input_Set_Mode_Low_Bit_0_Prog:
   264 00:C67F: 73 F6             LDA     P_Temp+4
   265 00:C681: 13 10             BEQ     L_Scankey_Input_Set_Mode_Low_Bit_0_Prog_RTS
   266 00:C683: 15 82 CD          JSR     L_A_HexDToHex
   267 00:C686: 7F F7             STA     P_Temp+5
   268 00:C688: 15 E5 CD          JSR     L_12_To_24_Prog
   269 00:C68B: 7E F9             LDX     P_Temp+7
   270 00:C68D: 6F 28 18          STA     Time_Addr,X
   271 00:C690: 15 15 C2          JSR     L_Scankey_Set_Mode_Mode_First_Press_Prog
   272                        L_Scankey_Input_Set_Mode_Low_Bit_0_Prog_RTS:
   273                            RTS
   273 00:C693: 09            
   161                        .INCLUDE	Key\Scankey_Function_Another_Time.asm
     1                        ;======================================================================
     2                        ;非设置模式下吗,第二时间模式，长按RESET，进入设置模式
     3                        ;======================================================================
     4                        L_Clock_Twice_First_Press_Prog:
     5 00:C694: 09            	RTS
     6                        
     7                        
     8                        
     9                        
    10                        
    11                        ;======================================================================
    12                        ;======================================================================
    13                        ;======================================================================
    14                        ;======================================================================
    15                        ;======================================================================
    16                        L_Scankey_Set_Mode_Prog_Another_Time:
    17 00:C695: 73 A6            LDA      P_Scankey_value
    18 00:C697: 56 0F            CMP      #D_NUM_Point_Press
    19 00:C699: 13 17            BEQ      L_Change_12_24_Prog_PM_AM_Another_Time
    20 00:C69B: 73 F1            LDA      R_Mode_Set
    21 00:C69D: 04               CLC
    22 00:C69E: 06               CLD
    23 00:C69F: 18               ROL
    24 00:C6A0: 1B               TAX
    25 00:C6A1: 63 AB C6         LDA      Table_Another_Time_Plus+1,X
    26 00:C6A4: 0A               PHA
    27 00:C6A5: 63 AA C6         LDA      Table_Another_Time_Plus,X
    28 00:C6A8: 0A               PHA
    29 00:C6A9: 09               RTS
    30                        Table_Another_Time_Plus:
    31 00:C6AA: C1 C6             DW      L_Control_Set_Mode_Another_Clock_Prog_Hr-1
    32 00:C6AC: C1 C6             DW      L_Control_Set_Mode_Another_Clock_Prog_Hr-1
    33 00:C6AE: BA C6             DW      L_Control_Set_Mode_Another_Clock_Prog_Min-1
    34 00:C6B0: BA C6             DW      L_Control_Set_Mode_Another_Clock_Prog_Min-1
    35                        
    36                        ;======================================================================
    37                        
    38                        L_Change_12_24_Prog_PM_AM_Another_Time:
    39 00:C6B2: 5E 08             LDX     #(R_Time_Hr_Another-Time_Str_Addr)
    40 00:C6B4: 15 5A C7          JSR     L_Change_12_14_Prog_AM_PM_ususally_Prog
    41 00:C6B7: 15 2D CA          JSR     L_Display_Another_Time_Hr_Prog
    42 00:C6BA: 09                RTS
    43                        ;======================================================================
    44                        
    45                        
    46                        L_Control_Set_Mode_Another_Clock_Prog_Min:
    47 00:C6BB: 5E 07             LDX     #(R_Time_Min_Another-Time_Str_Addr)
    48 00:C6BD: 53 59             LDA     #59H
    49 00:C6BF: 16 5D C2          JMP     L_Scankey_Input_Set_Mode_Usally
    50                        ;======================================================================
    51                        
    52                        
    53                        L_Control_Set_Mode_Another_Clock_Prog_Hr:
    54 00:C6C2: 5E 08             LDX     #(R_Time_Hr_Another-Time_Str_Addr)
    55 00:C6C4: 32 A0 FA          BBR2    Sys_Flag_B,L_Control_Set_Mode_Another_Clock_Prog_Hr-1
    56 00:C6C7: 53 23             LDA     #23H
    57 00:C6C9: 16 5D C2          JMP     L_Scankey_Input_Set_Mode_Usally
    58                        L_Control_Set_Mode_Another_Clock_Prog_Hr_1:
    59 00:C6CC: 53 12             LDA     #12H
    60 00:C6CE: 16 DE C2          JMP     L_Scankey_Input_Set_Mode_Hr_usually
    60                        
   162                        .INCLUDE	Key\Scankey_Function_Alarm.asm
     1                        ;清除贪睡功能
     2                        L_Control_SNZ_Close_Prog:
     3 00:C6D1: 27 A1             RMB7	Sys_Flag_C
     4 00:C6D3: 53 00         	LDA		#0
     5 00:C6D5: 4F 95 18      	STA		R_Snz_Time
     6 00:C6D8: 4F 96 18      	STA		R_Snz_Frequency;进入闹钟时间的设置会清除贪睡
     7 00:C6DB: 09                RTS
     8                        ;======================================================================
     9                        ;非设置模式下吗,闹钟模式，
    10                        ;短按RESET，在整点报时界面，开启或关闭整点报时，按下触发
    11                        ;在闹钟界面,按下触发闹铃模式的切换，关闭，普通和贪睡
    12                        ;======================================================================
    13                        
    14                        L_Alarm_First_Press_Prog:
    15 00:C6DC: 73 A6         	LDA		P_Scankey_value
    16 00:C6DE: 56 04         	CMP		#D_Alm_Press
    17 00:C6E0: 13 09         	BEQ		L_Alarm_First_Press_Prog_Alm_Press
    18 00:C6E2: 56 12         	CMP		#D_Sig_Press
    19 00:C6E4: 13 1F         	BEQ		L_Alarm_First_Press_Prog_Sig_Press
    20 00:C6E6: 56 17         	CMP		#D_Beep_Test_Press
    21 00:C6E8: 13 28         	BEQ		L_Alarm_First_Press_Prog_Beep_Test_Press
    22 00:C6EA: 09            	RTS
    23                        
    24                        
    25                        
    26                        L_Alarm_First_Press_Prog_Alm_Press:;控制闹钟贪睡的开启关闭
    27 00:C6EB: 15 D1 C6      	JSR		L_Control_SNZ_Close_Prog
    28 00:C6EE: 73 B9         	LDA		R_Alarm_Mode
    29 00:C6F0: 56 02         	CMP		#2
    30 00:C6F2: 11 0A         	BCS		L_Alarm_First_Reset_Press_Prog_Alarm_Prog_Clr
    31 00:C6F4: 04            	CLC
    32 00:C6F5: 73 B9         	LDA		R_Alarm_Mode
    33 00:C6F7: 54 01         	ADC		#1
    34 00:C6F9: 7F B9         	STA		R_Alarm_Mode
    35 00:C6FB: 16 42 CB      	JMP		L_Dis_Alm_Snz_Symbol_Prog
    36                        L_Alarm_First_Reset_Press_Prog_Alarm_Prog_Clr:
    37 00:C6FE: 53 00         	LDA		#0
    38 00:C700: 7F B9         	STA		R_Alarm_Mode
    39 00:C702: 16 38 CB      	JMP		L_Clr_Alm_Snz_Symbol_Prog
    40                        ;======================================================
    41                        L_Alarm_First_Press_Prog_Sig_Press:;控制整点报时的开启和关闭
    42                        
    43 00:C705: 39 A1 05      	BBS1	Sys_Flag_C,L_Alarm_First_Reset_Press_Prog_Every_Hour_Mode_Close
    44 00:C708: 29 A1         	SMB1	Sys_Flag_C
    45 00:C70A: 16 85 CB      	JMP		L_Dis_lcd_Sig_Prog
    46                        L_Alarm_First_Reset_Press_Prog_Every_Hour_Mode_Close:
    47 00:C70D: 21 A1         	RMB1	Sys_Flag_C
    48 00:C70F: 16 C4 CB      	JMP		L_Clr_lcd_Sig_Prog
    49                        ;------------------------------------------
    50                        L_Alarm_First_Press_Prog_Beep_Test_Press:;声音测试
    51 00:C712: 2E 9F         	SMB6	Sys_Flag_A;按键持续标志
    52 00:C714: 26 9F         	RMB6	Sys_Flag_A
    53                        	EN_LCD_IRQ
+   53 00:C716: 2E 0E          SMB6 IER
    54 00:C718: 53 02         	LDA		#2
    55 00:C71A: 4F 94 18      	STA		R_Voice_Unit
    56 00:C71D: 09            	RTS
    57                        
    58                        
    59                        
    60                        
    61                        
    62                        
    63                        
    64                        
    65                        
    66                        
    67                        
    68                        
    69                        
    70                        ;=====================================
    71                        ;=====================================
    72                        ;=====================================
    73                        ;=====================================
    74                        ;=====================================
    75                        ;=====================================
    76                        ;=====================================
    77                        ;设置模式下闹钟的按键功能
    78                        ;=====================================
    79                        L_Scankey_Set_Mode_Prog_Alarm_Clock:
    80 00:C71E: 73 A6            LDA      P_Scankey_value
    81 00:C720: 56 0F            CMP      #D_NUM_Point_Press
    82 00:C722: 13 17            BEQ      L_Change_12_24_Prog_PM_AM_Alarm_Clock
    83 00:C724: 73 F1            LDA      R_Mode_Set
    84 00:C726: 04               CLC
    85 00:C727: 06               CLD
    86 00:C728: 18               ROL
    87 00:C729: 1B               TAX
    88 00:C72A: 63 34 C7         LDA      Table_Alarm_Clock_Plus+1,X
    89 00:C72D: 0A               PHA
    90 00:C72E: 63 33 C7         LDA      Table_Alarm_Clock_Plus,X
    91 00:C731: 0A               PHA
    92 00:C732: 09               RTS
    93                        Table_Alarm_Clock_Plus:
    94                        
    95 00:C733: 4A C7             DW      L_Control_Set_Mode_Alarm_Clock_Prog_Hr-1
    96 00:C735: 4A C7             DW      L_Control_Set_Mode_Alarm_Clock_Prog_Hr-1
    97 00:C737: 43 C7         	DW      L_Control_Set_Mode_Alarm_Clock_Prog_Min-1
    98 00:C739: 43 C7             DW      L_Control_Set_Mode_Alarm_Clock_Prog_Min-1
    99                        ;====================================================
   100                        L_Change_12_24_Prog_PM_AM_Alarm_Clock:
   101 00:C73B: 5E 10             LDX		#(R_Alarm_Clock_Hr-Time_Str_Addr)
   102 00:C73D: 15 5A C7      	JSR		L_Change_12_14_Prog_AM_PM_ususally_Prog
   103 00:C740: 15 E0 CA          JSR     L_Display_Alarm_Clock_Hr_Prog
   104 00:C743: 09                RTS
   105                        ;====================================================
   106                        
   107                        L_Control_Set_Mode_Alarm_Clock_Prog_Min:
   108 00:C744: 5E 0F             LDX     #(R_Alarm_Clock_Min-Time_Str_Addr)
   109 00:C746: 53 59             LDA     #59H
   110 00:C748: 16 5D C2          JMP     L_Scankey_Input_Set_Mode_Usally
   111                        ;====================================================
   112                        
   113                        L_Control_Set_Mode_Alarm_Clock_Prog_Hr:
   114 00:C74B: 5E 10             LDX     #(R_Alarm_Clock_Hr-Time_Str_Addr)
   115 00:C74D: 32 A0 05          BBR2    Sys_Flag_B,L_Control_Set_Mode_Alarm_Clock_Prog_Hr_1
   116 00:C750: 53 23             LDA     #23H
   117 00:C752: 16 5D C2          JMP     L_Scankey_Input_Set_Mode_Usally
   118                        L_Control_Set_Mode_Alarm_Clock_Prog_Hr_1:
   119 00:C755: 53 12             LDA     #12H
   120 00:C757: 16 DE C2          JMP     L_Scankey_Input_Set_Mode_Hr_usually
   121                        
   121                        
   163                        .INCLUDE	Key\ScanKey_Function_usually.asm
     1                        ;=======================================
     2                        ;改变12小时制的AM和PM
     3                        ;=======================================
     4                        L_Change_12_14_Prog_AM_PM_ususally_Prog:
     5 00:C75A: 3A A0 10          BBS2    Sys_Flag_B,L_Change_12_24_Prog_PM_AM_RTS;非12小时制退出
     6 00:C75D: 63 28 18          LDA     Time_Addr,X
     7 00:C760: 56 0C             CMP     #12
     8 00:C762: 10 0A             BCC     L_Change_12_24_Prog_PM_AM_1;比12小跳转，此时有上午变为下午
     9 00:C764: 00                SEC
    10 00:C765: 63 28 18          LDA     Time_Addr,X;自减12
    11 00:C768: 55 0C             SBC     #12
    12 00:C76A: 6F 28 18          STA     Time_Addr,X
    13                        L_Change_12_24_Prog_PM_AM_RTS:
    14 00:C76D: 09                RTS
    15                        L_Change_12_24_Prog_PM_AM_1:
    16 00:C76E: 04                CLC
    17 00:C76F: 53 0C             LDA     #12
    18 00:C771: 64 28 18          ADC     Time_Addr,X;自加12
    19 00:C774: 6F 28 18          STA     Time_Addr,X
    20 00:C777: 09                RTS
    21                        ;============================================
    21                        
   164                        .INCLUDE	Key\Scankey_Function_Positive_Timer.asm
     1                        ;======================================================================
     2                        ;非设置模式下吗,正计时模式，短按ST/SP键，开始或停止计时，存在按键音
     3                        ;短按RESET，在计时途中，中途测量被设置，再次按下被取消
     4                        ;======================================================================
     5                        L_Positive_Timer_First_Press_Prog:
     6 00:C778: 73 A6         	LDA		P_Scankey_value
     7 00:C77A: 56 10         	CMP		#D_ST_SP_Press
     8 00:C77C: 13 1B         	BEQ		L_Positive_Timer_First_ST_SP_Press_Prog
     9 00:C77E: 56 0C         	CMP		#D_Reset_Press
    10 00:C780: 13 2E         	BEQ		L_Positive_Timer_First_RESET_Press_Prog
    11 00:C782: 56 13         	CMP		#D_ST_Hour_Press
    12 00:C784: 13 01         	BEQ		L_Positive_Timer_First_Press_Prog_ST_Hour_Press
    13 00:C786: 09            	RTS
    14                        ;--------------------------------------------------
    15                        L_Positive_Timer_First_Press_Prog_ST_Hour_Press:
    16 00:C787: 15 0B CD      	JSR		L_Clr_All_8Bit_Prog
    17 00:C78A: 2E 9F         	SMB6	Sys_Flag_A
    18 00:C78C: 25 9F             RMB5    Sys_Flag_A
    19 00:C78E: 35 A2 04          BBR5    Sys_Flag_D,L_Positive_Timer_First_Press_Prog_ST_Hour_Press_1
    20 00:C791: 15 2E CB      	JSR		L_Display_Positive_Timer_Hr_Prog_Measurement
    21 00:C794: 09            	RTS
    22                        L_Positive_Timer_First_Press_Prog_ST_Hour_Press_1:
    23 00:C795: 15 FE CA          JSR     L_Display_Positive_Timer_Hr_Prog
    24 00:C798: 09                RTS
    25                        L_Positive_Timer_First_ST_SP_Press_Prog:
    26 00:C799: 38 A2 08      	BBS0	Sys_Flag_D,L_Positive_Timer_First_SP_Press_Prog
    27 00:C79C: 28 A2         	SMB0	Sys_Flag_D
    28                        	EN_LCD_IRQ
+   28 00:C79E: 2E 0E          SMB6 IER
    29 00:C7A0: 15 BE C9      	JSR		L_Display_Prog;消除瞄点问题
    30                        L_Positive_Timer_First_ST_SP_Press_Prog_OUT:
    31 00:C7A3: 09            	RTS
    32                        L_Positive_Timer_First_SP_Press_Prog:
    33 00:C7A4: 20 A2         	RMB0	Sys_Flag_D
    34 00:C7A6: 3D A2 03      	BBS5	Sys_Flag_D,L_Positive_Timer_First_SP_Press_Prog_OUT
    35 00:C7A9: 16 BE C9      	JMP		L_Display_Prog
    36                        L_Positive_Timer_First_SP_Press_Prog_OUT:
    37 00:C7AC: 15 5B CB      	JSR		L_Dis_col_Prog
    38 00:C7AF: 09            	RTS
    39                        ;----------------------------------------------------
    40                        L_Positive_Timer_First_RESET_Press_Prog:
    41 00:C7B0: 2D 9F         	SMB5	Sys_Flag_A
    42 00:C7B2: 38 A2 10      	BBS0	Sys_Flag_D,L_Positive_Timer_Midway_Measurement;判断此时正计时是否运行
    43 00:C7B5: 3D A2 24      	BBS5	Sys_Flag_D,L_Positive_Timer_Midway_Measurement_2
    44 00:C7B8: 53 00         	LDA		#0
    45 00:C7BA: 7F B2         	STA		R_Timer_Sec
    46 00:C7BC: 7F B3         	STA		R_Timer_Min
    47 00:C7BE: 7F B4         	STA		R_Timer_Hr
    48 00:C7C0: 7F B1         	STA		R_Timer_Ms
    49                        L_Positive_Timer_Midway_Measurement_1:
    50 00:C7C2: 16 BE C9      	JMP		L_Display_Prog
    51                        L_Positive_Timer_Midway_Measurement:
    52 00:C7C5: 3D A2 14      	BBS5	Sys_Flag_D,L_Positive_Timer_Midway_Measurement_2
    53 00:C7C8: 2D A2         	SMB5	Sys_Flag_D
    54 00:C7CA: 73 B4             LDA     R_Timer_Hr
    55 00:C7CC: 7F D4             STA     R_Timer_Hr_Measurement
    56 00:C7CE: 73 B3             LDA     R_Timer_Min
    57 00:C7D0: 7F D5             STA     R_Timer_Min_Measurement
    58 00:C7D2: 73 B2             LDA     R_Timer_Sec
    59 00:C7D4: 7F D6             STA     R_Timer_Sec_Measurement
    60 00:C7D6: 73 B1             LDA     R_Timer_Ms
    61 00:C7D8: 7F D7             STA     R_Timer_Ms_Measurement
    62 00:C7DA: 17 E6         	BRA		L_Positive_Timer_Midway_Measurement_1
    63                        L_Positive_Timer_Midway_Measurement_2:
    64 00:C7DC: 25 A2         	RMB5	Sys_Flag_D
    65 00:C7DE: 17 E2         	BRA		L_Positive_Timer_Midway_Measurement_1
    65                        
   165                        
   166                        
   167                        
   168                        .INCLUDE	Display\Disp.asm
     1                        ;===========================================================
     2                        ;程序功能：	显示8BIT字段
     3                        ;程序入口：	A =  显示内容
     4                        ;			X =  ofc
     5                        ;影响资源：P_Temp，P_Temp+1，P_Temp+2，P_Temp+3,X，A
     6                        ;===========================================================
     7                        L_Dis_8Bit_DigitDot_Prog:
     8                        ;	STA		P_Temp
     9                        ;	LDA		Table_Digit_Addr_Offset,X
    10 00:C7E0: 7C F3         	STX		P_Temp+1;显示在那个位置上
    11 00:C7E2: 1B            	TAX
    12 00:C7E3: 63 51 C8      	LDA		Table_Digit_DataDot,X;查要显示的数对应的段码
    13 00:C7E6: 7E F3         	LDX		P_Temp+1
    14                        F_DispPro:
    15 00:C7E8: 7F F2         	STA		P_Temp;保存显示的数对应的段码
    16 00:C7EA: 7C F3         	STX		P_Temp+1;再次保存显示位置
    17 00:C7EC: 53 07         	LDA		#7
    18 00:C7EE: 7F F5         	STA		P_Temp+3	;显示段数
    19                        L_Judge_Dis_8Bit_DigitDot:;显示循环的开始
    20 00:C7F0: 7E F3         	LDX		P_Temp+1	;加载位置索引到x
    21 00:C7F2: 63 C6 C8      	LDA		Lcd_bit,X	;加载com线
    22 00:C7F5: 7F F4         	STA		P_Temp+2
    23 00:C7F7: 63 68 C8      	LDA		Lcd_byte,X	;加载SEG线
    24 00:C7FA: 1B            	TAX
    25 00:C7FB: 7B F2         	ROR		P_Temp		;循环右移
    26 00:C7FD: 10 0A         	BCC		L_CLR		;c=0是清除
    27 00:C7FF: 63 00 18      	LDA		LCD_RamAddr,X	;加载LCD RAM地址
    28 00:C802: 70 F4         	ORA		P_Temp+2		;将COM和SEG信息与LCD RAM地址进行逻辑或操作
    29 00:C804: 6F 00 18      	STA		LCD_RamAddr,X	;将结果写回LCD RAM，更新显示
    30 00:C807: 17 0A         	BRA		L_Inc_Dis_Index_Prog	;跳转到显示索引增加的子程序。
    31                        L_CLR:
    32 00:C809: 63 00 18      	LDA		LCD_RamAddr,X	;加载LCD RAM的地址
    33 00:C80C: 70 F4         	ORA		P_Temp+2		;将COM和SEG信息与LCD RAM地址进行逻辑或操作
    34 00:C80E: 72 F4         	EOR		P_Temp+2		;进行异或操作，用于清除对应的段。
    35 00:C810: 6F 00 18      	STA		LCD_RamAddr,X	;将结果写回LCD RAM，清除对应位置。
    36                        L_Inc_Dis_Index_Prog:		;增加显示索引，减少显示段数
    37 00:C813: 78 F3         	INC		P_Temp+1		;增加P_Temp+1（位置索引）
    38 00:C815: 79 F5         	DEC		P_Temp+3		;减少P_Temp+3（段数
    39 00:C817: 12 D7         	BNE		L_Judge_Dis_8Bit_DigitDot	;如果段数不为0，回到循环开始，否则退出
    40 00:C819: 09            	RTS
    41                        
    42                        F_DispPro_8bit:
    43 00:C81A: 7F F2         	STA		P_Temp			;保存段码的值
    44 00:C81C: 7C F3         	STX		P_Temp+1
    45 00:C81E: 53 08         	LDA		#8
    46 00:C820: 7F F5         	STA		P_Temp+3	;显示段数
    47 00:C822: 17 CC         	BRA		L_Judge_Dis_8Bit_DigitDot
    48                        ;-----------------------------------------
    49                        F_DispSymbol:		;input Xcc -> ofs
    50 00:C824: 15 34 C8      	JSR		F_DispSymbol_Com
    51 00:C827: 6F 00 18      	STA		LCD_RamAddr,X	;实现显示
    52 00:C82A: 09            	RTS
    53                        
    54                        F_ClrpSymbol:		;input Xcc -> ofs
    55 00:C82B: 15 34 C8      	JSR		F_DispSymbol_Com	;清除显示
    56 00:C82E: 72 F4         	EOR		P_Temp+2
    57 00:C830: 6F 00 18      	STA		LCD_RamAddr,X
    58 00:C833: 09            	RTS
    59                        
    60                        F_DispSymbol_Com:
    61 00:C834: 63 C6 C8      	LDA		Lcd_bit,X	;加载X寄存器对应的COM线
    62 00:C837: 7F F4         	STA		P_Temp+2
    63 00:C839: 63 68 C8      	LDA		Lcd_byte,X	;加载X寄存器对应的SEG线
    64 00:C83C: 1B            	TAX
    65 00:C83D: 63 00 18      	LDA		LCD_RamAddr,X;加载LCD	RAM	地址
    66 00:C840: 70 F4         	ORA		P_Temp+2
    67 00:C842: 09            	RTS
    68                        ;============================================================
    69                        ;===============================================
    70                        L_ROR_4Bit_Prog:
    71                        L_ROR4Bit_Prog:
    72                        L_LSR4Bit_Prog:
    73                        F_MSBToLSB:
    74 00:C843: 19            	ROR
    75 00:C844: 19            	ROR
    76 00:C845: 19            	ROR
    77 00:C846: 19            	ROR
    78 00:C847: 51 0F         	AND		#$0F
    79 00:C849: 09            	RTS
    80                        L_ROL_4Bit_Prog:
    81 00:C84A: 18            	ROL
    82 00:C84B: 18            	ROL
    83 00:C84C: 18            	ROL
    84 00:C84D: 18            	ROL
    85 00:C84E: 51 F0         	AND		#F0H
    86 00:C850: 09            	RTS
    87                        ;================================================
    88                        ;********************************************
    89                        Table_Digit_DataDot:	;显示内容对应显示的段码
    90                                   ;hgfedcba
    91 00:C851: 3F            	.BYTE 	3fh	;0
    92 00:C852: 06            	.BYTE	06h	;1
    93 00:C853: 5B            	.BYTE	5bh	;2
    94 00:C854: 4F            	.BYTE	4fh	;3
    95 00:C855: 66            	.BYTE	66h	;4
    96 00:C856: 6D            	.BYTE	6dh	;5
    97 00:C857: 7D            	.BYTE	7dh	;6
    98 00:C858: 27            	.BYTE	27h	;7
    99 00:C859: 7F            	.BYTE	7fh	;8
   100 00:C85A: 6F            	.BYTE	6fh	;9
   101 00:C85B: 00            	.BYTE	00h	;清除10
   102 00:C85C: 40            	.BYTE	01000000B;负号11
   103 00:C85D: 76            	.BYTE	01110110B;H12
   104 00:C85E: 50            	.BYTE	01010000B;r13
   105 00:C85F: 37            	.BYTE	00110111B;N	14
   106 00:C860: 31            	.BYTE	00110001B;T的左边15
   107 00:C861: 3E            	.BYTE	00111110B;U.16
   108 00:C862: 79            	.BYTE	01111001B;E.17
   109 00:C863: 77            	.BYTE	01110111B;A.18
   110 00:C864: 71            	.BYTE	01110001B;F	19
   111 00:C865: 38            	.BYTE	00111000B;L	20
   112 00:C866: 73            	.BYTE	01110011B;P	21
   113 00:C867: 08            	.BYTE	00001000B;一条横杠22
   114                        
   115                        
   116                        
   116                        
   169                        .INCLUDE	Display\Lcdtab.asm
     1                        ;--------COM------------
     2                        c0	.equ	0
     3                        c1	.equ	1
     4                        c2	.equ	2
     5                        c3	.equ	3
     6                        c4	.equ	4
     7                        ; c5	.equ	5
     8                        ; c6	.equ	6
     9                        ;;--------SEG------------
    10                        ; s47	.equ	47
    11                        ; s46	.equ	46
    12                        ; s45	.equ	45
    13                        ; s44	.equ	44
    14                        s43	.equ	43
    15                        s42	.equ	42
    16                        s41	.equ	41
    17                        s40	.equ	40
    18                        s39	.equ	39
    19                        s38	.equ	38
    20                        s37	.equ	37
    21                        s36	.equ	36
    22                        s35	.equ	35
    23                        s34	.equ	34
    24                        s33	.equ	33
    25                        s32	.equ	32
    26                        ; s31	.equ	31
    27                        ; s30	.equ	30
    28                        ; s29	.equ	29
    29                        ; s28	.equ	28
    30                        ; s27	.equ	27
    31                        ; s26	.equ	26
    32                        ; s25	.equ	25
    33                        ; s24	.equ	24
    34                        ; s23	.equ	23
    35                        ; s22	.equ	22
    36                        ; s21	.equ	21
    37                        ; s20	.equ	20
    38                        ; s19	.equ	19
    39                        ; s18	.equ	18
    40                        ; s17	.equ	17
    41                        ; s16	.equ	16
    42                        s15	.equ	15
    43                        s14	.equ	14
    44                        s13	.equ	13
    45                        s12	.equ	12
    46                        s11	.equ	11
    47                        s10	.equ	10
    48                        s9	.equ	9
    49                        s8	.equ	8
    50                        ; s7	.equ	7
    51                        ; s6	.equ	6
    52                        ; s5	.equ	5
    53                        ; s4	.equ	4
    54                        ; s3	.equ	3
    55                        ; s2	.equ	2
    56                        ; s1	.equ	1
    57                        ; s0	.equ	0
    58                        
    59                        
    60                        .MACRO  db_c_s	com,seg
    61                                  .BYTE com*6+seg/8
    62                        .ENDMACRO
    63                        
    64                        .MACRO  db_c_y	com,seg
    65                        	      .BYTE 1.shl.(seg-seg/8*8)
    66                        .ENDMACRO
    67                        
    68                        Lcd_byte:	;段码
    69                        lcd_table1:
    70                        lcd_d1 .equ	lcd_table1-lcd_table1
    71                        	db_c_s	c2,s41	;;1A
+   71 00:C868: 11             .DB c2*$0006+s41/$0008
    72                        	db_c_s	c2,s40	;;1B
+   72 00:C869: 11             .DB c2*$0006+s40/$0008
    73                        	db_c_s	c4,s41	;;1C
+   73 00:C86A: 1D             .DB c4*$0006+s41/$0008
    74                        	db_c_s	c4,s42	;;1D
+   74 00:C86B: 1D             .DB c4*$0006+s42/$0008
    75                        	db_c_s	c3,s42	;;1E
+   75 00:C86C: 17             .DB c3*$0006+s42/$0008
    76                        	db_c_s	c2,s42	;;1F
+   76 00:C86D: 11             .DB c2*$0006+s42/$0008
    77                        	db_c_s	c3,s41	;;1G
+   77 00:C86E: 17             .DB c3*$0006+s41/$0008
    78                        
    79                        lcd_d2	.equ lcd_d1+7
    80                        	db_c_s	c2,s38	;;2A
+   80 00:C86F: 10             .DB c2*$0006+s38/$0008
    81                        	db_c_s	c3,s38	;;2B
+   81 00:C870: 16             .DB c3*$0006+s38/$0008
    82                        	db_c_s	c4,s38	;;2C
+   82 00:C871: 1C             .DB c4*$0006+s38/$0008
    83                        	db_c_s	c4,s39	;;2D
+   83 00:C872: 1C             .DB c4*$0006+s39/$0008
    84                        	db_c_s	c3,s40	;;2E
+   84 00:C873: 17             .DB c3*$0006+s40/$0008
    85                        	db_c_s	c2,s39	;;2F
+   85 00:C874: 10             .DB c2*$0006+s39/$0008
    86                        	db_c_s	c3,s39	;;2G
+   86 00:C875: 16             .DB c3*$0006+s39/$0008
    87                        
    88                        lcd_d3	.equ lcd_d2+7
    89                        
    90                        	db_c_s	c2,s36	;;3A
+   90 00:C876: 10             .DB c2*$0006+s36/$0008
    91                        	db_c_s	c2,s34	;;3B
+   91 00:C877: 10             .DB c2*$0006+s34/$0008
    92                        	db_c_s	c4,s35	;;3C
+   92 00:C878: 1C             .DB c4*$0006+s35/$0008
    93                        	db_c_s	c4,s36	;;3D
+   93 00:C879: 1C             .DB c4*$0006+s36/$0008
    94                        	db_c_s	c3,s37	;;3E
+   94 00:C87A: 16             .DB c3*$0006+s37/$0008
    95                        	db_c_s	c2,s37	;;3F
+   95 00:C87B: 10             .DB c2*$0006+s37/$0008
    96                        	db_c_s	c3,s35	;;3G
+   96 00:C87C: 16             .DB c3*$0006+s35/$0008
    97                        
    98                        lcd_d4	.equ lcd_d3+7
    99                        
   100                        	db_c_s	c2,s32	;;4A
+  100 00:C87D: 10             .DB c2*$0006+s32/$0008
   101                        	db_c_s	c3,s32	;;4B
+  101 00:C87E: 16             .DB c3*$0006+s32/$0008
   102                        	db_c_s	c4,s32	;;4C
+  102 00:C87F: 1C             .DB c4*$0006+s32/$0008
   103                        	db_c_s	c4,s33	;;4D
+  103 00:C880: 1C             .DB c4*$0006+s33/$0008
   104                        	db_c_s	c3,s34	;;4E
+  104 00:C881: 16             .DB c3*$0006+s34/$0008
   105                        	db_c_s	c2,s33	;;4F
+  105 00:C882: 10             .DB c2*$0006+s33/$0008
   106                        	db_c_s	c3,s33	;;4G
+  106 00:C883: 16             .DB c3*$0006+s33/$0008
   107                        
   108                        
   109                        
   110                        lcd_d5	.equ lcd_d4+7
   111                        
   112                        	db_c_s	c2,s14	;;5A
+  112 00:C884: 0D             .DB c2*$0006+s14/$0008
   113                        	db_c_s	c2,s13	;;5B
+  113 00:C885: 0D             .DB c2*$0006+s13/$0008
   114                        	db_c_s	c3,s13	;;5C
+  114 00:C886: 13             .DB c3*$0006+s13/$0008
   115                        	db_c_s	c4,s14	;;5D
+  115 00:C887: 19             .DB c4*$0006+s14/$0008
   116                        	db_c_s	c3,s15	;;5E
+  116 00:C888: 13             .DB c3*$0006+s15/$0008
   117                        	db_c_s	c2,s15	;;5F
+  117 00:C889: 0D             .DB c2*$0006+s15/$0008
   118                        	db_c_s	c3,s14	;;5G
+  118 00:C88A: 13             .DB c3*$0006+s14/$0008
   119                        
   120                        lcd_d6	.equ lcd_d5+7
   121                        
   122                        	db_c_s	c0,s12	;;6A
+  122 00:C88B: 01             .DB c0*$0006+s12/$0008
   123                        	db_c_s	c1,s11	;;6B
+  123 00:C88C: 07             .DB c1*$0006+s11/$0008
   124                        	db_c_s	c3,s11	;;6C
+  124 00:C88D: 13             .DB c3*$0006+s11/$0008
   125                        	db_c_s	c4,s12	;;6D
+  125 00:C88E: 19             .DB c4*$0006+s12/$0008
   126                        	db_c_s	c3,s12	;;6E
+  126 00:C88F: 13             .DB c3*$0006+s12/$0008
   127                        	db_c_s	c1,s12	;;6F
+  127 00:C890: 07             .DB c1*$0006+s12/$0008
   128                        	db_c_s	c2,s12	;;6G
+  128 00:C891: 0D             .DB c2*$0006+s12/$0008
   129                        
   130                        lcd_d7	.equ lcd_d6+7
   131                        
   132                        	db_c_s	c0,s10	;;7A
+  132 00:C892: 01             .DB c0*$0006+s10/$0008
   133                        	db_c_s	c1,s10	;;7B
+  133 00:C893: 07             .DB c1*$0006+s10/$0008
   134                        	db_c_s	c3,s10	;;7C
+  134 00:C894: 13             .DB c3*$0006+s10/$0008
   135                        	db_c_s	c4,s10	;;7D
+  135 00:C895: 19             .DB c4*$0006+s10/$0008
   136                        	db_c_s	c2,s11	;;7E
+  136 00:C896: 0D             .DB c2*$0006+s11/$0008
   137                        	db_c_s	c0,s11	;;7F
+  137 00:C897: 01             .DB c0*$0006+s11/$0008
   138                        	db_c_s	c2,s10	;;7G
+  138 00:C898: 0D             .DB c2*$0006+s10/$0008
   139                        
   140                        lcd_d8	.equ lcd_d7+7
   141                        
   142                        	db_c_s	c0,s9	;;8A
+  142 00:C899: 01             .DB c0*$0006+s9/$0008
   143                        	db_c_s	c1,s8	;;8B
+  143 00:C89A: 07             .DB c1*$0006+s8/$0008
   144                        	db_c_s	c3,s8	;;8C
+  144 00:C89B: 13             .DB c3*$0006+s8/$0008
   145                        	db_c_s	c4,s8	;;8D
+  145 00:C89C: 19             .DB c4*$0006+s8/$0008
   146                        	db_c_s	c3,s9	;;8E
+  146 00:C89D: 13             .DB c3*$0006+s9/$0008
   147                        	db_c_s	c1,s9	;;8F
+  147 00:C89E: 07             .DB c1*$0006+s9/$0008
   148                        	db_c_s	c2,s9	;;8G
+  148 00:C89F: 0D             .DB c2*$0006+s9/$0008
   149                        lcd_d9	.equ lcd_d8+7
   150                        
   151                        	db_c_s	c0,s35	;;9A
+  151 00:C8A0: 04             .DB c0*$0006+s35/$0008
   152                        	db_c_s	c1,s35	;;9B
+  152 00:C8A1: 0A             .DB c1*$0006+s35/$0008
   153                        	db_c_s	c1,s36	;;9C
+  153 00:C8A2: 0A             .DB c1*$0006+s36/$0008
   154                        	db_c_s	c1,s37	;;9D
+  154 00:C8A3: 0A             .DB c1*$0006+s37/$0008
   155                        	db_c_s	c0,s37	;;9E
+  155 00:C8A4: 04             .DB c0*$0006+s37/$0008
   156                        	db_c_s	c0,s34	;;9F
+  156 00:C8A5: 04             .DB c0*$0006+s34/$0008
   157                        	db_c_s	c0,s36	;;9G
+  157 00:C8A6: 04             .DB c0*$0006+s36/$0008
   158                        
   159                        lcd_d10	.equ lcd_d9+7
   160                        
   161                        	db_c_s	c0,s15	;;10A
+  161 00:C8A7: 01             .DB c0*$0006+s15/$0008
   162                        	db_c_s	c1,s15	;;10B
+  162 00:C8A8: 07             .DB c1*$0006+s15/$0008
   163                        	db_c_s	c1,s32	;;10C
+  163 00:C8A9: 0A             .DB c1*$0006+s32/$0008
   164                        	db_c_s	c1,s33	;;10D
+  164 00:C8AA: 0A             .DB c1*$0006+s33/$0008
   165                        	db_c_s	c0,s33	;;10E
+  165 00:C8AB: 04             .DB c0*$0006+s33/$0008
   166                        	db_c_s	c0,s14	;;10F
+  166 00:C8AC: 01             .DB c0*$0006+s14/$0008
   167                        	db_c_s	c0,s32	;;10G
+  167 00:C8AD: 04             .DB c0*$0006+s32/$0008
   168                        
   169                        
   170                        
   171                        
   172                        
   173                        Lcd_dot:
   174                        lcd_col .equ Lcd_dot-lcd_table1
   175                        	db_c_s	c2,s35	;;col1
+  175 00:C8AE: 10             .DB c2*$0006+s35/$0008
   176                        	db_c_s	c3,s36	;;col2
+  176 00:C8AF: 16             .DB c3*$0006+s36/$0008
   177                        
   178                        	db_c_s	c1,s34	;;9H
+  178 00:C8B0: 0A             .DB c1*$0006+s34/$0008
   179                        
   180                        	db_c_s	c0,s13	;;10I
+  180 00:C8B1: 01             .DB c0*$0006+s13/$0008
   181                        	db_c_s	c1,s14	;;10H
+  181 00:C8B2: 07             .DB c1*$0006+s14/$0008
   182                        	db_c_s	c1,s13	;;10J
+  182 00:C8B3: 07             .DB c1*$0006+s13/$0008
   183                        
   184                        	db_c_s	c0,s41	;;ALM
+  184 00:C8B4: 05             .DB c0*$0006+s41/$0008
   185                        	db_c_s	c0,s40	;;SNZ
+  185 00:C8B5: 05             .DB c0*$0006+s40/$0008
   186                        	db_c_s	c0,s42	;;SIG
+  186 00:C8B6: 05             .DB c0*$0006+s42/$0008
   187                        
   188                        
   189                        
   190                        	db_c_s	c1,s42	;AM
+  190 00:C8B7: 0B             .DB c1*$0006+s42/$0008
   191                        	db_c_s	c1,s41	;;PM
+  191 00:C8B8: 0B             .DB c1*$0006+s41/$0008
   192                        
   193                        	db_c_s	c1,s40	;;K
+  193 00:C8B9: 0B             .DB c1*$0006+s40/$0008
   194                        	db_c_s	c1,s39	;;+
+  194 00:C8BA: 0A             .DB c1*$0006+s39/$0008
   195                        	db_c_s	c0,s39	;;-
+  195 00:C8BB: 04             .DB c0*$0006+s39/$0008
   196                        	db_c_s	c1,s38	;;*
+  196 00:C8BC: 0A             .DB c1*$0006+s38/$0008
   197                        	db_c_s	c0,s38	;;/
+  197 00:C8BD: 04             .DB c0*$0006+s38/$0008
   198                        
   199                        
   200                        	db_c_s	c4,s40	;;lcd_T1
+  200 00:C8BE: 1D             .DB c4*$0006+s40/$0008
   201                        	db_c_s	c4,s37	;;lcd_T2
+  201 00:C8BF: 1C             .DB c4*$0006+s37/$0008
   202                        	db_c_s	c4,s34	;;lcd_T3
+  202 00:C8C0: 1C             .DB c4*$0006+s34/$0008
   203                        	db_c_s	c4,s15	;;lcd_T4
+  203 00:C8C1: 19             .DB c4*$0006+s15/$0008
   204                        	db_c_s	c4,s13	;;lcd_T5
+  204 00:C8C2: 19             .DB c4*$0006+s13/$0008
   205                        	db_c_s	c4,s11	;;lcd_T6
+  205 00:C8C3: 19             .DB c4*$0006+s11/$0008
   206                        	db_c_s	c4,s9	;;lcd_T7
+  206 00:C8C4: 19             .DB c4*$0006+s9/$0008
   207                        	db_c_s	c2,s8	;;lcd_T8
+  207 00:C8C5: 0D             .DB c2*$0006+s8/$0008
   208                        
   209                        	lcd_col2		.EQU	lcd_col+1
   210                        	lcd_9H			.EQU	lcd_col+2
   211                        	lcd_10I			.EQU	lcd_col+3
   212                        	lcd_10H			.EQU	lcd_col+4
   213                        	lcd_10J			.EQU	lcd_col+5
   214                        	lcd_ALM			.EQU	lcd_col+6
   215                        	lcd_SNZ			.EQU	lcd_col+7
   216                        	lcd_SIG			.EQU	lcd_col+8
   217                        	lcd_AM			.EQU	lcd_col+9
   218                        	lcd_PM			.EQU	lcd_col+10
   219                        	lcd_Involution	.EQU	lcd_col+11
   220                        	lcd_Plus		.EQU	lcd_col+12
   221                        	lcd_SUB			.EQU	lcd_col+13
   222                        	lcd_Mul			.EQU	lcd_col+14
   223                        	lcd_DIV			.EQU	lcd_col+15
   224                        	lcd_T1		.EQU	lcd_col+16
   225                        	lcd_T2		.EQU	lcd_col+17
   226                        	lcd_T3		.EQU	lcd_col+18
   227                        	lcd_T4		.EQU	lcd_col+19
   228                        	lcd_T5		.EQU	lcd_col+20
   229                        	lcd_T6		.EQU	lcd_col+21
   230                        	lcd_T7		.EQU	lcd_col+22
   231                        	lcd_T8		.EQU	lcd_col+23
   232                        
   233                        
   234                        
   235                        
   236                        ;=============.EQU	lcd_=============================================
   237                        ;==========================================================
   238                        Lcd_bit:
   239                        
   240                        	db_c_y	c2,s41	;;1A
+  240 00:C8C6: 02             .DB $0001<<(s41-s41/$0008*$0008)
   241                        	db_c_y	c2,s40	;;1B
+  241 00:C8C7: 01             .DB $0001<<(s40-s40/$0008*$0008)
   242                        	db_c_y	c4,s41	;;1C
+  242 00:C8C8: 02             .DB $0001<<(s41-s41/$0008*$0008)
   243                        	db_c_y	c4,s42	;;1D
+  243 00:C8C9: 04             .DB $0001<<(s42-s42/$0008*$0008)
   244                        	db_c_y	c3,s42	;;1E
+  244 00:C8CA: 04             .DB $0001<<(s42-s42/$0008*$0008)
   245                        	db_c_y	c2,s42	;;1F
+  245 00:C8CB: 04             .DB $0001<<(s42-s42/$0008*$0008)
   246                        	db_c_y	c3,s41	;;1G
+  246 00:C8CC: 02             .DB $0001<<(s41-s41/$0008*$0008)
   247                        
   248                        
   249                        	db_c_y	c2,s38	;;2A
+  249 00:C8CD: 40             .DB $0001<<(s38-s38/$0008*$0008)
   250                        	db_c_y	c3,s38	;;2B
+  250 00:C8CE: 40             .DB $0001<<(s38-s38/$0008*$0008)
   251                        	db_c_y	c4,s38	;;2C
+  251 00:C8CF: 40             .DB $0001<<(s38-s38/$0008*$0008)
   252                        	db_c_y	c4,s39	;;2D
+  252 00:C8D0: 80             .DB $0001<<(s39-s39/$0008*$0008)
   253                        	db_c_y	c3,s40	;;2E
+  253 00:C8D1: 01             .DB $0001<<(s40-s40/$0008*$0008)
   254                        	db_c_y	c2,s39	;;2F
+  254 00:C8D2: 80             .DB $0001<<(s39-s39/$0008*$0008)
   255                        	db_c_y	c3,s39	;;2G
+  255 00:C8D3: 80             .DB $0001<<(s39-s39/$0008*$0008)
   256                        
   257                        
   258                        
   259                        	db_c_y	c2,s36	;;3A
+  259 00:C8D4: 10             .DB $0001<<(s36-s36/$0008*$0008)
   260                        	db_c_y	c2,s34	;;3B
+  260 00:C8D5: 04             .DB $0001<<(s34-s34/$0008*$0008)
   261                        	db_c_y	c4,s35	;;3C
+  261 00:C8D6: 08             .DB $0001<<(s35-s35/$0008*$0008)
   262                        	db_c_y	c4,s36	;;3D
+  262 00:C8D7: 10             .DB $0001<<(s36-s36/$0008*$0008)
   263                        	db_c_y	c3,s37	;;3E
+  263 00:C8D8: 20             .DB $0001<<(s37-s37/$0008*$0008)
   264                        	db_c_y	c2,s37	;;3F
+  264 00:C8D9: 20             .DB $0001<<(s37-s37/$0008*$0008)
   265                        	db_c_y	c3,s35	;;3G
+  265 00:C8DA: 08             .DB $0001<<(s35-s35/$0008*$0008)
   266                        
   267                        
   268                        
   269                        	db_c_y	c2,s32	;;4A
+  269 00:C8DB: 01             .DB $0001<<(s32-s32/$0008*$0008)
   270                        	db_c_y	c3,s32	;;4B
+  270 00:C8DC: 01             .DB $0001<<(s32-s32/$0008*$0008)
   271                        	db_c_y	c4,s32	;;4C
+  271 00:C8DD: 01             .DB $0001<<(s32-s32/$0008*$0008)
   272                        	db_c_y	c4,s33	;;4D
+  272 00:C8DE: 02             .DB $0001<<(s33-s33/$0008*$0008)
   273                        	db_c_y	c3,s34	;;4E
+  273 00:C8DF: 04             .DB $0001<<(s34-s34/$0008*$0008)
   274                        	db_c_y	c2,s33	;;4F
+  274 00:C8E0: 02             .DB $0001<<(s33-s33/$0008*$0008)
   275                        	db_c_y	c3,s33	;;4G
+  275 00:C8E1: 02             .DB $0001<<(s33-s33/$0008*$0008)
   276                        
   277                        
   278                        
   279                        
   280                        
   281                        	db_c_y	c2,s14	;;5A
+  281 00:C8E2: 40             .DB $0001<<(s14-s14/$0008*$0008)
   282                        	db_c_y	c2,s13	;;5B
+  282 00:C8E3: 20             .DB $0001<<(s13-s13/$0008*$0008)
   283                        	db_c_y	c3,s13	;;5C
+  283 00:C8E4: 20             .DB $0001<<(s13-s13/$0008*$0008)
   284                        	db_c_y	c4,s14	;;5D
+  284 00:C8E5: 40             .DB $0001<<(s14-s14/$0008*$0008)
   285                        	db_c_y	c3,s15	;;5E
+  285 00:C8E6: 80             .DB $0001<<(s15-s15/$0008*$0008)
   286                        	db_c_y	c2,s15	;;5F
+  286 00:C8E7: 80             .DB $0001<<(s15-s15/$0008*$0008)
   287                        	db_c_y	c3,s14	;;5G
+  287 00:C8E8: 40             .DB $0001<<(s14-s14/$0008*$0008)
   288                        
   289                        
   290                        
   291                        	db_c_y	c0,s12	;;6A
+  291 00:C8E9: 10             .DB $0001<<(s12-s12/$0008*$0008)
   292                        	db_c_y	c1,s11	;;6B
+  292 00:C8EA: 08             .DB $0001<<(s11-s11/$0008*$0008)
   293                        	db_c_y	c3,s11	;;6C
+  293 00:C8EB: 08             .DB $0001<<(s11-s11/$0008*$0008)
   294                        	db_c_y	c4,s12	;;6D
+  294 00:C8EC: 10             .DB $0001<<(s12-s12/$0008*$0008)
   295                        	db_c_y	c3,s12	;;6E
+  295 00:C8ED: 10             .DB $0001<<(s12-s12/$0008*$0008)
   296                        	db_c_y	c1,s12	;;6F
+  296 00:C8EE: 10             .DB $0001<<(s12-s12/$0008*$0008)
   297                        	db_c_y	c2,s12	;;6G
+  297 00:C8EF: 10             .DB $0001<<(s12-s12/$0008*$0008)
   298                        
   299                        
   300                        
   301                        	db_c_y	c0,s10	;;7A
+  301 00:C8F0: 04             .DB $0001<<(s10-s10/$0008*$0008)
   302                        	db_c_y	c1,s10	;;7B
+  302 00:C8F1: 04             .DB $0001<<(s10-s10/$0008*$0008)
   303                        	db_c_y	c3,s10	;;7C
+  303 00:C8F2: 04             .DB $0001<<(s10-s10/$0008*$0008)
   304                        	db_c_y	c4,s10	;;7D
+  304 00:C8F3: 04             .DB $0001<<(s10-s10/$0008*$0008)
   305                        	db_c_y	c2,s11	;;7E
+  305 00:C8F4: 08             .DB $0001<<(s11-s11/$0008*$0008)
   306                        	db_c_y	c0,s11	;;7F
+  306 00:C8F5: 08             .DB $0001<<(s11-s11/$0008*$0008)
   307                        	db_c_y	c2,s10	;;7G
+  307 00:C8F6: 04             .DB $0001<<(s10-s10/$0008*$0008)
   308                        
   309                        
   310                        	db_c_y	c0,s9	;;8A
+  310 00:C8F7: 02             .DB $0001<<(s9-s9/$0008*$0008)
   311                        	db_c_y	c1,s8	;;8B
+  311 00:C8F8: 01             .DB $0001<<(s8-s8/$0008*$0008)
   312                        	db_c_y	c3,s8	;;8C
+  312 00:C8F9: 01             .DB $0001<<(s8-s8/$0008*$0008)
   313                        	db_c_y	c4,s8	;;8D
+  313 00:C8FA: 01             .DB $0001<<(s8-s8/$0008*$0008)
   314                        	db_c_y	c3,s9	;;8E
+  314 00:C8FB: 02             .DB $0001<<(s9-s9/$0008*$0008)
   315                        	db_c_y	c1,s9	;;8F
+  315 00:C8FC: 02             .DB $0001<<(s9-s9/$0008*$0008)
   316                        	db_c_y	c2,s9	;;8G
+  316 00:C8FD: 02             .DB $0001<<(s9-s9/$0008*$0008)
   317                        
   318                        
   319                        	db_c_y	c0,s35	;;9A
+  319 00:C8FE: 08             .DB $0001<<(s35-s35/$0008*$0008)
   320                        	db_c_y	c1,s35	;;9B
+  320 00:C8FF: 08             .DB $0001<<(s35-s35/$0008*$0008)
   321                        	db_c_y	c1,s36	;;9C
+  321 00:C900: 10             .DB $0001<<(s36-s36/$0008*$0008)
   322                        	db_c_y	c1,s37	;;9D
+  322 00:C901: 20             .DB $0001<<(s37-s37/$0008*$0008)
   323                        	db_c_y	c0,s37	;;9E
+  323 00:C902: 20             .DB $0001<<(s37-s37/$0008*$0008)
   324                        	db_c_y	c0,s34	;;9F
+  324 00:C903: 04             .DB $0001<<(s34-s34/$0008*$0008)
   325                        	db_c_y	c0,s36	;;9G
+  325 00:C904: 10             .DB $0001<<(s36-s36/$0008*$0008)
   326                        
   327                        
   328                        
   329                        	db_c_y	c0,s15	;;10A
+  329 00:C905: 80             .DB $0001<<(s15-s15/$0008*$0008)
   330                        	db_c_y	c1,s15	;;10B
+  330 00:C906: 80             .DB $0001<<(s15-s15/$0008*$0008)
   331                        	db_c_y	c1,s32	;;10C
+  331 00:C907: 01             .DB $0001<<(s32-s32/$0008*$0008)
   332                        	db_c_y	c1,s33	;;10D
+  332 00:C908: 02             .DB $0001<<(s33-s33/$0008*$0008)
   333                        	db_c_y	c0,s33	;;10E
+  333 00:C909: 02             .DB $0001<<(s33-s33/$0008*$0008)
   334                        	db_c_y	c0,s14	;;10F
+  334 00:C90A: 40             .DB $0001<<(s14-s14/$0008*$0008)
   335                        	db_c_y	c0,s32	;;10G
+  335 00:C90B: 01             .DB $0001<<(s32-s32/$0008*$0008)
   336                        
   337                        
   338                        
   339                        
   340                        
   341                        	db_c_y	c2,s35	;;col1
+  341 00:C90C: 08             .DB $0001<<(s35-s35/$0008*$0008)
   342                        	db_c_y	c3,s36	;;col2
+  342 00:C90D: 10             .DB $0001<<(s36-s36/$0008*$0008)
   343                        
   344                        	db_c_y	c1,s34	;;9H
+  344 00:C90E: 04             .DB $0001<<(s34-s34/$0008*$0008)
   345                        
   346                        	db_c_y	c0,s13	;;10I
+  346 00:C90F: 20             .DB $0001<<(s13-s13/$0008*$0008)
   347                        	db_c_y	c1,s14	;;10H
+  347 00:C910: 40             .DB $0001<<(s14-s14/$0008*$0008)
   348                        	db_c_y	c1,s13	;;10J
+  348 00:C911: 20             .DB $0001<<(s13-s13/$0008*$0008)
   349                        
   350                        	db_c_y	c0,s41	;;ALM
+  350 00:C912: 02             .DB $0001<<(s41-s41/$0008*$0008)
   351                        	db_c_y	c0,s40	;;SNZ
+  351 00:C913: 01             .DB $0001<<(s40-s40/$0008*$0008)
   352                        	db_c_y	c0,s42	;;SIG
+  352 00:C914: 04             .DB $0001<<(s42-s42/$0008*$0008)
   353                        
   354                        
   355                        
   356                        	db_c_y	c1,s42	;AM
+  356 00:C915: 04             .DB $0001<<(s42-s42/$0008*$0008)
   357                        	db_c_y	c1,s41	;;PM
+  357 00:C916: 02             .DB $0001<<(s41-s41/$0008*$0008)
   358                        
   359                        	db_c_y	c1,s40	;;K
+  359 00:C917: 01             .DB $0001<<(s40-s40/$0008*$0008)
   360                        	db_c_y	c1,s39	;;+
+  360 00:C918: 80             .DB $0001<<(s39-s39/$0008*$0008)
   361                        	db_c_y	c0,s39	;;-
+  361 00:C919: 80             .DB $0001<<(s39-s39/$0008*$0008)
   362                        	db_c_y	c1,s38	;;*
+  362 00:C91A: 40             .DB $0001<<(s38-s38/$0008*$0008)
   363                        	db_c_y	c0,s38	;;/
+  363 00:C91B: 40             .DB $0001<<(s38-s38/$0008*$0008)
   364                        
   365                        
   366                        	db_c_y	c4,s40	;;lcd_T1
+  366 00:C91C: 01             .DB $0001<<(s40-s40/$0008*$0008)
   367                        	db_c_y	c4,s37	;;lcd_T2
+  367 00:C91D: 20             .DB $0001<<(s37-s37/$0008*$0008)
   368                        	db_c_y	c4,s34	;;lcd_T3
+  368 00:C91E: 04             .DB $0001<<(s34-s34/$0008*$0008)
   369                        	db_c_y	c4,s15	;;lcd_T4
+  369 00:C91F: 80             .DB $0001<<(s15-s15/$0008*$0008)
   370                        	db_c_y	c4,s13	;;lcd_T5
+  370 00:C920: 20             .DB $0001<<(s13-s13/$0008*$0008)
   371                        	db_c_y	c4,s11	;;lcd_T6
+  371 00:C921: 08             .DB $0001<<(s11-s11/$0008*$0008)
   372                        	db_c_y	c4,s9	;;lcd_T7
+  372 00:C922: 02             .DB $0001<<(s9-s9/$0008*$0008)
   373                        	db_c_y	c2,s8	;;lcd_T8
+  169 00:C923: 01             .DB $0001<<(s8-s8/$0008*$0008)
   373                        
   170                        .INCLUDE	Display\Display.asm
     1                        
     2                        
     3                        L_Display_Set_Mode_Prog_TO:
     4 00:C924: 16 9A C9      	JMP		L_Display_Set_Mode_Prog
     5                        L_Display_Normal_Prog:
     6 00:C927: 3B 9F FA      	BBS3	Sys_Flag_A,L_Display_Set_Mode_Prog_TO
     7 00:C92A: 3E 9F 0F      	BBS6	Sys_Flag_A,L_Display_Normal_Prog_RTS
     8                        ; 	LDA		R_Close_All_Dis
     9                        ; 	BNE		L_Display_Alarm_Normal_Prog;当全显时不做要求
    10                        ; 	JSR		L_Dis_Alm_Snz_Symbol_Prog
    11                        ; 	BBS3	Sys_Flag_A,L_Display_Set_Mode_Prog_TO
    12 00:C92D: 06            	CLD
    13 00:C92E: 43 90 18      	LDA		R_Mode
    14 00:C931: 04            	CLC
    15 00:C932: 18            	ROL
    16 00:C933: 1B            	TAX
    17 00:C934: 63 3E C9      	LDA		Table_Dis_2+1,X
    18 00:C937: 0A            	PHA
    19 00:C938: 63 3D C9      	LDA		Table_Dis_2,X
    20 00:C93B: 0A            	PHA
    21                        L_Display_Normal_Prog_RTS:
    22 00:C93C: 09            	RTS
    23                        Table_Dis_2:
    24 00:C93D: 46 C9         	DW		L_Display_Time_Normal_Prog-1
    25 00:C93F: 64 C9             DW      L_Display_Calculator_Normal_Prog-1
    26 00:C941: 64 C9         	DW		L_Display_Alarm_Normal_Prog-1
    27 00:C943: 65 C9         	DW		L_Display_Another_Time_Normal_Prog-1
    28 00:C945: 61 C9         	DW		L_Display_Postive_Timer_Set_Mode_Prog-1;正计时的正常计时自动退出
    29                        
    30                        
    31                        
    32                        
    33                        L_Display_Time_Normal_Prog:
    34 00:C947: 15 5D CA      	JSR		L_Display_Time_Sec_Prog
    35 00:C94A: 73 A8         	LDA		R_Time_Sec
    36 00:C94C: 12 17         	BNE		L_Display_Alarm_Normal_Prog_OUT
    37 00:C94E: 15 62 CA      	JSR		L_Display_Time_Min_Prog
    38 00:C951: 73 A9         	LDA		R_Time_Min
    39 00:C953: 12 10         	BNE		L_Display_Alarm_Normal_Prog_OUT
    40 00:C955: 15 67 CA      	JSR		L_Display_Time_Hr_Prog
    41 00:C958: 73 AA         	LDA		R_Time_Hr
    42 00:C95A: 12 09         	BNE		L_Display_Alarm_Normal_Prog_OUT
    43 00:C95C: 15 81 CC      	JSR		L_Clr_Time_Week_Prog
    44 00:C95F: 16 7B CA      	JMP		L_Display_Time_Week_Prog
    45                        
    46                        
    47                        
    48                        L_Display_Postive_Timer_Set_Mode_Prog:
    49 00:C962: 15 5B CB      	JSR		L_Dis_col_Prog
    50                        L_Display_Alarm_Normal_Prog:
    51                        L_Display_Alarm_Normal_Prog_OUT:
    52                        L_Display_Calculator_Normal_Prog:
    53 00:C965: 09            	RTS
    54                        
    55                        
    56                        
    57                        L_Display_Another_Time_Normal_Prog:
    58 00:C966: 15 5D CA      	JSR		L_Display_Time_Sec_Prog
    59 00:C969: 73 A8         	LDA		R_Time_Sec
    60 00:C96B: 12 F8         	BNE		L_Display_Alarm_Normal_Prog_OUT
    61 00:C96D: 15 28 CA      	JSR		L_Display_Another_Time_Min_Prog
    62 00:C970: 73 AF         	LDA		R_Time_Min_Another
    63 00:C972: 12 F1         	BNE		L_Display_Alarm_Normal_Prog_OUT
    64 00:C974: 15 2D CA      	JSR		L_Display_Another_Time_Hr_Prog
    65 00:C977: 09            	RTS
    66                        
    67                        
    68                        
    69                        
    70                        L_Display_Postive_Timer_Normal_Prog:
    71 00:C978: 30 A2 EA      	BBR0	Sys_Flag_D,L_Display_Alarm_Normal_Prog;没有开始正计时是不显示
    72 00:C97B: 3D A2 E7      	BBS5	Sys_Flag_D,L_Display_Alarm_Normal_Prog;若有中途测量，不显示
    73 00:C97E: 3E 9F E4      	BBS6	Sys_Flag_A,L_Display_Alarm_Normal_Prog
    74 00:C981: 15 03 CB      	JSR		L_Display_Timer_Ms_Prog
    75 00:C984: 73 B1         	LDA		R_Timer_Ms
    76 00:C986: 12 DD         	BNE		L_Display_Alarm_Normal_Prog_OUT
    77 00:C988: 15 F4 CA      	JSR		L_Display_Positive_Timer_Sec_Prog
    78 00:C98B: 73 B2         	LDA		R_Timer_Sec
    79 00:C98D: 12 D6         	BNE		L_Display_Alarm_Normal_Prog_OUT
    80 00:C98F: 15 F9 CA      	JSR		L_Display_Positive_Timer_Min_Prog
    81 00:C992: 73 B4         	LDA		R_Timer_Hr
    82 00:C994: 12 CF         	BNE		L_Display_Alarm_Normal_Prog_OUT
    83 00:C996: 15 FE CA      	JSR		L_Display_Positive_Timer_Hr_Prog
    84 00:C999: 09                RTS
    85                        
    86                        
    87                        
    88                        L_Display_Set_Mode_Prog:
    89 00:C99A: 43 90 18      	LDA		R_Mode
    90 00:C99D: 04            	CLC
    91 00:C99E: 06            	CLD
    92 00:C99F: 18            	ROL
    93 00:C9A0: 1B            	TAX
    94 00:C9A1: 63 AB C9      	LDA		Table_Display_Set_Mode+1,X
    95 00:C9A4: 0A            	PHA
    96 00:C9A5: 63 AA C9      	LDA		Table_Display_Set_Mode,X
    97 00:C9A8: 0A            	PHA
    98                        L_Display_Set_Mode_Prog_RTS:
    99 00:C9A9: 09            	RTS
   100                        Table_Display_Set_Mode:
   101 00:C9AA: B3 C9         	DW		L_Dispaly_Time_Prog_Set_Mode-1
   102 00:C9AC: A8 C9         	DW		L_Display_Set_Mode_Prog_RTS-1
   103 00:C9AE: F0 C9         	DW		L_Display_Alarm_Clock_Set_Prog-1
   104 00:C9B0: 1D CA         	DW		L_Display_Another_Time_Set_Mode_Prog-1
   105 00:C9B2: A8 C9         	DW		L_Display_Set_Mode_Prog_RTS-1
   106                        
   107                        
   108                        L_Dispaly_Time_Prog_Set_Mode:
   109 00:C9B4: 73 F1         	LDA		R_Mode_Set
   110 00:C9B6: 56 05         	CMP		#5
   111 00:C9B8: 10 2A         	BCC		L_Display_Time_Prog_1
   112 00:C9BA: 15 43 CA      	JSR		L_Display_Time_Date_Prog
   113 00:C9BD: 09            	RTS
   114                        
   115                        
   116                        L_Display_Prog:
   117 00:C9BE: 15 42 CB      	JSR		L_Dis_Alm_Snz_Symbol_Prog
   118 00:C9C1: 15 55 CB      	JSR		L_Dis_sig_Prog
   119 00:C9C4: 15 5B CB      	JSR		L_Dis_col_Prog
   120 00:C9C7: 06            	CLD
   121 00:C9C8: 43 90 18      	LDA		R_Mode
   122 00:C9CB: 04            	CLC
   123 00:C9CC: 18            	ROL
   124 00:C9CD: 1B            	TAX
   125 00:C9CE: 63 D8 C9      	LDA		Table_Dis_1+1,X
   126 00:C9D1: 0A            	PHA
   127 00:C9D2: 63 D7 C9      	LDA		Table_Dis_1,X
   128 00:C9D5: 0A            	PHA
   129                        L_Display_Prog_1:
   130 00:C9D6: 09            	RTS
   131                        Table_Dis_1:
   132 00:C9D7: E0 C9         	DW		L_Display_Time_Prog-1
   133 00:C9D9: 33 D3             DW      L_Display_Calculator_Prog-1
   134 00:C9DB: ED C9         	DW		L_Display_Alarm_Prog-1
   135 00:C9DD: 1A CA         	DW		L_Display_Another_Time_Prog-1
   136 00:C9DF: F7 C9         	DW		L_Display_Postive_Timer_Prog-1
   137                        
   138                        L_Display_Time_Prog:
   139 00:C9E1: 15 7B CA      	JSR		L_Display_Time_Week_Prog
   140                        L_Display_Time_Prog_1:
   141 00:C9E4: 15 5D CA      	JSR		L_Display_Time_Sec_Prog
   142 00:C9E7: 15 62 CA      	JSR		L_Display_Time_Min_Prog
   143 00:C9EA: 15 67 CA      	JSR		L_Display_Time_Hr_Prog
   144 00:C9ED: 09            	RTS
   145                        
   146                        L_Display_Alarm_Prog:
   147 00:C9EE: 15 E5 CA      	JSR		L_Display_Alarm_Clock_AL_Symbol_Prog
   148                        L_Display_Alarm_Clock_Set_Prog:
   149 00:C9F1: 15 E0 CA      	JSR		L_Display_Alarm_Clock_Hr_Prog
   150 00:C9F4: 15 DB CA      	JSR		L_Display_Alarm_Clock_Min_Prog
   151 00:C9F7: 09            	RTS
   152                        
   153                        
   154                        
   155                        
   156                        L_Display_Postive_Timer_Prog:
   157 00:C9F8: 3E 9F DB      	BBS6	Sys_Flag_A,L_Display_Prog_1
   158 00:C9FB: 3D A2 0D      	BBS5	Sys_Flag_D,L_Display_Postive_Timer_Prog_1
   159 00:C9FE: 15 03 CB          JSR     L_Display_Positive_Timer_Ms_Prog
   160 00:CA01: 15 F4 CA      	JSR		L_Display_Positive_Timer_Sec_Prog
   161 00:CA04: 15 F9 CA      	JSR		L_Display_Positive_Timer_Min_Prog
   162 00:CA07: 15 08 CB      	JSR		L_Display_Positive_Timer_ST_Prog
   163 00:CA0A: 09                RTS
   164                        L_Display_Postive_Timer_Prog_1:
   165 00:CA0B: 15 81 CC      	JSR		L_Clr_Time_Week_Prog
   166 00:CA0E: 15 16 CB      	JSR		L_Display_Positive_Timer_LR_Prog
   167 00:CA11: 15 33 CB          JSR     L_Display_Positive_Timer_Ms_Prog_Measurement
   168 00:CA14: 15 24 CB      	JSR		L_Display_Positive_Timer_Sec_Prog_Measurement
   169 00:CA17: 15 29 CB      	JSR		L_Display_Positive_Timer_Min_Prog_Measurement
   170 00:CA1A: 09                RTS
   171                        
   172                        L_Display_Another_Time_Prog:
   173 00:CA1B: 15 32 CA      	JSR		L_Display_Another_Time_DT_Symbol_Prog
   174                        L_Display_Another_Time_Set_Mode_Prog:
   175 00:CA1E: 15 5D CA      	JSR		L_Display_Time_Sec_Prog
   176 00:CA21: 15 28 CA      	JSR		L_Display_Another_Time_Min_Prog
   177 00:CA24: 15 2D CA      	JSR		L_Display_Another_Time_Hr_Prog
   178                        
   179 00:CA27: 09            	RTS
   180                        
   181                        
   182                        
   183                        
   184                        
   185                        
   185                        
   171                        .INCLUDE	Display\Display_Time.asm
     1                        L_Display_Another_Time_Min_Prog:
     2 00:CA28: 73 AF         	LDA		R_Time_Min_Another
     3 00:CA2A: 16 FC CC      	JMP		L_Display_lcd_Prog_Normal_Min
     4                        L_Display_Another_Time_Hr_Prog:
     5 00:CA2D: 73 B0         	LDA		R_Time_Hr_Another
     6 00:CA2F: 16 A0 CC      	JMP		L_Display_lcd_Prog_Normal_Hr
     7                        L_Display_Another_Time_DT_Symbol_Prog:
     8 00:CA32: 53 00         	LDA		#0
     9 00:CA34: 15 75 CC      	JSR		L_Display_lcd_d10_Prog_Normal
    10 00:CA37: 53 0F         	LDA		#15
    11 00:CA39: 15 7B CC      	JSR		L_Display_lcd_d9_Prog_Normal
    12 00:CA3C: 15 75 CB      	JSR		L_Dis_lcd_10H_Prog
    13 00:CA3F: 15 6D CB      	JSR		L_Dis_lcd_9H_Prog
    14 00:CA42: 09            	RTS
    15                        
    16                        
    17                        L_Display_Time_Date_Prog:
    18 00:CA43: 15 C8 CB      	JSR		L_Clr_lcd_AM_Prog
    19 00:CA46: 15 CC CB      	JSR		L_Clr_lcd_PM_Prog
    20 00:CA49: 15 B1 CB      	JSR		L_Clr_col_Prog
    21 00:CA4C: 15 6C CA      	JSR		L_Display_Time_Day_Prog
    22 00:CA4F: 15 71 CA      	JSR		L_Display_Time_Month_Prog
    23 00:CA52: 15 76 CA      	JSR		L_Display_Time_Year_Prog
    24 00:CA55: 5E 23         	LDX		#lcd_d6
    25 00:CA57: 53 0B         	LDA		#11
    26 00:CA59: 15 E0 C7      	JSR		L_Dis_8Bit_DigitDot_Prog
    27 00:CA5C: 09            	RTS
    28                        
    29                        
    30                        
    31                        ;===============================================
    32                        
    33                        L_Display_Time_Sec_Prog:
    34 00:CA5D: 73 A8         	LDA		R_Time_Sec
    35 00:CA5F: 16 E7 CC      	JMP		L_Display_lcd_Prog_Normal_Sec
    36                        ;======================================
    37                        L_Display_Time_Min_Prog:
    38 00:CA62: 73 A9         	LDA		R_Time_Min
    39 00:CA64: 16 FC CC      	JMP		L_Display_lcd_Prog_Normal_Min
    40                        ;=====================================
    41                        L_Display_Time_Hr_Prog:
    42 00:CA67: 73 AA         	LDA		R_Time_Hr
    43 00:CA69: 16 A0 CC      	JMP		L_Display_lcd_Prog_Normal_Hr
    44                        ;=====================================
    45                        L_Display_Time_Day_Prog:
    46 00:CA6C: 73 AB         	LDA		R_Time_Day
    47 00:CA6E: 16 C3 CC      	JMP		L_Display_lcd_Prog_Normal_Day
    48                        ;=====================================
    49                        L_Display_Time_Month_Prog:
    50 00:CA71: 73 AC         	LDA		R_Time_Month
    51 00:CA73: 16 D5 CC      	JMP		L_Display_lcd_Prog_Normal_Month
    52                        ;========================================
    53                        L_Display_Time_Year_Prog:
    54 00:CA76: 73 AD         	LDA		R_Time_Year
    55 00:CA78: 16 A3 CC      	JMP		L_Display_lcd_Prog_Normal_Timer
    56                        
    57                        ;============================================
    58                        L_Display_Time_Week_Prog:;两位显示数字的
    59 00:CA7B: 15 B5 CA      	JSR		L_Dis_week_Usually
    60 00:CA7E: 06            	CLD
    61 00:CA7F: 73 AE             LDA     R_Time_Week
    62 00:CA81: 04                CLC
    63 00:CA82: 18                ROL
    64 00:CA83: 1B                TAX
    65 00:CA84: 63 8E CA          LDA     Table_Dis_Week+1,X
    66 00:CA87: 0A                PHA
    67 00:CA88: 63 8D CA          LDA     Table_Dis_Week,X
    68 00:CA8B: 0A                PHA
    69 00:CA8C: 09                RTS
    70                        Table_Dis_Week:
    71 00:CA8D: B3 CA         	DW		L_Display_Time_Sunday_Prog-1
    72 00:CA8F: 9A CA         	DW		L_Display_Time_Monday_Prog-1
    73 00:CA91: A1 CA         	DW		L_Display_Time_Tuesday_Prog-1
    74 00:CA93: A5 CA         	DW		L_Display_Time_WednesDay_Prog-1
    75 00:CA95: AC CA         	DW		L_Display_Time_Thursday_Prog-1
    76 00:CA97: B0 CA         	DW		L_Display_Time_Friday_Prog-1
    77 00:CA99: B3 CA         	DW		L_Display_Time_Saturday_Prog-1
    78                        
    79                        
    80                        
    81                        L_Display_Time_Monday_Prog:
    82 00:CA9B: 15 79 CB      	JSR		L_Dis_lcd_10J_Prog
    83 00:CA9E: 15 75 CB      	JSR		L_Dis_lcd_10H_Prog
    84 00:CAA1: 09                RTS
    85                        
    86                        L_Display_Time_Tuesday_Prog:
    87 00:CAA2: 15 75 CB      	JSR		L_Dis_lcd_10H_Prog
    88 00:CAA5: 09            	RTS
    89                        L_Display_Time_WednesDay_Prog:
    90 00:CAA6: 15 71 CB      	JSR		L_Dis_lcd_10I_Prog
    91 00:CAA9: 15 79 CB      	JSR		L_Dis_lcd_10J_Prog
    92 00:CAAC: 09            	RTS
    93                        L_Display_Time_Thursday_Prog:
    94 00:CAAD: 15 75 CB      	JSR		L_Dis_lcd_10H_Prog
    95 00:CAB0: 09            	RTS
    96                        L_Display_Time_Friday_Prog:
    97 00:CAB1: 15 6D CB      	JSR		L_Dis_lcd_9H_Prog
    98                        
    99                        L_Display_Time_Saturday_Prog:
   100                        L_Display_Time_Sunday_Prog:
   101 00:CAB4: 09            	RTS
   102                        
   103                        L_Dis_week_Usually:
   104 00:CAB5: 73 AE         	LDA		R_Time_Week
   105 00:CAB7: 04            	CLC
   106 00:CAB8: 18            	ROL
   107 00:CAB9: 7F F6         	STA		P_Temp+4
   108 00:CABB: 1B            	TAX
   109 00:CABC: 63 CD CA      	LDA		Table_week,X
   110 00:CABF: 15 7B CC      	JSR		L_Display_lcd_d9_Prog_Normal
   111 00:CAC2: 73 F6         	LDA		P_Temp+4
   112 00:CAC4: 03            	INC
   113 00:CAC5: 1B            	TAX
   114 00:CAC6: 63 CD CA      	LDA		Table_week,X
   115 00:CAC9: 15 75 CC      	JSR		L_Display_lcd_d10_Prog_Normal
   116 00:CACC: 09            	RTS
   117                        
   118                        Table_week:
   119                        
   120 00:CACD: 10            	.byte	16
   121 00:CACE: 05            	.byte	5
   122                        
   123                        
   124 00:CACF: 00            	.byte	0
   125 00:CAD0: 0E            	.byte	14
   126                        
   127                        
   128 00:CAD1: 10            	.byte	16
   129 00:CAD2: 0F            	.byte	15
   130                        
   131                        
   132 00:CAD3: 11            	.byte	17
   133 00:CAD4: 10            	.byte	16
   134                        
   135                        
   136 00:CAD5: 0C            	.byte	12
   137 00:CAD6: 0F            	.byte	15
   138                        
   139                        
   140 00:CAD7: 12            	.byte	18
   141 00:CAD8: 13            	.byte	19
   142                        
   143                        
   144 00:CAD9: 12            	.byte	18
   145 00:CADA: 05            	.byte	5
   146                        
   147                        
   148                        
   149                        ; L_Display_Time_Week_Prog:;三位显示数字的
   150                        ; 	CLD
   151                        ;     LDA     R_Time_Week
   152                        ;     CLC
   153                        ;     ROL
   154                        ;     TAX
   155                        ;     LDA     Table_Dis_Week+1,X
   156                        ;     PHA
   157                        ;     LDA     Table_Dis_Week,X
   158                        ;     PHA
   159                        ;     RTS
   160                        ; Table_Dis_Week:
   161                        ; 	DW		L_Display_Time_Sunday_Prog-1
   162                        ; 	DW		L_Display_Time_Monday_Prog-1
   163                        ; 	DW		L_Display_Time_Tuesday_Prog-1
   164                        ; 	DW		L_Display_Time_WednesDay_Prog-1
   165                        ; 	DW		L_Display_Time_Thursday_Prog-1
   166                        ; 	DW		L_Display_Time_Friday_Prog-1
   167                        ; 	DW		L_Display_Time_Saturday_Prog-1
   168                        
   169                        
   170                        
   171                        ; L_Display_Time_Monday_Prog:
   172                        ; 	JSR		L_Dis_lcd_13J_Prog
   173                        ; 	JSR		L_Dis_lcd_13H_Prog
   174                        ; 	JSR		L_Dis_lcd_11H_Prog
   175                        ; 	BRA		L_Dis_week_Usually
   176                        ; L_Display_Time_Tuesday_Prog:
   177                        ; 	JSR		L_Dis_lcd_13H_Prog
   178                        ; 	BRA		L_Dis_week_Usually
   179                        ; L_Display_Time_WednesDay_Prog:
   180                        ; 	JSR		L_Dis_lcd_13I_Prog
   181                        ; 	JSR		L_Dis_lcd_13J_Prog
   182                        ; 	JSR		L_Dis_lcd_11H_Prog
   183                        ; 	JSR		L_Dis_lcd_11I_Prog
   184                        ; 	BRA		L_Dis_week_Usually
   185                        ; L_Display_Time_Thursday_Prog:
   186                        ; 	JSR		L_Dis_lcd_13H_Prog
   187                        ; 	BRA		L_Dis_week_Usually
   188                        ; L_Display_Time_Friday_Prog:
   189                        ; 	JSR		L_Dis_lcd_12H_Prog
   190                        ; 	BRA		L_Dis_week_Usually
   191                        ; L_Display_Time_Saturday_Prog:
   192                        ; 	JSR		L_Dis_lcd_11H_Prog
   193                        ; 	BRA		L_Dis_week_Usually
   194                        ; L_Display_Time_Sunday_Prog:
   195                        ; 	JSR		L_Dis_lcd_11H_Prog
   196                        ; L_Dis_week_Usually:
   197                        ; 	LDA		R_Time_Week
   198                        ; 	CLC
   199                        ; 	ROL
   200                        ; 	ADC		R_Time_Week
   201                        ; 	STA		P_Temp+4
   202                        ; 	TAX
   203                        ; 	LDA		Table_week,X
   204                        ; 	JSR		L_Display_lcd_d11_Prog_Normal
   205                        ; 	LDA		P_Temp+4
   206                        ; 	INC
   207                        ; 	TAX
   208                        ; 	LDA		Table_week,X
   209                        ; 	JSR		L_Display_lcd_d12_Prog_Normal
   210                        ; 	LDA		P_Temp+4
   211                        ; 	INC
   212                        ; 	INC
   213                        ; 	TAX
   214                        ; 	LDA		Table_week,X
   215                        ; 	JSR		L_Display_lcd_d13_Prog_Normal
   216                        ; 	RTS
   217                        
   218                        ; Table_week:
   219                        ; 	.byte	14
   220                        ; 	.byte	16
   221                        ; 	.byte	5
   222                        
   223                        ; 	.byte	14
   224                        ; 	.byte	0
   225                        ; 	.byte	14
   226                        
   227                        ; 	.byte	17
   228                        ; 	.byte	16
   229                        ; 	.byte	15
   230                        
   231                        ; 	.byte	0
   232                        ; 	.byte	17
   233                        ; 	.byte	16
   234                        
   235                        ; 	.byte	16
   236                        ; 	.byte	12
   237                        ; 	.byte	15
   238                        
   239                        ; 	.byte	1
   240                        ; 	.byte	18
   241                        ; 	.byte	19
   242                        
   243                        ; 	.byte	15
   244                        ; 	.byte	18
   245                        ; 	.byte	5
   245                        
   172                        .INCLUDE	Display\Display_Alarm.asm
     1                        
     2                        ;======================================
     3                        L_Display_Alarm_Clock_Min_Prog:
     4 00:CADB: 73 B7         	LDA		R_Alarm_Clock_Min
     5 00:CADD: 16 FC CC      	JMP		L_Display_lcd_Prog_Normal_Min
     6                        ;=====================================
     7                        L_Display_Alarm_Clock_Hr_Prog:
     8 00:CAE0: 73 B8         	LDA		R_Alarm_Clock_Hr
     9 00:CAE2: 16 A0 CC      	JMP		L_Display_lcd_Prog_Normal_Hr
    10                        ;=====================================
    11                        ; L_Display_Alarm_Clock_Day_Prog:
    12                        ; 	LDA		R_Alarm_Clock_Day
    13                        ;     BEQ     L_Dis_Minus_Prog_Day
    14                        ; 	JMP		L_Display_lcd_Prog_Normal_Day
    15                        ; ;=====================================
    16                        ; L_Display_Alarm_Clock_Month_Prog:
    17                        ; 	LDA		R_Alarm_Clock_Month
    18                        ;     BEQ     L_Dis_Minus_Prog_Month
    19                        ; 	JMP		L_Display_lcd_Prog_Normal_Month
    20                        ;===================================
    21                        ; L_Display_Alarm_Hourly_Prog:
    22                        ;     LDA     #0
    23                        ;     JSR     L_Display_lcd_Prog_Normal_Min
    24                        ;     JSR     L_Clr_Hr_Prog
    25                        ;     RTS
    26                        ;====================================
    27                        L_Display_Alarm_Clock_AL_Symbol_Prog:
    28 00:CAE5: 53 12             LDA     #18
    29 00:CAE7: 5E 3F             LDX     #lcd_d10
    30 00:CAE9: 15 E0 C7          JSR     L_Dis_8Bit_DigitDot_Prog
    31 00:CAEC: 53 14             LDA     #20
    32 00:CAEE: 5E 38             LDX     #lcd_d9
    33 00:CAF0: 15 E0 C7          JSR     L_Dis_8Bit_DigitDot_Prog
    34 00:CAF3: 09                RTS
    35                        
    36                        
    37                        ; L_Dis_Minus_Prog_Day:
    38                        ;     LDA     #11
    39                        ;     LDX     #lcd_d7
    40                        ;     JSR     L_Dis_8Bit_DigitDot_Prog
    41                        ;     LDA     #11
    42                        ;     LDX     #lcd_d8
    43                        ;     JMP     L_Dis_8Bit_DigitDot_Prog
    44                        
    45                        ; L_Dis_Minus_Prog_Month:
    46                        ;     LDA     #11
    47                        ;     LDX     #lcd_d9
    48                        ;     JSR     L_Dis_8Bit_DigitDot_Prog
    49                        ;     LDA     #10
    50                        ;     LDX     #lcd_d10
    51                        ;     JMP     L_Dis_8Bit_DigitDot_Prog
    51                        
   173                        .INCLUDE	Display\Display_Timer.asm
     1                        L_Display_Positive_Timer_Sec_Prog:
     2 00:CAF4: 73 B2         	LDA		R_Timer_Sec
     3 00:CAF6: 16 FC CC      	JMP		L_Display_lcd_Prog_Normal_Min
     4                        ;======================================
     5                        L_Display_Positive_Timer_Min_Prog:
     6 00:CAF9: 73 B3         	LDA		R_Timer_Min
     7 00:CAFB: 16 A3 CC      	JMP		L_Display_lcd_Prog_Normal_Timer
     8                        ;=====================================
     9                        L_Display_Positive_Timer_Hr_Prog:
    10 00:CAFE: 73 B4         	LDA		R_Timer_Hr
    11 00:CB00: 16 A3 CC      	JMP		L_Display_lcd_Prog_Normal_Timer
    12                        ;=====================================
    13                        L_Display_Timer_Ms_Prog:
    14                        L_Display_Positive_Timer_Ms_Prog:
    15 00:CB03: 73 B1         	LDA		R_Timer_Ms
    16 00:CB05: 16 E7 CC      	JMP		L_Display_lcd_Prog_Normal_Sec
    17                        
    18                        L_Display_Positive_Timer_ST_Prog:
    19 00:CB08: 53 05             LDA     #5
    20 00:CB0A: 15 75 CC          JSR     L_Display_lcd_d10_Prog_Normal
    21 00:CB0D: 53 0F             LDA     #15
    22 00:CB0F: 15 7B CC          JSR     L_Display_lcd_d9_Prog_Normal
    23 00:CB12: 15 6D CB          JSR     L_Dis_lcd_9H_Prog
    24 00:CB15: 09            	RTS
    25                        L_Display_Positive_Timer_LR_Prog:
    26 00:CB16: 53 14             LDA     #20
    27 00:CB18: 15 75 CC          JSR     L_Display_lcd_d10_Prog_Normal
    28 00:CB1B: 53 12             LDA     #18
    29 00:CB1D: 15 7B CC          JSR     L_Display_lcd_d9_Prog_Normal
    30 00:CB20: 15 6D CB          JSR     L_Dis_lcd_9H_Prog
    31 00:CB23: 09            	RTS
    32                        
    33                        
    34                        L_Display_Positive_Timer_Sec_Prog_Measurement:
    35 00:CB24: 73 D6         	LDA		R_Timer_Sec_Measurement
    36 00:CB26: 16 FC CC      	JMP		L_Display_lcd_Prog_Normal_Min
    37                        ;======================================
    38                        L_Display_Positive_Timer_Min_Prog_Measurement:
    39 00:CB29: 73 D5         	LDA		R_Timer_Min_Measurement
    40 00:CB2B: 16 A3 CC      	JMP		L_Display_lcd_Prog_Normal_Timer
    41                        ;=====================================
    42                        L_Display_Positive_Timer_Hr_Prog_Measurement:
    43 00:CB2E: 73 D4         	LDA		R_Timer_Hr_Measurement
    44 00:CB30: 16 A3 CC      	JMP		L_Display_lcd_Prog_Normal_Timer
    45                        ;=====================================
    46                        L_Display_Timer_Ms_Prog_Measurement:
    47                        L_Display_Positive_Timer_Ms_Prog_Measurement:
    48 00:CB33: 73 D7         	LDA		R_Timer_Ms_Measurement
    49 00:CB35: 16 E7 CC      	JMP		L_Display_lcd_Prog_Normal_Sec
    50                        ; ;上面是正计时显示函数
    51                        ; ;==========================================
    52                        ; L_Display_Destive_Timer_Sec_Prog:
    53                        ; 	LDA		R_Timer_Sec_Countdown
    54                        ; 	JMP		L_Display_lcd_Prog_Normal_Sec
    55                        ; ;======================================
    56                        ; L_Display_Destive_Timer_Min_Prog:
    57                        ; 	LDA		R_Timer_Min_Countdown
    58                        ; 	JMP		L_Display_lcd_Prog_Normal_Min
    59                        ; ;=====================================
    60                        ; L_Display_Destive_Timer_Hr_Prog:
    61                        ; 	LDA		R_Timer_Hr_Countdown
    62                        ; 	JMP		L_Display_lcd_Prog_Normal_Timer
    63                        
    64                        ; L_Display_Destive_Timer_TR_Symbol_Prog:
    65                        ;     LDA     #15
    66                        ;     JSR     L_Display_lcd_d10_Prog_Normal
    67                        ;     LDA     #18
    68                        ;     JSR     L_Display_lcd_d9_Prog_Normal
    69                        ; 	JSR		L_Dis_lcd_10H_Prog
    70                        ;     JSR     L_Dis_lcd_9H_Prog
    71                        ; 	RTS
    71                        
   174                        .INCLUDE	Display\Display_Symbol.asm
     1                        ;显示闹钟标志，贪睡标志的清除
     2                        L_Clr_Alm_Snz_Symbol_Prog:
     3 00:CB38: 15 BC CB          JSR     L_Clr_lcd_Alm_Prog
     4                        L_Clr_Alm_Snz_Symbol_Prog_1:
     5 00:CB3B: 16 C0 CB          JMP     L_Clr_lcd_Snz_Prog
     6                        RTS_1:
     7 00:CB3E: 09                RTS
     8                        L_Dis_Alm_Snz_Symbol_Noraml_Prog:
     9 00:CB3F: 34 9F FC          BBR4    Sys_Flag_A,RTS_1;闹铃没有响是，不做显示
    10                        L_Dis_Alm_Snz_Symbol_Prog:
    11 00:CB42: 73 B9             LDA     R_Alarm_Mode
    12 00:CB44: 13 F2             BEQ     L_Clr_Alm_Snz_Symbol_Prog
    13 00:CB46: 15 7D CB          JSR     L_Dis_lcd_Alm_Prog
    14 00:CB49: 73 B9             LDA     R_Alarm_Mode
    15 00:CB4B: 56 02             CMP     #2
    16 00:CB4D: 12 EC             BNE     L_Clr_Alm_Snz_Symbol_Prog_1
    17 00:CB4F: 16 81 CB          JMP     L_Dis_lcd_Snz_Prog
    18 00:CB52: 15 24 C8          JSR     F_DispSymbol
    19                        ;========================================
    20                        L_Dis_sig_Prog:
    21 00:CB55: 39 A1 2D          BBS1    Sys_Flag_C,L_Dis_lcd_Sig_Prog
    22 00:CB58: 16 C4 CB          JMP     L_Clr_lcd_Sig_Prog
    23                        
    24                        L_Dis_col_Prog:
    25 00:CB5B: 43 90 18          LDA     R_Mode
    26 00:CB5E: 56 01             CMP     #1
    27 00:CB60: 13 DC             BEQ     RTS_1
    28 00:CB62: 5E 46             LDX     #lcd_col
    29 00:CB64: 15 24 C8          JSR     F_DispSymbol
    30 00:CB67: 5E 47             LDX     #lcd_col2
    31                        L_Dis_Symbol_Prog:
    32 00:CB69: 15 24 C8          JSR     F_DispSymbol
    33 00:CB6C: 09                RTS
    34                        L_Dis_lcd_9H_Prog:
    35 00:CB6D: 5E 48         	LDX     #lcd_9H
    36 00:CB6F: 17 F8             BRA		L_Dis_Symbol_Prog
    37                        L_Dis_lcd_10I_Prog:
    38 00:CB71: 5E 49             LDX     #lcd_10I
    39 00:CB73: 17 F4             BRA		L_Dis_Symbol_Prog
    40                        L_Dis_lcd_10H_Prog:
    41 00:CB75: 5E 4A         	LDX     #lcd_10H
    42 00:CB77: 17 F0             BRA		L_Dis_Symbol_Prog
    43                        L_Dis_lcd_10J_Prog:
    44 00:CB79: 5E 4B             LDX     #lcd_10J
    45 00:CB7B: 17 EC             BRA		L_Dis_Symbol_Prog
    46                        L_Dis_lcd_Alm_Prog:
    47 00:CB7D: 5E 4C             LDX     #lcd_ALM
    48 00:CB7F: 17 E8             BRA		L_Dis_Symbol_Prog
    49                        L_Dis_lcd_Snz_Prog:
    50 00:CB81: 5E 4D             LDX     #lcd_SNZ
    51 00:CB83: 17 E4             BRA		L_Dis_Symbol_Prog
    52                        L_Dis_lcd_Sig_Prog:
    53 00:CB85: 5E 4E             LDX     #lcd_SIG
    54 00:CB87: 17 E0             BRA		L_Dis_Symbol_Prog
    55                        L_Dis_lcd_AM_Prog:
    56 00:CB89: 5E 4F             LDX     #lcd_AM
    57 00:CB8B: 17 DC             BRA		L_Dis_Symbol_Prog
    58                        L_Dis_lcd_PM_Prog:
    59 00:CB8D: 5E 50             LDX     #lcd_PM
    60 00:CB8F: 17 D8             BRA		L_Dis_Symbol_Prog
    61                        
    62                        L_Dis_lcd_T1_Prog:
    63 00:CB91: 5E 56             LDX     #lcd_T1
    64 00:CB93: 17 D4             BRA		L_Dis_Symbol_Prog
    65                        L_Dis_lcd_T2_Prog:
    66 00:CB95: 5E 57             LDX     #lcd_T2
    67 00:CB97: 17 D0             BRA		L_Dis_Symbol_Prog
    68                        L_Dis_lcd_T3_Prog:
    69 00:CB99: 5E 58             LDX     #lcd_T3
    70 00:CB9B: 17 CC             BRA		L_Dis_Symbol_Prog
    71                        
    72                        L_Dis_lcd_T4_Prog:
    73 00:CB9D: 5E 59             LDX     #lcd_T4
    74 00:CB9F: 17 C8             BRA		L_Dis_Symbol_Prog
    75                        
    76                        L_Dis_lcd_T5_Prog:
    77 00:CBA1: 5E 5A             LDX     #lcd_T5
    78 00:CBA3: 17 C4             BRA		L_Dis_Symbol_Prog
    79                        
    80                        L_Dis_lcd_T6_Prog:
    81 00:CBA5: 5E 5B             LDX     #lcd_T6
    82 00:CBA7: 17 C0             BRA		L_Dis_Symbol_Prog
    83                        
    84                        L_Dis_lcd_T7_Prog:
    85 00:CBA9: 5E 5C             LDX     #lcd_T7
    86 00:CBAB: 17 BC             BRA		L_Dis_Symbol_Prog
    87                        
    88                        L_Dis_lcd_T8_Prog:
    89 00:CBAD: 5E 5D             LDX     #lcd_T8
    90 00:CBAF: 17 B8             BRA		L_Dis_Symbol_Prog
    91                        
    92                        
    93                        
    94                        ;================================
    95                        
    96                        
    97                        
    98                        L_Clr_col_Prog:
    99 00:CBB1: 5E 46             LDX     #lcd_col
   100 00:CBB3: 15 2B C8          JSR     F_ClrpSymbol
   101 00:CBB6: 5E 47             LDX     #lcd_col2
   102                        L_Clr_Symbol_Prog:
   103 00:CBB8: 15 2B C8          JSR     F_ClrpSymbol
   104 00:CBBB: 09                RTS
   105                        
   106                        L_Clr_lcd_Alm_Prog:
   107 00:CBBC: 5E 4C             LDX     #lcd_ALM
   108 00:CBBE: 17 F8             BRA		L_Clr_Symbol_Prog
   109                        L_Clr_lcd_Snz_Prog:
   110 00:CBC0: 5E 4D             LDX     #lcd_SNZ
   111 00:CBC2: 17 F4             BRA		L_Clr_Symbol_Prog
   112                        L_Clr_lcd_Sig_Prog:
   113 00:CBC4: 5E 4E             LDX     #lcd_SIG
   114 00:CBC6: 17 F0             BRA		L_Clr_Symbol_Prog
   115                        L_Clr_lcd_AM_Prog:
   116 00:CBC8: 5E 4F             LDX     #lcd_AM
   117 00:CBCA: 17 EC             BRA		L_Clr_Symbol_Prog
   118                        L_Clr_lcd_PM_Prog:
   119 00:CBCC: 5E 50             LDX     #lcd_PM
   120 00:CBCE: 17 E8             BRA		L_Clr_Symbol_Prog
   121                        
   122                        L_Clr_lcd_T1_Prog:
   123 00:CBD0: 5E 56             LDX     #lcd_T1
   124 00:CBD2: 17 E4             BRA		L_Clr_Symbol_Prog
   125                        L_Clr_lcd_T2_Prog:
   126 00:CBD4: 5E 57             LDX     #lcd_T2
   127 00:CBD6: 17 E0             BRA		L_Clr_Symbol_Prog
   128                        L_Clr_lcd_T3_Prog:
   129 00:CBD8: 5E 58             LDX     #lcd_T3
   130 00:CBDA: 17 DC             BRA		L_Clr_Symbol_Prog
   131                        
   132                        L_Clr_lcd_T4_Prog:
   133 00:CBDC: 5E 59             LDX     #lcd_T4
   134 00:CBDE: 17 D8             BRA		L_Clr_Symbol_Prog
   135                        
   136                        L_Clr_lcd_T5_Prog:
   137 00:CBE0: 5E 5A             LDX     #lcd_T5
   138 00:CBE2: 17 D4             BRA		L_Clr_Symbol_Prog
   139                        
   140                        L_Clr_lcd_T6_Prog:
   141 00:CBE4: 5E 5B             LDX     #lcd_T6
   142 00:CBE6: 17 D0             BRA		L_Clr_Symbol_Prog
   143                        
   144                        L_Clr_lcd_T7_Prog:
   145 00:CBE8: 5E 5C             LDX     #lcd_T7
   146 00:CBEA: 17 CC             BRA		L_Clr_Symbol_Prog
   147                        
   148                        L_Clr_lcd_T8_Prog:
   149 00:CBEC: 5E 5D             LDX     #lcd_T8
   150 00:CBEE: 17 C8             BRA		L_Clr_Symbol_Prog
   151                        
   152                        
   153                        ;==================================
   154                        L_Clr_lcd_d1_Prog:
   155 00:CBF0: 5E 00             LDX     #lcd_d1
   156                        L_Clr_lcd_usually_Prog:
   157 00:CBF2: 53 16             LDA     #22
   158 00:CBF4: 15 E0 C7          JSR     L_Dis_8Bit_DigitDot_Prog
   159 00:CBF7: 09                RTS
   160                        L_Clr_lcd_d2_Prog:
   161 00:CBF8: 5E 07             LDX     #lcd_d2
   162 00:CBFA: 17 F6             BRA     L_Clr_lcd_usually_Prog
   163                        L_Clr_lcd_d3_Prog:
   164 00:CBFC: 5E 0E             LDX     #lcd_d3
   165 00:CBFE: 17 F2             BRA     L_Clr_lcd_usually_Prog
   166                        L_Clr_lcd_d4_Prog:
   167 00:CC00: 5E 15             LDX     #lcd_d4
   168 00:CC02: 17 EE             BRA     L_Clr_lcd_usually_Prog
   169                        L_Clr_lcd_d5_Prog:
   170 00:CC04: 5E 1C             LDX     #lcd_d5
   171 00:CC06: 17 EA             BRA     L_Clr_lcd_usually_Prog
   172                        L_Clr_lcd_d6_Prog:
   173 00:CC08: 5E 23             LDX     #lcd_d6
   174 00:CC0A: 17 E6             BRA     L_Clr_lcd_usually_Prog
   175                        L_Clr_lcd_d7_Prog:
   176 00:CC0C: 5E 2A             LDX     #lcd_d7
   177 00:CC0E: 17 E2             BRA     L_Clr_lcd_usually_Prog
   178                        L_Clr_lcd_d8_Prog:
   179 00:CC10: 5E 31             LDX     #lcd_d8
   180 00:CC12: 17 DE             BRA     L_Clr_lcd_usually_Prog
   181                        
   182                        
   183                        L_Display_lcd_Involution_Prog:
   184 00:CC14: 5E 51             LDX     #lcd_Involution
   185 00:CC16: 15 24 C8          JSR     F_DispSymbol
   186 00:CC19: 09                RTS
   187                        L_Display_lcd_Plus_Prog:
   188 00:CC1A: 5E 52             LDX     #lcd_Plus
   189 00:CC1C: 15 24 C8          JSR     F_DispSymbol
   190 00:CC1F: 09                RTS
   191                        L_Display_lcd_SUB_Prog:
   192 00:CC20: 5E 53             LDX     #lcd_SUB
   193 00:CC22: 15 24 C8          JSR     F_DispSymbol
   194 00:CC25: 09                RTS
   195                        L_Display_lcd_Mul_Prog:
   196 00:CC26: 5E 54             LDX     #lcd_Mul
   197 00:CC28: 15 24 C8          JSR     F_DispSymbol
   198 00:CC2B: 09                RTS
   199                        L_Display_lcd_DIV_Prog:
   200 00:CC2C: 5E 55             LDX     #lcd_DIV
   201 00:CC2E: 15 24 C8          JSR     F_DispSymbol
   202 00:CC31: 09                RTS
   203                        L_Clr_Calculator_Symbol_Prog:
   204 00:CC32: 5E 51             LDX     #lcd_Involution
   205 00:CC34: 15 2B C8          JSR     F_ClrpSymbol
   206                        L_Clr_Calculator_Symbol_Prog_1:
   207 00:CC37: 5E 52             LDX     #lcd_Plus
   208 00:CC39: 15 2B C8          JSR     F_ClrpSymbol
   209 00:CC3C: 5E 53             LDX     #lcd_SUB
   210 00:CC3E: 15 2B C8          JSR     F_ClrpSymbol
   211 00:CC41: 5E 54             LDX     #lcd_Mul
   212 00:CC43: 15 2B C8          JSR     F_ClrpSymbol
   213 00:CC46: 5E 55             LDX     #lcd_DIV
   214 00:CC48: 15 2B C8          JSR     F_ClrpSymbol
   215                        
   216 00:CC4B: 09                RTS
   217                        
   218                        
   219                        L_Dis_Calculator_Symbol_Prog:
   220 00:CC4C: 15 32 CC          JSR     L_Clr_Calculator_Symbol_Prog
   221 00:CC4F: 04                CLC
   222 00:CC50: 06                CLD
   223 00:CC51: 43 98 18          LDA     Calculator_Symbol_State
   224 00:CC54: 18                ROL
   225 00:CC55: 1B                TAX
   226 00:CC56: 63 60 CC          LDA     Table_Calc_Symbol+1,X
   227 00:CC59: 0A                PHA
   228 00:CC5A: 63 5F CC          LDA     Table_Calc_Symbol,X
   229 00:CC5D: 0A                PHA
   230 00:CC5E: 09                RTS
   231                        Table_Calc_Symbol:
   232 00:CC5F: FA D6             DW      RET-1
   233 00:CC61: 19 CC             DW      L_Display_lcd_Plus_Prog-1
   234 00:CC63: 1F CC             DW      L_Display_lcd_SUB_Prog-1
   235 00:CC65: 25 CC             DW      L_Display_lcd_Mul_Prog-1
   236 00:CC67: 2B CC             DW      L_Display_lcd_DIV_Prog-1
   237                        
   238                        L_Dis_Calculator_Symbol_Prog_Equal:
   239 00:CC69: 43 98 18          LDA     Calculator_Symbol_State
   240 00:CC6C: 56 05             CMP     #State_Involution
   241 00:CC6E: 12 01             BNE     L_Dis_Calculator_Symbol_Prog_Equal_RTS
   242 00:CC70: 09                RTS
   243                        L_Dis_Calculator_Symbol_Prog_Equal_RTS
   244 00:CC71: 15 37 CC          JSR     L_Clr_Calculator_Symbol_Prog_1
   245                            RTS
   245 00:CC74: 09            
   175                        .INCLUDE	Display\Display_Normal.asm
     1                        ;=================================
     2                        L_Display_lcd_d10_Prog_Normal:
     3 00:CC75: 5E 3F         	LDX		#lcd_d10
     4 00:CC77: 15 E0 C7      	JSR		L_Dis_8Bit_DigitDot_Prog
     5 00:CC7A: 09            	RTS
     6                        L_Display_lcd_d9_Prog_Normal:
     7 00:CC7B: 5E 38         	LDX		#lcd_d9
     8 00:CC7D: 15 E0 C7      	JSR		L_Dis_8Bit_DigitDot_Prog
     9 00:CC80: 09            	RTS
    10                        L_Clr_Time_Week_Prog:
    11 00:CC81: 53 0A         	LDA     #10
    12 00:CC83: 15 7B CC          JSR		L_Display_lcd_d9_Prog_Normal
    13 00:CC86: 53 0A         	LDA     #10
    14 00:CC88: 15 75 CC          JSR		L_Display_lcd_d10_Prog_Normal
    15 00:CC8B: 5E 48         	LDX     #lcd_9H
    16 00:CC8D: 15 2B C8          JSR		F_ClrpSymbol
    17 00:CC90: 5E 49             LDX     #lcd_10I
    18 00:CC92: 15 2B C8          JSR		F_ClrpSymbol
    19 00:CC95: 5E 4A         	LDX     #lcd_10H
    20 00:CC97: 15 2B C8          JSR		F_ClrpSymbol
    21 00:CC9A: 5E 4B             LDX     #lcd_10J
    22 00:CC9C: 15 2B C8          JSR		F_ClrpSymbol
    23 00:CC9F: 09            	RTS
    24                        ;===============================
    25                        L_Display_lcd_Prog_Normal_Hr:;显示闹钟时钟小时的lcd_5，lcd6
    26 00:CCA0: 15 AB CD          JSR		L_12_24_Prog
    27                        L_Display_lcd_Prog_Normal_Timer:;显示定时器小时的显示函数
    28 00:CCA3: 15 5C CD          JSR		L_A_HexToHexD
    29 00:CCA6: 0A            	PHA
    30 00:CCA7: 51 0F         	AND		#$0F
    31 00:CCA9: 5E 07             LDX     #lcd_d2
    32 00:CCAB: 15 E0 C7          JSR		L_Dis_8Bit_DigitDot_Prog
    33 00:CCAE: 5E 00         	LDX		#lcd_d1
    34 00:CCB0: 3B 9F 41      	BBS3	Sys_Flag_A,L_Display_lcd_Prog_Normal
    35                        L_Display_lcd_Prog_Normal_1:
    36 00:CCB3: 0C            	PLA
    37 00:CCB4: 15 43 C8      	JSR		L_ROR_4Bit_Prog
    38 00:CCB7: 13 04         	BEQ		L_Display_lcd_Prog_Normal_Hr_1
    39 00:CCB9: 15 E0 C7      	JSR		L_Dis_8Bit_DigitDot_Prog
    40 00:CCBC: 09            	RTS
    41                        L_Display_lcd_Prog_Normal_Hr_1:
    42 00:CCBD: 53 0A         	LDA		#10
    43 00:CCBF: 15 E0 C7      	JSR		L_Dis_8Bit_DigitDot_Prog
    44 00:CCC2: 09            	RTS
    45                        
    46                        
    47                        L_Display_lcd_Prog_Normal_Day:
    48 00:CCC3: 15 5C CD      	JSR		L_A_HexToHexD
    49 00:CCC6: 0A            	PHA
    50 00:CCC7: 51 0F         	AND		#$0F
    51 00:CCC9: 5E 31             LDX     #lcd_d8
    52 00:CCCB: 15 E0 C7          JSR		L_Dis_8Bit_DigitDot_Prog
    53 00:CCCE: 5E 2A         	LDX		#lcd_d7
    54 00:CCD0: 3B 9F 21      	BBS3	Sys_Flag_A,L_Display_lcd_Prog_Normal
    55 00:CCD3: 17 DE         	BRA		L_Display_lcd_Prog_Normal_1
    56                        L_Display_lcd_Prog_Normal_Month:
    57 00:CCD5: 15 5C CD      	JSR		L_A_HexToHexD
    58 00:CCD8: 0A            	PHA
    59 00:CCD9: 51 0F         	AND		#$0F
    60 00:CCDB: 5E 1C             LDX     #lcd_d5
    61 00:CCDD: 15 E0 C7          JSR		L_Dis_8Bit_DigitDot_Prog
    62 00:CCE0: 5E 15         	LDX		#lcd_d4
    63 00:CCE2: 3B 9F 0F      	BBS3	Sys_Flag_A,L_Display_lcd_Prog_Normal
    64 00:CCE5: 17 CC         	BRA		L_Display_lcd_Prog_Normal_1
    65                        ;====================================
    66                        L_Display_lcd_Prog_Normal_Sec:;显示秒数的lcd_1，lcd2
    67 00:CCE7: 15 5C CD          JSR		L_A_HexToHexD
    68 00:CCEA: 0A            	PHA
    69 00:CCEB: 51 0F         	AND		#$0F
    70 00:CCED: 5E 31             LDX     #lcd_d8
    71 00:CCEF: 15 E0 C7          JSR		L_Dis_8Bit_DigitDot_Prog
    72 00:CCF2: 5E 2A         	LDX		#lcd_d7
    73                        L_Display_lcd_Prog_Normal:
    74 00:CCF4: 0C            	PLA
    75 00:CCF5: 15 43 C8      	JSR		L_ROR_4Bit_Prog
    76 00:CCF8: 15 E0 C7      	JSR		L_Dis_8Bit_DigitDot_Prog
    77 00:CCFB: 09            	RTS
    78                        
    79                        ;=======================================
    80                        L_Display_lcd_Prog_Normal_Min:;显示秒数的lcd_3，lcd4
    81 00:CCFC: 15 5C CD          JSR		L_A_HexToHexD
    82 00:CCFF: 0A            	PHA
    83 00:CD00: 51 0F         	AND		#$0F
    84 00:CD02: 5E 1C             LDX     #lcd_d5
    85 00:CD04: 15 E0 C7          JSR		L_Dis_8Bit_DigitDot_Prog
    86 00:CD07: 5E 15         	LDX		#lcd_d4
    87 00:CD09: 17 E9         	BRA		L_Display_lcd_Prog_Normal
    88                        
    89                        ;=============================================
    90                        L_Clr_All_8Bit_Prog:
    91 00:CD0B: 53 0A         	LDA		#10
    92 00:CD0D: 5E 00         	LDX		#lcd_d1
    93 00:CD0F: 15 E0 C7      	JSR     L_Dis_8Bit_DigitDot_Prog
    94 00:CD12: 53 0A         	LDA		#10
    95 00:CD14: 5E 07         	LDX		#lcd_d2
    96 00:CD16: 15 E0 C7      	JSR     L_Dis_8Bit_DigitDot_Prog
    97 00:CD19: 53 0A         	LDA		#10
    98 00:CD1B: 5E 0E         	LDX		#lcd_d3
    99 00:CD1D: 15 E0 C7      	JSR     L_Dis_8Bit_DigitDot_Prog
   100 00:CD20: 53 0A         	LDA		#10
   101 00:CD22: 5E 15         	LDX		#lcd_d4
   102 00:CD24: 15 E0 C7      	JSR     L_Dis_8Bit_DigitDot_Prog
   103 00:CD27: 53 0A         	LDA		#10
   104 00:CD29: 5E 1C         	LDX		#lcd_d5
   105 00:CD2B: 15 E0 C7      	JSR     L_Dis_8Bit_DigitDot_Prog
   106 00:CD2E: 53 0A         	LDA		#10
   107 00:CD30: 5E 23         	LDX		#lcd_d6
   108 00:CD32: 15 E0 C7      	JSR     L_Dis_8Bit_DigitDot_Prog
   109 00:CD35: 53 0A         	LDA		#10
   110 00:CD37: 5E 2A         	LDX		#lcd_d7
   111 00:CD39: 15 E0 C7      	JSR     L_Dis_8Bit_DigitDot_Prog
   112 00:CD3C: 53 0A         	LDA		#10
   113 00:CD3E: 5E 31         	LDX		#lcd_d8
   114 00:CD40: 15 E0 C7      	JSR     L_Dis_8Bit_DigitDot_Prog
   115 00:CD43: 15 D0 CB      	JSR		L_Clr_lcd_T1_Prog
   116 00:CD46: 15 D4 CB      	JSR		L_Clr_lcd_T2_Prog
   117 00:CD49: 15 D8 CB      	JSR		L_Clr_lcd_T3_Prog
   118 00:CD4C: 15 DC CB      	JSR		L_Clr_lcd_T4_Prog
   119 00:CD4F: 15 E0 CB      	JSR		L_Clr_lcd_T5_Prog
   120 00:CD52: 15 E4 CB      	JSR		L_Clr_lcd_T6_Prog
   121 00:CD55: 15 E8 CB      	JSR		L_Clr_lcd_T7_Prog
   122 00:CD58: 15 EC CB      	JSR		L_Clr_lcd_T8_Prog
   123 00:CD5B: 09            	RTS
   123                        
   176                        .INCLUDE	Display\Tool.asm
     1                        L_A_HexToHexD:
     2 00:CD5C: 7F F2         	STA		P_Temp								; 将十进制输入保存到 P_Temp
     3 00:CD5E: 53 00         	LDA		#0									; 初始化高位寄存器
     4 00:CD60: 7F F3         	STA		P_Temp+1							; 高位清零
     5 00:CD62: 7F F4         	STA		P_Temp+2							; 低位清零
     6                        
     7                        L_DecToHex_Loop:
     8 00:CD64: 73 F2         	LDA		P_Temp								; 读取当前十进制值
     9 00:CD66: 56 0A         	CMP		#10
    10 00:CD68: 10 09         	BCC		L_DecToHex_End						; 如果小于16，则跳到结束
    11                        
    12 00:CD6A: 00            	SEC											; 启用借位
    13 00:CD6B: 55 0A         	SBC		#10									; 减去16
    14 00:CD6D: 7F F2         	STA		P_Temp								; 更新十进制值
    15 00:CD6F: 78 F3         	INC		P_Temp+1							; 高位+1，累加十六进制的十位
    16                        
    17 00:CD71: 17 F1         	BRA		L_DecToHex_Loop						; 重复循环
    18                        
    19                        L_DecToHex_End:
    20 00:CD73: 73 F2         	LDA		P_Temp								; 最后剩余的值是低位
    21 00:CD75: 7F F4         	STA		P_Temp+2							; 存入低位
    22                        
    23 00:CD77: 73 F3         	LDA		P_Temp+1							; 将高位放入A寄存器准备结果组合
    24 00:CD79: 04            	CLC
    25 00:CD7A: 18            	ROL
    26 00:CD7B: 18            	ROL
    27 00:CD7C: 18            	ROL
    28 00:CD7D: 18            	ROL											; 左移4次，完成乘16
    29 00:CD7E: 04            	CLC
    30 00:CD7F: 74 F4         	ADC		P_Temp+2							; 加上低位值
    31                        
    32 00:CD81: 09            	RTS
    33                        
    34                        ;======================================================================
    35                        L_A_HexDToHex:
    36 00:CD82: 7F F2         	STA		P_Temp								; 将十六进制输入保存到 P_Temp
    37 00:CD84: 53 00         	LDA		#0									; 初始化高位寄存器
    38 00:CD86: 7F F3         	STA		P_Temp+1							; 高位清零
    39 00:CD88: 7F F4         	STA		P_Temp+2							; 低位清零
    40                        
    41 00:CD8A: 73 F2         	LDA		P_Temp
    42 00:CD8C: 51 0F         	AND		#0FH
    43 00:CD8E: 7F F4         	STA		P_Temp+2
    44 00:CD90: 73 F2         	LDA		P_Temp
    45 00:CD92: 51 F0         	AND		#F0H
    46 00:CD94: 04            	CLC
    47 00:CD95: 19            	ROR
    48 00:CD96: 19            	ROR
    49 00:CD97: 19            	ROR
    50 00:CD98: 19            	ROR
    51 00:CD99: 7F F2         	STA		P_Temp
    52                        L_A_HexDToHex_Loop:
    53 00:CD9B: 04            	CLC
    54 00:CD9C: 53 0A         	LDA		#10
    55 00:CD9E: 74 F4         	ADC		P_Temp+2
    56 00:CDA0: 7F F4         	STA		P_Temp+2
    57 00:CDA2: 79 F2         	DEC		P_Temp
    58 00:CDA4: 73 F2         	LDA		P_Temp
    59 00:CDA6: 12 F3         	BNE		L_A_HexDToHex_Loop
    60 00:CDA8: 73 F4         	LDA		P_Temp+2
    61 00:CDAA: 09            	RTS
    62                        ;===========================================
    63                        
    64                        L_12_24_Prog:;12小时和24小时切换
    65 00:CDAB: 7F F2         	STA		P_Temp
    66 00:CDAD: 3A A0 2C      	BBS2	Sys_Flag_B,L_12_24_Prog_5;判断是24小时制跳转退出
    67 00:CDB0: 73 F2         	LDA		P_Temp
    68 00:CDB2: 13 0F         	BEQ		L_12_24_Prog_1;为0是跳转
    69 00:CDB4: 56 0B         	CMP		#11
    70 00:CDB6: 13 02         	BEQ		L_12_24_Prog_4
    71 00:CDB8: 11 12         	BCS		L_12_24_Prog_3;比12大时跳转
    72                        L_12_24_Prog_4:
    73 00:CDBA: 15 89 CB      	JSR		L_Dis_lcd_AM_Prog
    74 00:CDBD: 15 CC CB      	JSR		L_Clr_lcd_PM_Prog
    75 00:CDC0: 73 F2         	LDA		P_Temp
    76                        L_12_24_Prog_OUT:
    77 00:CDC2: 09            	RTS
    78                        L_12_24_Prog_1:;0点
    79 00:CDC3: 15 89 CB      	JSR		L_Dis_lcd_AM_Prog
    80 00:CDC6: 15 CC CB      	JSR		L_Clr_lcd_PM_Prog
    81 00:CDC9: 53 0C         	LDA		#12
    82 00:CDCB: 09            	RTS
    83                        L_12_24_Prog_3:
    84 00:CDCC: 15 C8 CB      	JSR		L_Clr_lcd_AM_Prog
    85 00:CDCF: 15 8D CB      	JSR		L_Dis_lcd_PM_Prog
    86 00:CDD2: 73 F2         	LDA		P_Temp
    87 00:CDD4: 56 0C         	CMP		#12
    88 00:CDD6: 13 EA         	BEQ		L_12_24_Prog_OUT
    89 00:CDD8: 00            	SEC
    90 00:CDD9: 55 0C         	SBC		#12
    91 00:CDDB: 09            	RTS
    92                        L_12_24_Prog_5:
    93 00:CDDC: 15 C8 CB      	JSR		L_Clr_lcd_AM_Prog
    94 00:CDDF: 15 CC CB      	JSR		L_Clr_lcd_PM_Prog
    95 00:CDE2: 73 F2         	LDA		P_Temp
    96 00:CDE4: 09            	RTS
    97                        
    98                        
    99                        ;==================================
   100                        L_12_To_24_Prog:
   101 00:CDE5: 73 F5         	LDA		P_Temp+3
   102 00:CDE7: 56 0C         	CMP		#12
   103 00:CDE9: 10 0B         	BCC		L_AM_TO_24_Prog
   104                        L_PM_TO_24_Prog:;入口P_Temp+5(按键给的值)，P_Temp+3原值
   105 00:CDEB: 73 F7         	LDA		P_Temp+5
   106 00:CDED: 56 0C         	CMP		#12
   107 00:CDEF: 13 04         	BEQ		 L_PM_TO_24_Prog_RTS
   108 00:CDF1: 04            	CLC
   109 00:CDF2: 54 0C         	ADC		#12
   110 00:CDF4: 09            	RTS
   111                        
   112                        L_PM_TO_24_Prog_RTS:
   113 00:CDF5: 09            	RTS
   114                        
   115                        L_AM_TO_24_Prog:
   116 00:CDF6: 73 F7         	LDA		P_Temp+5
   117 00:CDF8: 56 0C         	CMP		#12
   118 00:CDFA: 12 F9         	BNE		L_PM_TO_24_Prog_RTS
   119 00:CDFC: 53 00         	LDA		#0
   120                        	RTS
   120 00:CDFE: 09            
   177                        
   178                        
   179                        .Include	Calculator\Calculator_Base.asm
     1                        ;=====================================
     2                        ;计算器基础库2025/3/25（易码）
     3                        ;=====================================
     4                        ;8位计算器只用+3，具体加几根据MAX_DIG决定，可用去判断除数是否为0
     5                        ;，平方根运算中被开方数是否为0,以及加减法中需不需要操作数
     6                        L_Judge_Buf1_Prog:
     7 00:CDFF: 53 04             LDA     #MAX_BYTE
     8 00:CE01: 7F F2             STA     P_Temp
     9 00:CE03: 73 BA             LDA		BUF1
    10 00:CE05: 70 BB         	ORA		BUF1+1
    11 00:CE07: 70 BC         	ORA		BUF1+2
    12 00:CE09: 70 BD         	ORA		BUF1+3
    13                        	; ORA		BUF1+4
    14                        	; ORA		BUF1+5
    15 00:CE0B: 09            	RTS
    16                        ;=====================================
    17                        L_Judge_Buf2_Prog:
    18 00:CE0C: 73 C3         	LDA		BUF2
    19 00:CE0E: 70 C4         	ORA		BUF2+1
    20 00:CE10: 70 C5         	ORA		BUF2+2
    21 00:CE12: 70 C6         	ORA		BUF2+3
    22                        	; ORA		BUF2+4
    23                        	; ORA		BUF2+5
    24 00:CE14: 09            	RTS
    25                        ;=====================================
    26                        L_Adjust_FD_DEC_Prog:;小数点右移FD减少
    27 00:CE15: 63 80 00      	LDA		RAM,X
    28 00:CE18: 51 7F         	AND		#07FH
    29 00:CE1A: 13 0A         	BEQ		L_Adjust_FD_DEC_Prog_RTS
    30 00:CE1C: 06            	CLD
    31 00:CE1D: 00            	SEC
    32 00:CE1E: 63 80 00      	LDA		RAM,X
    33 00:CE21: 55 01         	SBC		#1
    34 00:CE23: 6F 80 00      	STA		RAM,X
    35                        L_Adjust_FD_DEC_Prog_RTS:
    36 00:CE26: 09            	RTS
    37                        ;=====================================
    38                        L_Adjust_FD_INC_Prog:;小数点左移FD增加
    39 00:CE27: 63 80 00      	LDA		RAM,X
    40 00:CE2A: 51 7F         	AND		#07FH
    41 00:CE2C: 12 0A         	BNE		L_Adjust_FD_INC_Prog_RTS
    42 00:CE2E: 06            	CLD
    43 00:CE2F: 04            	CLC
    44 00:CE30: 53 01         	LDA		#1
    45 00:CE32: 64 80 00      	ADC		RAM,X
    46 00:CE35: 6F 80 00      	STA		RAM,X
    47                        L_Adjust_FD_INC_Prog_RTS:
    48 00:CE38: 09            	RTS
    49                        ;=====================================
    50                        ;=====================================
    51                        ;具体加几根据MAX_DIG决定,
    52                        ;
    53                        L_Move_Left_One_Bit_Prog:
    54 00:CE39: 04                CLC
    55                        L_Move_Left_One_Bit_Prog_C:
    56 00:CE3A: 6A 80 00      	ROL		RAM, X
    57 00:CE3D: 6A 81 00      	ROL		RAM+1, X
    58 00:CE40: 6A 82 00      	ROL		RAM+2, X
    59 00:CE43: 6A 83 00      	ROL		RAM+3, X
    60 00:CE46: 6A 84 00      	ROL		RAM+4, X
    61 00:CE49: 6A 85 00      	ROL		RAM+5, X
    62 00:CE4C: 6A 86 00      	ROL		RAM+6, X
    63 00:CE4F: 6A 87 00      	ROL		RAM+7, X
    64 00:CE52: 09                RTS
    65                        ;=====================================
    66                        L_Move_Left_One_DIG_Prog:;；向左平移了1个DIG位数
    67 00:CE53: 15 39 CE          JSR     L_Move_Left_One_Bit_Prog
    68 00:CE56: 15 39 CE          JSR     L_Move_Left_One_Bit_Prog
    69 00:CE59: 15 39 CE          JSR     L_Move_Left_One_Bit_Prog
    70 00:CE5C: 15 39 CE          JSR     L_Move_Left_One_Bit_Prog
    71 00:CE5F: 09                RTS
    72                        ;=====================================
    73                        L_Move_Left_Two_DIG_Prog:;向左平移了2个DIG位数
    74 00:CE60: 63 86 00      	LDA		RAM+6,X
    75 00:CE63: 6F 87 00      	STA		RAM+7,X
    76 00:CE66: 63 85 00      	LDA		RAM+5,X
    77 00:CE69: 6F 86 00      	STA		RAM+6,X
    78 00:CE6C: 63 84 00      	LDA		RAM+4,X
    79 00:CE6F: 6F 85 00      	STA		RAM+5,X
    80 00:CE72: 63 83 00      	LDA		RAM+3,X
    81 00:CE75: 6F 84 00      	STA		RAM+4,X
    82 00:CE78: 63 82 00      	LDA		RAM+2,X
    83 00:CE7B: 6F 83 00      	STA		RAM+3,X
    84 00:CE7E: 63 81 00      	LDA		RAM+1,X
    85 00:CE81: 6F 82 00      	STA		RAM+2,X
    86 00:CE84: 63 80 00      	LDA		RAM,X
    87 00:CE87: 6F 81 00      	STA		RAM+1,X
    88 00:CE8A: 53 00         	LDA		#0
    89 00:CE8C: 6F 80 00      	STA		RAM,X
    90 00:CE8F: 09            	RTS
    91                        
    92                        ;=====================================
    93                        L_Move_Max_DIG_Prog:;可能用于数值转换
    94 00:CE90: 15 60 CE          JSR     L_Move_Left_Two_DIG_Prog
    95 00:CE93: 15 60 CE          JSR     L_Move_Left_Two_DIG_Prog
    96 00:CE96: 15 60 CE          JSR     L_Move_Left_Two_DIG_Prog
    97 00:CE99: 15 60 CE          JSR     L_Move_Left_Two_DIG_Prog
    98 00:CE9C: 09                RTS
    99                        ;=====================================
   100                        ;具体加几根据MAX_DIG决定,
   101                        ;
   102                        L_Move_Right_One_Bit_Prog:
   103 00:CE9D: 04                CLC
   104                        L_Move_Right_One_Bit_Prog_C:
   105 00:CE9E: 6B 87 00          ROR		RAM+7,X
   106 00:CEA1: 6B 86 00      	ROR		RAM+6,X
   107 00:CEA4: 6B 85 00      	ROR		RAM+5,X
   108 00:CEA7: 6B 84 00      	ROR		RAM+4,X
   109 00:CEAA: 6B 83 00      	ROR		RAM+3,X
   110 00:CEAD: 6B 82 00      	ROR		RAM+2,X
   111 00:CEB0: 6B 81 00      	ROR		RAM+1,X
   112 00:CEB3: 6B 80 00      	ROR		RAM,X
   113 00:CEB6: 09                RTS
   114                        ;=====================================
   115                        L_Move_Right_One_DIG_Prog:;；向右平移了1个DIG位数
   116 00:CEB7: 15 9D CE          JSR     L_Move_Right_One_Bit_Prog
   117 00:CEBA: 15 9D CE          JSR     L_Move_Right_One_Bit_Prog
   118 00:CEBD: 15 9D CE          JSR     L_Move_Right_One_Bit_Prog
   119 00:CEC0: 15 9D CE          JSR     L_Move_Right_One_Bit_Prog
   120 00:CEC3: 09                RTS
   121                        ;=====================================
   122                        L_Clear_BUF_Prog:
   123 00:CEC4: 53 00             LDA		#0
   124 00:CEC6: 6F 80 00      	STA		RAM, X
   125 00:CEC9: 6F 81 00      	STA		RAM+1, X
   126 00:CECC: 6F 82 00      	STA		RAM+2, X
   127 00:CECF: 6F 83 00      	STA		RAM+3, X
   128 00:CED2: 6F 84 00      	STA		RAM+4, X
   129 00:CED5: 6F 85 00      	STA		RAM+5, X
   130 00:CED8: 6F 86 00      	STA		RAM+6, X
   131 00:CEDB: 6F 87 00      	STA		RAM+7, X
   132 00:CEDE: 09                RTS
   133                        ;=====================================
   134                        ;buf2 = bufx + buf2
   135                        ;具体加几根据MAX_DIG决定,
   136                        L_BUFX_Add_BUF2_TO_BUF2_Prog:
   137 00:CEDF: 04            	CLC
   138 00:CEE0: 63 80 00      	LDA		RAM,X
   139 00:CEE3: 74 C3         	ADC		BUF2
   140 00:CEE5: 7F C3         	STA		BUF2
   141 00:CEE7: 63 81 00      	LDA		RAM+1, X
   142 00:CEEA: 74 C4         	ADC		BUF2+1
   143 00:CEEC: 7F C4         	STA		BUF2+1
   144 00:CEEE: 63 82 00      	LDA		RAM+2, X
   145 00:CEF1: 74 C5         	ADC		BUF2+2
   146 00:CEF3: 7F C5         	STA		BUF2+2
   147 00:CEF5: 63 83 00      	LDA		RAM+3, X
   148 00:CEF8: 74 C6         	ADC		BUF2+3
   149 00:CEFA: 7F C6         	STA		BUF2+3
   150 00:CEFC: 63 84 00      	LDA		RAM+4, X
   151 00:CEFF: 74 C7         	ADC		BUF2+4
   152 00:CF01: 7F C7         	STA		BUF2+4
   153 00:CF03: 63 85 00      	LDA		RAM+5, X
   154 00:CF06: 74 C8         	ADC		BUF2+5
   155 00:CF08: 7F C8         	STA		BUF2+5
   156 00:CF0A: 63 86 00      	LDA		RAM+6, X
   157 00:CF0D: 74 C9         	ADC		BUF2+6
   158 00:CF0F: 7F C9         	STA		BUF2+6
   159 00:CF11: 63 87 00      	LDA		RAM+7, X
   160 00:CF14: 74 CA         	ADC		BUF2+7
   161 00:CF16: 7F CA         	STA		BUF2+7
   162 00:CF18: 09            	RTS
   163                        ;=====================================
   164                        ;---------------------------------------
   165                        ;buf3 = bufx + buf3
   166                        ;具体加几根据MAX_DIG决定,
   167                        L_BUFX_Add_BUF3_TO_BUF3_Prog:
   168 00:CF19: 04            	CLC
   169 00:CF1A: 63 80 00      	LDA		RAM, X
   170 00:CF1D: 74 CC         	ADC		BUF3
   171 00:CF1F: 7F CC         	STA		BUF3
   172 00:CF21: 63 81 00      	LDA		RAM+1, X
   173 00:CF24: 74 CD         	ADC		BUF3+1
   174 00:CF26: 7F CD         	STA		BUF3+1
   175 00:CF28: 63 82 00      	LDA		RAM+2, X
   176 00:CF2B: 74 CE         	ADC		BUF3+2
   177 00:CF2D: 7F CE         	STA		BUF3+2
   178 00:CF2F: 63 83 00      	LDA		RAM+3, X
   179 00:CF32: 74 CF         	ADC		BUF3+3
   180 00:CF34: 7F CF         	STA		BUF3+3
   181 00:CF36: 63 84 00      	LDA		RAM+4, X
   182 00:CF39: 74 D0         	ADC		BUF3+4
   183 00:CF3B: 7F D0         	STA		BUF3+4
   184 00:CF3D: 63 85 00      	LDA		RAM+5, X
   185 00:CF40: 74 D1         	ADC		BUF3+5
   186 00:CF42: 7F D1         	STA		BUF3+5
   187 00:CF44: 63 86 00      	LDA		RAM+6, X
   188 00:CF47: 74 D2         	ADC		BUF3+6
   189 00:CF49: 7F D2         	STA		BUF3+6
   190 00:CF4B: 63 87 00      	LDA		RAM+7, X
   191 00:CF4E: 74 D3         	ADC		BUF3+7
   192 00:CF50: 7F D3         	STA		BUF3+7
   193 00:CF52: 09            	RTS
   194                        ;=====================================
   195                        L_BUFX_SUB_BUF5_Prog:
   196 00:CF53: 00            	SEC
   197 00:CF54: 63 80 00      	LDA		RAM, X
   198 00:CF57: 75 DC         	SBC		BUF5
   199 00:CF59: 63 81 00      	LDA		RAM+1, X
   200 00:CF5C: 75 DD         	SBC		BUF5+1
   201 00:CF5E: 63 82 00      	LDA		RAM+2, X
   202 00:CF61: 75 DE         	SBC		BUF5+2
   203 00:CF63: 63 83 00      	LDA		RAM+3, X
   204 00:CF66: 75 DF         	SBC		BUF5+3
   205 00:CF68: 63 84 00      	LDA		RAM+4, X
   206 00:CF6B: 75 E0         	SBC		BUF5+4
   207 00:CF6D: 63 85 00      	LDA		RAM+5, X
   208 00:CF70: 75 E1         	SBC		BUF5+5
   209 00:CF72: 63 86 00      	LDA		RAM+6, X
   210 00:CF75: 75 E2         	SBC		BUF5+6
   211 00:CF77: 63 87 00      	LDA		RAM+7, X
   212 00:CF7A: 75 E3         	SBC		BUF5+7
   213 00:CF7C: 09            	RTS
   214                        ;=====================================
   215                        ;bufx = bufx - buf5
   216                        L_BUFX_SUB_BUF5_TO_BUFX_Prog:
   217 00:CF7D: 00            	SEC
   218 00:CF7E: 63 80 00      	LDA		RAM, X
   219 00:CF81: 75 DC         	SBC		BUF5
   220 00:CF83: 6F 80 00      	STA		RAM, X
   221 00:CF86: 63 81 00      	LDA		RAM+1, X
   222 00:CF89: 75 DD         	SBC		BUF5+1
   223 00:CF8B: 6F 81 00      	STA		RAM+1, X
   224 00:CF8E: 63 82 00      	LDA		RAM+2, X
   225 00:CF91: 75 DE         	SBC		BUF5+2
   226 00:CF93: 6F 82 00      	STA		RAM+2, X
   227 00:CF96: 63 83 00      	LDA		RAM+3, X
   228 00:CF99: 75 DF         	SBC		BUF5+3
   229 00:CF9B: 6F 83 00      	STA		RAM+3, X
   230 00:CF9E: 63 84 00      	LDA		RAM+4, X
   231 00:CFA1: 75 E0         	SBC		BUF5+4
   232 00:CFA3: 6F 84 00      	STA		RAM+4, X
   233 00:CFA6: 63 85 00      	LDA		RAM+5, X
   234 00:CFA9: 75 E1         	SBC		BUF5+5
   235 00:CFAB: 6F 85 00      	STA		RAM+5, X
   236 00:CFAE: 63 86 00      	LDA		RAM+6, X
   237 00:CFB1: 75 E2         	SBC		BUF5+6
   238 00:CFB3: 6F 86 00      	STA		RAM+6, X
   239 00:CFB6: 63 87 00      	LDA		RAM+7, X
   240 00:CFB9: 75 E3         	SBC		BUF5+7
   241 00:CFBB: 6F 87 00      	STA		RAM+7, X
   242 00:CFBE: 09            	RTS
   243                        ;=====================================
   244                        ;将内存存储到对应BUF1上
   245                        L_Copy_To_BUF1:
   246 00:CFBF: 63 80 00      	LDA		RAM, X
   247 00:CFC2: 7F BA         	STA		BUF1
   248 00:CFC4: 63 81 00      	LDA		RAM+1, X
   249 00:CFC7: 7F BB         	STA		BUF1+1
   250 00:CFC9: 63 82 00      	LDA		RAM+2, X
   251 00:CFCC: 7F BC         	STA		BUF1+2
   252 00:CFCE: 63 83 00      	LDA		RAM+3, X
   253 00:CFD1: 7F BD         	STA		BUF1+3
   254 00:CFD3: 63 84 00      	LDA		RAM+4, X
   255 00:CFD6: 7F BE         	STA		BUF1+4
   256 00:CFD8: 63 85 00      	LDA		RAM+5, X
   257 00:CFDB: 7F BF         	STA		BUF1+5
   258 00:CFDD: 63 86 00      	LDA		RAM+6, X
   259 00:CFE0: 7F C0         	STA		BUF1+6
   260 00:CFE2: 63 87 00      	LDA		RAM+7, X
   261 00:CFE5: 7F C1         	STA		BUF1+7
   262 00:CFE7: 09            	RTS
   263                        ;=====================================
   264                        ;将内存存储到对应BUF2上
   265                        L_Copy_To_BUF2:
   266 00:CFE8: 63 80 00      	LDA		RAM, X
   267 00:CFEB: 7F C3         	STA		BUF2
   268 00:CFED: 63 81 00      	LDA		RAM+1, X
   269 00:CFF0: 7F C4         	STA		BUF2+1
   270 00:CFF2: 63 82 00      	LDA		RAM+2, X
   271 00:CFF5: 7F C5         	STA		BUF2+2
   272 00:CFF7: 63 83 00      	LDA		RAM+3, X
   273 00:CFFA: 7F C6         	STA		BUF2+3
   274 00:CFFC: 63 84 00      	LDA		RAM+4, X
   275 00:CFFF: 7F C7         	STA		BUF2+4
   276 00:D001: 63 85 00      	LDA		RAM+5, X
   277 00:D004: 7F C8         	STA		BUF2+5
   278 00:D006: 63 86 00      	LDA		RAM+6, X
   279 00:D009: 7F C9         	STA		BUF2+6
   280 00:D00B: 63 87 00      	LDA		RAM+7, X
   281 00:D00E: 7F CA         	STA		BUF2+7
   282 00:D010: 09            	RTS
   283                        ;=====================================
   284                        ;将内存存储到对应BUF3上
   285                        L_Copy_To_BUF3:
   286 00:D011: 63 80 00      	LDA		RAM, X
   287 00:D014: 7F CC         	STA		BUF3
   288 00:D016: 63 81 00      	LDA		RAM+1, X
   289 00:D019: 7F CD         	STA		BUF3+1
   290 00:D01B: 63 82 00      	LDA		RAM+2, X
   291 00:D01E: 7F CE         	STA		BUF3+2
   292 00:D020: 63 83 00      	LDA		RAM+3, X
   293 00:D023: 7F CF         	STA		BUF3+3
   294 00:D025: 63 84 00      	LDA		RAM+4, X
   295 00:D028: 7F D0         	STA		BUF3+4
   296 00:D02A: 63 85 00      	LDA		RAM+5, X
   297 00:D02D: 7F D1         	STA		BUF3+5
   298 00:D02F: 63 86 00      	LDA		RAM+6, X
   299 00:D032: 7F D2         	STA		BUF3+6
   300 00:D034: 63 87 00      	LDA		RAM+7, X
   301 00:D037: 7F D3         	STA		BUF3+7
   302 00:D039: 09            	RTS
   303                        ;=====================================
   304                        ;将内存存储到对应BUF4上
   305                        L_Copy_To_BUF4:
   306 00:D03A: 63 80 00      	LDA		RAM, X
   307 00:D03D: 7F D4         	STA		BUF4
   308 00:D03F: 63 81 00      	LDA		RAM+1, X
   309 00:D042: 7F D5         	STA		BUF4+1
   310 00:D044: 63 82 00      	LDA		RAM+2, X
   311 00:D047: 7F D6         	STA		BUF4+2
   312 00:D049: 63 83 00      	LDA		RAM+3, X
   313 00:D04C: 7F D7         	STA		BUF4+3
   314 00:D04E: 63 84 00      	LDA		RAM+4, X
   315 00:D051: 7F D8         	STA		BUF4+4
   316 00:D053: 63 85 00      	LDA		RAM+5, X
   317 00:D056: 7F D9         	STA		BUF4+5
   318 00:D058: 63 86 00      	LDA		RAM+6, X
   319 00:D05B: 7F DA         	STA		BUF4+6
   320 00:D05D: 63 87 00      	LDA		RAM+7, X
   321 00:D060: 7F DB         	STA		BUF4+7
   322 00:D062: 09            	RTS
   323                        ;=====================================
   324                        ;将内存存储到对应BUF1上
   325                        L_Copy_To_BUF5:
   326 00:D063: 63 80 00      	LDA		RAM, X
   327 00:D066: 7F DC         	STA		BUF5
   328 00:D068: 63 81 00      	LDA		RAM+1, X
   329 00:D06B: 7F DD         	STA		BUF5+1
   330 00:D06D: 63 82 00      	LDA		RAM+2, X
   331 00:D070: 7F DE         	STA		BUF5+2
   332 00:D072: 63 83 00      	LDA		RAM+3, X
   333 00:D075: 7F DF         	STA		BUF5+3
   334 00:D077: 63 84 00      	LDA		RAM+4, X
   335 00:D07A: 7F E0         	STA		BUF5+4
   336 00:D07C: 63 85 00      	LDA		RAM+5, X
   337 00:D07F: 7F E1         	STA		BUF5+5
   338 00:D081: 63 86 00      	LDA		RAM+6, X
   339 00:D084: 7F E2         	STA		BUF5+6
   340 00:D086: 63 87 00      	LDA		RAM+7, X
   341 00:D089: 7F E3         	STA		BUF5+7
   342 00:D08B: 09            	RTS
   343                        
   344                        
   345                        ;=====================================
   346                        ;	最大十进制999999999999999999999999
   347                        ;	最大十六进制d3c21bcecceda0ffffff
   348                        ;	buf1.16 -> buf2.10 buf3,buf6
   349                        ;将BUF1的16进制数，转换为10进制数存储到BUF2中，BUF3存储每个1对应的权重
   350                        L_Hex_To_Dec_Prog:
   351 00:D08C: 5E 43         	LDX		#(BUF2-RAM)
   352 00:D08E: 15 C4 CE      	JSR		L_Clear_BUF_Prog
   353 00:D091: 5E 4C         	LDX		#(BUF3-RAM)
   354 00:D093: 15 C4 CE      	JSR		L_Clear_BUF_Prog
   355 00:D096: 53 01         	LDA		#1
   356 00:D098: 7F CC         	STA		BUF3;给权重计数器初始值
   357 00:D09A: 02            	SED
   358 00:D09B: 53 21         	LDA		#(MAX_BYTE*8+1)
   359 00:D09D: 7F E4         	STA		BUF6;计算循环次数
   360                        
   361                        L_Hex_To_Dec_Prog_Loop:
   362 00:D09F: 79 E4         	DEC		BUF6
   363 00:D0A1: 13 13         	BEQ		L_Hex_To_Dec_Prog_RTS
   364 00:D0A3: 5E 3A         	LDX		#(BUF1-RAM)
   365 00:D0A5: 15 9D CE      	JSR		L_Move_Right_One_Bit_Prog
   366 00:D0A8: 10 05         	BCC		L_Hex_To_Dec_Prog_Loop_1;右移出C标志位，如果为1则说明此时需要在BUF2中加上权重，
   367                        ;否则跳转改变权重
   368 00:D0AA: 5E 4C         	LDX		#(BUF3-RAM)
   369 00:D0AC: 15 DF CE      	JSR		L_BUFX_Add_BUF2_TO_BUF2_Prog
   370                        L_Hex_To_Dec_Prog_Loop_1:
   371 00:D0AF: 5E 4C         	LDX		#(BUF3-RAM)
   372 00:D0B1: 15 19 CF      	JSR		L_BUFX_Add_BUF3_TO_BUF3_Prog
   373 00:D0B4: 17 E9         	BRA		L_Hex_To_Dec_Prog_Loop
   374                        L_Hex_To_Dec_Prog_RTS:
   375 00:D0B6: 09            	RTS
   376                        
   377                        
   378                        ;=====================================
   379                        ;10进制转16进制
   380                        L_Dec_To_Hex_Prog:
   381 00:D0B7: 5E 43         	LDX		#(BUF2-RAM)
   382 00:D0B9: 15 C4 CE      	JSR		L_Clear_BUF_Prog
   383 00:D0BC: 5E 4C         	LDX		#(BUF3-RAM)
   384 00:D0BE: 15 C4 CE      	JSR		L_Clear_BUF_Prog
   385 00:D0C1: 5E 54         	LDX		#(BUF4-RAM)
   386 00:D0C3: 15 C4 CE      	JSR		L_Clear_BUF_Prog
   387 00:D0C6: 53 01         	LDA		#1
   388 00:D0C8: 7F CC         	STA		BUF3;给权重初始值
   389 00:D0CA: 06            	CLD
   390 00:D0CB: 53 00         	LDA		#0
   391 00:D0CD: 7F E5         	STA		BUF6+1
   392 00:D0CF: 53 41         	LDA		#(MAX_DIG*8+1);循环次数
   393 00:D0D1: 7F E4         	STA		BUF6
   394                        L_Dec_To_Hex_Prog_Loop:
   395 00:D0D3: 79 E4         	DEC		BUF6
   396 00:D0D5: 13 35         	BEQ		L_Dec_To_Hex_Prog_RTS
   397 00:D0D7: 5E 3A         	LDX		#(BUF1-RAM)
   398 00:D0D9: 15 9D CE      	JSR		L_Move_Right_One_Bit_Prog
   399 00:D0DC: 10 05         	BCC		L_Dec_To_Hex_Prog_Loop_Add;右移BUF1，1个BIT判断
   400 00:D0DE: 5E 4C         	LDX		#(BUF3-RAM);当C标志位为1时，将当前权重加到BUF2上
   401 00:D0E0: 15 DF CE      	JSR		L_BUFX_Add_BUF2_TO_BUF2_Prog
   402                        ;-----------------------------------------------------------
   403                        ;BUF6+1是指是制移位4次，每移位4次权重就要乘以10
   404                        ;第一次进入权重自身乘以2，第二次进入相将此时的权重存到BUF4后，在乘以二
   405                        ;第三次权重自身乘以二，第四次此时BUF4的数加到BUF3中
   406                        ;
   407                        L_Dec_To_Hex_Prog_Loop_Add:;
   408 00:D0E3: 78 E5         	INC		BUF6+1
   409 00:D0E5: 73 E5         	LDA		BUF6+1
   410 00:D0E7: 56 04         	CMP		#4
   411 00:D0E9: 12 04         	BNE		L_Dec_To_Hex_Prog_Loop_1
   412 00:D0EB: 53 00         	LDA		#0
   413 00:D0ED: 7F E5         	STA		BUF6+1
   414                        L_Dec_To_Hex_Prog_Loop_1:
   415 00:D0EF: 73 E5         	LDA		BUF6+1
   416 00:D0F1: 13 06         	BEQ		L_Dec_To_Hex_Prog_BUFX_Add_BUF4_To_BUF3
   417 00:D0F3: 56 02         	CMP		#2
   418 00:D0F5: 13 09         	BEQ		L_Dec_To_Hex_Prog_SAVE
   419 00:D0F7: 17 0C         	BRA		L_Dec_To_HEX_Prog_BUF3_To_BUF3_Prog
   420                        L_Dec_To_Hex_Prog_BUFX_Add_BUF4_To_BUF3:
   421 00:D0F9: 5E 54         	LDX		#(BUF4-RAM)
   422 00:D0FB: 15 19 CF      	JSR		L_BUFX_Add_BUF3_TO_BUF3_Prog
   423 00:D0FE: 17 D3         	BRA		L_Dec_To_Hex_Prog_Loop
   424                        L_Dec_To_Hex_Prog_SAVE:
   425 00:D100: 5E 4C         	LDX		#(BUF3-RAM)
   426 00:D102: 15 3A D0      	JSR		L_Copy_To_BUF4
   427                        L_Dec_To_HEX_Prog_BUF3_To_BUF3_Prog:
   428 00:D105: 5E 4C         	LDX		#(BUF3-RAM)
   429 00:D107: 15 19 CF      	JSR		L_BUFX_Add_BUF3_TO_BUF3_Prog
   430 00:D10A: 17 C7         	BRA		L_Dec_To_Hex_Prog_Loop
   431                        L_Dec_To_Hex_Prog_RTS:
   432 00:D10C: 09            	RTS
   433                        
   434                        
   435                        ;=====================================
   436                        ;=====================================
   437                        ;=====================================
   438                        ;=====================================
   439                        ;=====================================
   440                        ;=====================================
   441                        ;=====================================
   442                        ;=====================================
   443                        ;=====================================
   444                        ;=====================================
   445                        ;=====================================
   446                        ;=====================================
   447                        ;=====================================
   448                        ;=====================================
   449                        ;=====================================
   450                        ;=====================================
   451                        ;=====================================
   452                        ;=====================================
   453                        ;=====================================
   454                        ;=====================================
   455                        ;=====================================
   456                        ;=====================================
   457                        ;=====================================
   458                        ;=====================================
   459                        ;=====================================
   460                        ;=====================================
   461                        ;=====================================
   462                        ;=====================================
   463                        ;=====================================
   464                        ;=====================================
   465                        ;=====================================
   466                        ;=====================================
   467                        ;=====================================
   468                        ;=====================================
   469                        ;=====================================
   470                        ;=====================================
   471                        ;=====================================
   472                        ;=====================================
   473                        ;=====================================
   474                        ;=====================================
   475                        ;=====================================
   476                        ;=====================================
   477                        ;=====================================
   478                        ;=====================================
   479                        ;=====================================
   480                        ;=====================================
   481                        ;=====================================
   482                        ;=====================================
   483                        ;=====================================
   484                        ;=====================================
   485                        
   485                        
   180                        .Include	Calculator\Calculator_Base_Math.asm
     1                        
     2                        ;========================================================
     3                        ;加法
     4                        ;========================================================
     5                        L_Control_Add_Prog:
     6 00:D10D: 5E 42             LDX     #(BUF1+FD-RAM)
     7 00:D10F: 15 27 CE          JSR     L_Adjust_FD_INC_Prog
     8 00:D112: 5E 4B             LDX     #(BUF2+FD-RAM)
     9 00:D114: 15 27 CE          JSR     L_Adjust_FD_INC_Prog
    10                        L_Control_Add_Prog_Loop:
    11 00:D117: 73 C2             LDA		BUF1+FD
    12 00:D119: 51 7F         	AND		#07FH
    13 00:D11B: 7F E4         	STA		BUF6
    14 00:D11D: 73 CB         	LDA		BUF2+FD
    15 00:D11F: 51 7F         	AND		#07FH
    16 00:D121: 76 E4         	CMP		BUF6
    17 00:D123: 13 14             BEQ     L_Control_Add_Prog_CALC
    18 00:D125: 11 09             BCS     L_Control_Add_Prog_BUF1_LEFT
    19                        L_Control_Add_Prog_BUF2_LEFT:
    20 00:D127: 5E 43         	LDX		#(BUF2-RAM)
    21 00:D129: 15 53 CE      	JSR		L_Move_Left_One_DIG_Prog
    22 00:D12C: 78 CB         	INC		BUF2+FD
    23 00:D12E: 17 E7         	BRA		L_Control_Add_Prog_Loop
    24                        L_Control_Add_Prog_BUF1_LEFT:
    25 00:D130: 5E 3A         	LDX		#(BUF1-RAM)
    26 00:D132: 15 53 CE      	JSR		L_Move_Left_One_DIG_Prog
    27 00:D135: 78 C2         	INC		BUF1+FD
    28 00:D137: 17 DE         	BRA		L_Control_Add_Prog_Loop
    29                        L_Control_Add_Prog_CALC:
    30 00:D139: 73 C2         	LDA		BUF1+FD
    31 00:D13B: 72 CB         	EOR		BUF2+FD
    32 00:D13D: 51 80         	AND		#080H
    33 00:D13F: 13 2B         	BEQ		L_Control_Add_Prog_CALC_Add
    34                        L_Control_Add_Prog_CALC_SUB:
    35 00:D141: 02            	SED
    36 00:D142: 5E 43         	LDX		#(BUF2-RAM)			;2->5
    37 00:D144: 15 63 D0      	JSR		L_Copy_To_BUF5
    38 00:D147: 5E 3A         	LDX		#(BUF1-RAM)			;1-5?
    39 00:D149: 15 53 CF      	JSR		L_BUFX_SUB_BUF5_Prog
    40 00:D14C: 11 0D         	BCS		L_Control_Add_Prog_CALC_SUB_1
    41 00:D14E: 02            	SED
    42 00:D14F: 5E 3A         	LDX		#(BUF1-RAM)			;1->5
    43 00:D151: 15 63 D0      	JSR		L_Copy_To_BUF5
    44 00:D154: 5E 43         	LDX		#(BUF2-RAM)			;2=2-5
    45 00:D156: 15 7D CF      	JSR		L_BUFX_SUB_BUF5_TO_BUFX_Prog
    46 00:D159: 17 17         	BRA		L_Control_Add_Prog_CALC_END
    47                        L_Control_Add_Prog_CALC_SUB_1:
    48 00:D15B: 02            	SED
    49 00:D15C: 5E 3A         	LDX		#(BUF1-RAM)			;1->2
    50 00:D15E: 15 E8 CF      	JSR		L_Copy_To_BUF2
    51 00:D161: 5E 43         	LDX		#(BUF2-RAM)			;2=2-5
    52 00:D163: 15 7D CF      	JSR		L_BUFX_SUB_BUF5_TO_BUFX_Prog
    53 00:D166: 73 C2         	LDA		BUF1+FD
    54 00:D168: 7F CB         	STA		BUF2+FD
    55 00:D16A: 17 06         	BRA		L_Control_Add_Prog_CALC_END
    56                        L_Control_Add_Prog_CALC_Add:
    57 00:D16C: 02            	SED
    58 00:D16D: 5E 3A         	LDX		#(BUF1-RAM)
    59 00:D16F: 15 DF CE      	JSR		L_BUFX_Add_BUF2_TO_BUF2_Prog
    60                        L_Control_Add_Prog_CALC_END:
    61 00:D172: 16 AD D2      	JMP		L_Control_BUF2_Adjust_Result
    62                        
    63                        ;========================================================
    64                        L_Control_SUB_Prog:
    65 00:D175: 73 C2         	LDA		BUF1+FD
    66 00:D177: 52 80         	EOR		#080H
    67 00:D179: 7F C2         	STA		BUF1+FD
    68 00:D17B: 16 0D D1      	JMP		L_Control_Add_Prog
    69                        
    70                        
    71                        
    72                        
    73                        ;========================================================
    74                        ;乘法
    75                        ;========================================================
    76                        L_Mul_Prog:
    77 00:D17E: 06                CLD
    78 00:D17F: 5E 4C             LDX     #(BUF3-RAM)
    79 00:D181: 15 C4 CE          JSR     L_Clear_BUF_Prog
    80 00:D184: 53 21             LDA     #(MAX_DIG*4+1)
    81 00:D186: 7F E4             STA     BUF6
    82                        L_Mul_Prog_Loop:
    83 00:D188: 79 E4             DEC     BUF6
    84 00:D18A: 13 13             BEQ     L_Mul_Prog_RTS
    85 00:D18C: 5E 3A             LDX     #(BUF1-RAM)
    86 00:D18E: 15 9D CE          JSR     L_Move_Right_One_Bit_Prog
    87 00:D191: 10 05             BCC     L_Mul_Prog_Loop_1
    88 00:D193: 5E 43             LDX     #(BUF2-RAM)
    89 00:D195: 15 19 CF          JSR     L_BUFX_Add_BUF3_TO_BUF3_Prog
    90                        L_Mul_Prog_Loop_1:
    91 00:D198: 5E 43             LDX     #(BUF2-RAM)
    92 00:D19A: 15 39 CE          JSR     L_Move_Left_One_Bit_Prog
    93 00:D19D: 17 E9             BRA     L_Mul_Prog_Loop
    94                        
    95                        L_Mul_Prog_RTS:
    96 00:D19F: 09                RTS
    97                        
    98                        L_Control_Mul_Prog:;
    99 00:D1A0: 5E 43             LDX     #(BUF2-RAM)
   100 00:D1A2: 15 63 D0          JSR     L_Copy_To_BUF5
   101 00:D1A5: 15 B7 D0          JSR     L_Dec_To_Hex_Prog
   102                        
   103 00:D1A8: 5E 5C             LDX     #(BUF5-RAM)
   104 00:D1AA: 15 BF CF          JSR     L_Copy_To_BUF1
   105                        
   106 00:D1AD: 5E 43             LDX     #(BUF2-RAM)
   107 00:D1AF: 15 63 D0          JSR     L_Copy_To_BUF5
   108 00:D1B2: 15 B7 D0          JSR     L_Dec_To_Hex_Prog
   109                        
   110 00:D1B5: 5E 5C             LDX     #(BUF5-RAM)
   111 00:D1B7: 15 BF CF          JSR     L_Copy_To_BUF1
   112                        
   113 00:D1BA: 15 7E D1          JSR     L_Mul_Prog
   114                        
   115 00:D1BD: 5E 4C             LDX     #(BUF3-RAM)
   116 00:D1BF: 15 BF CF          JSR     L_Copy_To_BUF1
   117 00:D1C2: 15 8C D0          JSR     L_Hex_To_Dec_Prog
   118                        
   119 00:D1C5: 5E 42             LDX     #(BUF1+FD-RAM)
   120 00:D1C7: 15 15 CE          JSR     L_Adjust_FD_DEC_Prog
   121                        
   122 00:D1CA: 5E 4B             LDX     #(BUF2+FD-RAM)
   123 00:D1CC: 15 15 CE          JSR     L_Adjust_FD_DEC_Prog
   124                        
   125 00:D1CF: 06                CLD
   126 00:D1D0: 04                CLC
   127 00:D1D1: 73 C2             LDA     BUF1+FD
   128 00:D1D3: 74 CB             ADC     BUF2+FD
   129 00:D1D5: 7F CB             STA     BUF2+FD
   130 00:D1D7: 78 CB             INC     BUF2+FD
   131 00:D1D9: 16 AD D2          JMP     L_Control_BUF2_Adjust_Result
   132                        
   133                        ;========================================================
   134                        ;除法
   135                        ;========================================================
   136                        L_DIV_Prog:
   137 00:D1DC: 06                CLD
   138 00:D1DD: 5E 3A             LDX     #(BUF1-RAM)
   139 00:D1DF: 53 00             LDA     #0
   140 00:D1E1: 7F E8             STA     BUF6+4
   141 00:D1E3: 53 02             LDA     #2
   142 00:D1E5: 7F E4             STA     BUF6
   143                        L_DIV_Prog_Loop:
   144 00:D1E7: 73 E3             LDA     BUF5+MAX_DIG-1
   145 00:D1E9: 51 80             AND     #080H
   146 00:D1EB: 12 09             BNE     L_DIV_Prog_LOOP_1
   147 00:D1ED: 78 E4             INC     BUF6
   148 00:D1EF: 5E 5C             LDX     #(BUF5-RAM)
   149 00:D1F1: 15 39 CE          JSR     L_Move_Left_One_Bit_Prog
   150 00:D1F4: 17 F1             BRA     L_DIV_Prog_Loop
   151                        L_DIV_Prog_LOOP_1:
   152 00:D1F6: 79 E4             DEC     BUF6
   153 00:D1F8: 13 26             BEQ     L_DIV_Prog_RTS
   154 00:D1FA: 5E 3A             LDX     #(BUF1-RAM)
   155 00:D1FC: 15 39 CE          JSR     L_Move_Left_One_Bit_Prog
   156 00:D1FF: 5E 43             LDX     #(BUF2-RAM)
   157 00:D201: 15 53 CF          JSR     L_BUFX_SUB_BUF5_Prog
   158 00:D204: 73 E5             LDA     BUF6+1
   159 00:D206: 55 00             SBC     #0
   160 00:D208: 10 0D             BCC     L_DIV_Prog_LOOP_2
   161 00:D20A: 5E 43             LDX     #(BUF2-RAM)
   162 00:D20C: 15 7D CF          JSR     L_BUFX_SUB_BUF5_TO_BUFX_Prog
   163 00:D20F: 73 E5             LDA     BUF6+1
   164 00:D211: 55 00             SBC     #0
   165 00:D213: 7F E5             STA     BUF6+1
   166 00:D215: 78 BA             INC     BUF1
   167                        L_DIV_Prog_LOOP_2:
   168 00:D217: 5E 43             LDX     #(BUF2-RAM)
   169 00:D219: 15 39 CE          JSR     L_Move_Left_One_Bit_Prog
   170 00:D21C: 7A E5             ROL     BUF6+1
   171 00:D21E: 17 D6             BRA     L_DIV_Prog_LOOP_1
   172                        L_DIV_Prog_RTS:
   173 00:D220: 09                RTS
   174                        
   175                        
   176                        
   177                        ;=========================================================
   178                        L_Control_DIV_Prog:
   179 00:D221: 15 FF CD          JSR     L_Judge_Buf1_Prog
   180 00:D224: 13 07             BEQ     L_Control_DIV_Prog_ERR
   181 00:D226: 15 0C CE          JSR     L_Judge_Buf2_Prog
   182 00:D229: 13 07             BEQ     L_Control_DIV_Prog_0
   183 00:D22B: 17 0F             BRA		L_Control_DIV_Prog_DIV_INIT
   184                        L_Control_DIV_Prog_ERR:
   185 00:D22D: 53 01             LDA     #ERR_DIV0
   186 00:D22F: 4F 8F 18          STA     ERR
   187                        L_Control_DIV_Prog_0:
   188 00:D232: 5E 43             LDX     #(BUF2-RAM)
   189 00:D234: 15 C4 CE          JSR     L_Clear_BUF_Prog
   190 00:D237: 53 00             LDA     #0
   191 00:D239: 7F CB             STA     BUF2+FD
   192 00:D23B: 09                RTS
   193                        ;---------------------------------------------------------
   194                        L_Control_DIV_Prog_DIV_INIT:
   195 00:D23C: 5E 42             LDX     #(BUF1+FD-RAM)
   196 00:D23E: 15 27 CE          JSR     L_Adjust_FD_INC_Prog
   197 00:D241: 5E 4B             LDX     #(BUF2+FD-RAM)
   198 00:D243: 15 27 CE          JSR     L_Adjust_FD_INC_Prog
   199                        
   200                        L_Control_DIV_Prog_DIV_Loop:
   201 00:D246: 73 C6             LDA     BUF2+MAX_BYTE-1;(原先是BUF2+5)
   202 00:D248: 51 F0             AND     #0F0H
   203 00:D24A: 12 09             BNE     L_Control_DIV_Prog_DIV
   204 00:D24C: 5E 43             LDX     #(BUF2-RAM)
   205 00:D24E: 15 53 CE          JSR     L_Move_Left_One_DIG_Prog
   206 00:D251: 78 CB             INC     BUF2+FD
   207 00:D253: 17 F1             BRA     L_Control_DIV_Prog_DIV_Loop
   208                        
   209                        L_Control_DIV_Prog_DIV:
   210 00:D255: 5E 43             LDX     #(BUF2-RAM)
   211 00:D257: 15 90 CE          JSR     L_Move_Max_DIG_Prog
   212 00:D25A: 5E 43             LDX     #(BUF2-RAM)
   213 00:D25C: 15 63 D0          JSR     L_Copy_To_BUF5
   214 00:D25F: 15 B7 D0          JSR     L_Dec_To_Hex_Prog
   215 00:D262: 5E 5C             LDX     #(BUF5-RAM)
   216 00:D264: 15 BF CF          JSR     L_Copy_To_BUF1
   217 00:D267: 5E 43             LDX     #(BUF2-RAM)
   218 00:D269: 15 63 D0          JSR     L_Copy_To_BUF5
   219 00:D26C: 15 B7 D0          JSR     L_Dec_To_Hex_Prog
   220 00:D26F: 15 DC D1          JSR     L_DIV_Prog
   221 00:D272: 15 8C D0          JSR     L_Hex_To_Dec_Prog
   222                        ;-------------------------------------------
   223 00:D275: 73 CB             LDA     BUF2+FD
   224 00:D277: 51 7F             AND     #07FH
   225 00:D279: 7F E4             STA     BUF6
   226 00:D27B: 73 CB             LDA     BUF2+FD
   227 00:D27D: 51 80             AND     #080H
   228 00:D27F: 7F E5             STA     BUF6+1
   229 00:D281: 73 C2             LDA     BUF1+FD
   230 00:D283: 51 7F             AND     #07FH
   231 00:D285: 7F E6             STA     BUF6+2
   232 00:D287: 73 C2             LDA     BUF1+FD
   233 00:D289: 51 80             AND     #080H
   234 00:D28B: 7F E7             STA     BUF6+3
   235                        ;------------------------------------------
   236 00:D28D: 06                CLD
   237 00:D28E: 04                CLC
   238 00:D28F: 53 08             LDA     #MAX_DIG
   239 00:D291: 74 E4             ADC     BUF6
   240 00:D293: 00                SEC
   241 00:D294: 75 E6             SBC     BUF6+2
   242 00:D296: 7F CB             STA     BUF2+FD
   243 00:D298: 73 E5             LDA		BUF6+1
   244 00:D29A: 72 E7         	EOR		BUF6+3
   245 00:D29C: 70 CB         	ORA		BUF2+FD
   246 00:D29E: 7F CB         	STA		BUF2+FD
   247 00:D2A0: 16 AD D2      	JMP		L_Control_BUF2_Adjust_Result
   248                        
   249                        
   250                        ;=========================================================
   251                        L_Control_BUF1_Adjust_Result:
   252 00:D2A3: 53 42         	LDA		#(BUF1+FD-RAM)
   253 00:D2A5: 7F E4         	STA		BUF6
   254 00:D2A7: 53 43         	LDA		#(BUF2-RAM)
   255 00:D2A9: 7F E5         	STA		BUF6+1
   256 00:D2AB: 17 08         	BRA		L_Adjust_Result_Prog
   257                        L_Control_BUF2_Adjust_Result:
   258 00:D2AD: 53 4B         	LDA		#(BUF2+FD-RAM)
   259 00:D2AF: 7F E4         	STA		BUF6
   260 00:D2B1: 53 3A         	LDA		#(BUF1-RAM)
   261 00:D2B3: 7F E5         	STA		BUF6+1
   262                        L_Adjust_Result_Prog:
   263 00:D2B5: 7E E4         	LDX		BUF6
   264 00:D2B7: 15 27 CE      	JSR		L_Adjust_FD_INC_Prog
   265                        L_Adjust_Result_Prog_Loop:
   266 00:D2BA: 7E E4         	LDX		BUF6
   267 00:D2BC: 63 80 00      	LDA		RAM,X
   268 00:D2BF: 51 7F         	AND		#07FH
   269 00:D2C1: 06            	CLD
   270 00:D2C2: 00            	SEC
   271 00:D2C3: 55 09         	SBC		#MAX_DIG+1
   272 00:D2C5: 11 22         	BCS		L_Adjust_Result_Move_Right_Prog
   273 00:D2C7: 43 8F 18      	LDA		ERR
   274 00:D2CA: 12 EE         	BNE		L_Adjust_Result_Prog_Loop
   275 00:D2CC: 7E E4         	LDX		BUF6
   276 00:D2CE: 63 80 00      	LDA		RAM,X
   277 00:D2D1: 51 7F         	AND		#07FH
   278 00:D2D3: 56 01         	CMP		#1
   279 00:D2D5: 12 12         	BNE		L_Adjust_Result_Move_Right_Prog
   280                        L_Adjust_Result_Prog_Loop1:
   281 00:D2D7: 7E E5         	LDX		BUF6+1
   282 00:D2D9: 63 84 00      	LDA		RAM+4,X
   283 00:D2DC: 60 85 00      	ORA		RAM+5,X
   284 00:D2DF: 60 86 00      	ORA		RAM+6,X
   285 00:D2E2: 60 87 00      	ORA		RAM+7,X
   286 00:D2E5: 12 02         	BNE		L_Adjust_Result_Move_Right_Prog
   287 00:D2E7: 17 33         	BRA		L_Adjust_Result_Prog_Zero
   288                        L_Adjust_Result_Move_Right_Prog:
   289 00:D2E9: 7E E5         	LDX		BUF6+1
   290 00:D2EB: 15 B7 CE      	JSR		L_Move_Right_One_DIG_Prog
   291 00:D2EE: 7E E4         	LDX		BUF6
   292 00:D2F0: 63 80 00      	LDA		RAM,X
   293 00:D2F3: 51 7F         	AND		#07FH
   294 00:D2F5: 56 01         	CMP		#1
   295 00:D2F7: 13 10         	BEQ		L_Adjust_Result_Prog_Error
   296 00:D2F9: 7E E4         	LDX		BUF6
   297 00:D2FB: 63 80 00      	LDA		RAM,X
   298 00:D2FE: 7F E6         	STA		BUF6+2
   299 00:D300: 79 E6         	DEC		BUF6+2
   300 00:D302: 73 E6         	LDA		BUF6+2
   301 00:D304: 6F 80 00      	STA		RAM,X
   302 00:D307: 17 B1         	BRA		L_Adjust_Result_Prog_Loop
   303                        L_Adjust_Result_Prog_Error:
   304 00:D309: 7E E4         	LDX		BUF6
   305 00:D30B: 63 80 00      	LDA		RAM,X
   306 00:D30E: 51 80         	AND		#080H
   307 00:D310: 50 08         	ORA		#MAX_DIG
   308 00:D312: 6F 80 00      	STA		RAM,X
   309 00:D315: 53 02         	LDA		#Err_FUll
   310 00:D317: 4F 8F 18      	STA		ERR
   311 00:D31A: 17 9E         	BRA		L_Adjust_Result_Prog_Loop
   312                        L_Adjust_Result_Prog_Zero:
   313 00:D31C: 7E E5         	LDX		BUF6+1
   314 00:D31E: 63 80 00      	LDA		RAM,X
   315 00:D321: 60 81 00      	ORA		RAM+1,X
   316 00:D324: 60 82 00      	ORA		RAM+2,X
   317 00:D327: 60 83 00      	ORA		RAM+3,X
   318 00:D32A: 12 07         	BNE		L_Adjust_Result_Prog_Zero_RTS
   319 00:D32C: 53 00         	LDA		#0
   320 00:D32E: 7E E4         	LDX		BUF6
   321 00:D330: 6F 80 00      	STA		RAM,X
   322                        L_Adjust_Result_Prog_Zero_RTS
   323 00:D333: 09            	RTS
   323                        
   181                        .Include	Calculator\Calculator_Display.asm
     1                        L_Display_Calculator_Prog:
     2 00:D334: 53 00             LDA     #0
     3 00:D336: 5E 31             LDX     #lcd_d8
     4 00:D338: 15 E0 C7          JSR     L_Dis_8Bit_DigitDot_Prog
     5 00:D33B: 09                RTS
     6                        ;=======================================================
     7                        
     8                        L_Clr_0_Prog:
     9 00:D33C: 5E 03         	LDX		#3
    10 00:D33E: 53 08         	LDA     #8
    11 00:D340: 7F F8             STA     DINX
    12                        DISP_GET_INX_LOOP:
    13 00:D342: 63 80 18      	LDA		DBUF, X
    14 00:D345: 51 F0         	AND		#0F0H
    15                        	LJNZ	RET;等于0继续，不等于退出
+   15 00:D347: 13 03          BEQ MACRO_SYMBOL_0000
+   15 00:D349: 16 FB D6       JMP RET
+   15                         MACRO_SYMBOL_0000:
    16 00:D34C: 43 84 18      	LDA		DBUF+DFD
    17 00:D34F: 51 7F         	AND		#07FH
    18 00:D351: 76 F8         	CMP		DINX;检查小数点位数是否大于最大值
    19                        	LJZ		RET;相等退出，不相等继续
+   19 00:D353: 12 03          BNE MACRO_SYMBOL_0001
+   19 00:D355: 16 FB D6       JMP RET
+   19                         MACRO_SYMBOL_0001:
    20 00:D358: 63 80 18      	LDA		DBUF, X
    21 00:D35B: 51 0F         	AND		#00FH
    22 00:D35D: 50 A0         	ORA		#0A0H;清除高四位，保留低四位
    23 00:D35F: 6F 80 18      	STA		DBUF, X
    24 00:D362: 79 F8         	DEC		DINX
    25                        	LJE		DINX, 1, RET;比较Dinx的值和1，相等退出
+   25                         .if(())
+   25 00:D364: 73 F8          LDA DINX
+   25 00:D366: 56 01          CMP #$0001
+   25 00:D368: 12 03          BNE MACRO_SYMBOL_0002
+   25 00:D36A: 16 FB D6       JMP RET
+   25                         .else LDA CMP BNE JMP .endif
+   25                         MACRO_SYMBOL_0002:
    26 00:D36D: 63 80 18      	LDA		DBUF, X
    27 00:D370: 51 0F         	AND		#0FH
    28                        	LJNZ	RET;低四位不等于0退出
+   28 00:D372: 13 03          BEQ MACRO_SYMBOL_0003
+   28 00:D374: 16 FB D6       JMP RET
+   28                         MACRO_SYMBOL_0003:
    29 00:D377: 43 84 18      	LDA		DBUF+DFD
    30 00:D37A: 51 7F         	AND		#07FH;检查小数点位数是否大于最大值
    31 00:D37C: 76 F8         	CMP		DINX
    32                        	LJZ		RET;相等退出，不相等继续
+   32 00:D37E: 12 03          BNE MACRO_SYMBOL_0004
+   32 00:D380: 16 FB D6       JMP RET
+   32                         MACRO_SYMBOL_0004:
    33 00:D383: 63 80 18      	LDA		DBUF, X
    34 00:D386: 51 F0         	AND		#0F0H
    35 00:D388: 50 0A         	ORA		#00AH
    36 00:D38A: 6F 80 18      	STA		DBUF, X
    37 00:D38D: 79 F8         	DEC		DINX
    38 00:D38F: 0F            	DEX
    39 00:D390: 17 B0         	BRA		DISP_GET_INX_LOOP
    40                        ;======================================================================
    41                        L_Display_FD_Prog:
    42 00:D392: 15 B9 D3      	JSR		L_Clr_FD_Prog
    43 00:D395: 43 84 18          LDA     DBUF+DFD
    44 00:D398: 51 07             AND     #07H
    45 00:D39A: 04                CLC
    46 00:D39B: 06                CLD
    47 00:D39C: 18                ROL
    48 00:D39D: 1B                TAX
    49 00:D39E: 63 A8 D3          LDA     Table_FD+1,X
    50 00:D3A1: 0A                PHA
    51 00:D3A2: 63 A7 D3          LDA     Table_FD,X
    52 00:D3A5: 0A                PHA
    53 00:D3A6: 09                RTS
    54                        Table_FD:
    55 00:D3A7: AC CB         	DW      L_Dis_lcd_T8_Prog-1
    56 00:D3A9: AC CB             DW      L_Dis_lcd_T8_Prog-1
    57 00:D3AB: A8 CB             DW      L_Dis_lcd_T7_Prog-1
    58 00:D3AD: A4 CB             DW      L_Dis_lcd_T6_Prog-1
    59 00:D3AF: A0 CB             DW      L_Dis_lcd_T5_Prog-1
    60 00:D3B1: 9C CB             DW      L_Dis_lcd_T4_Prog-1
    61 00:D3B3: 98 CB             DW      L_Dis_lcd_T3_Prog-1
    62 00:D3B5: 94 CB             DW      L_Dis_lcd_T2_Prog-1
    63 00:D3B7: 90 CB             DW      L_Dis_lcd_T1_Prog-1
    64                        
    65                        L_Clr_FD_Prog:
    66 00:D3B9: 15 D0 CB      	JSR		L_Clr_lcd_T1_Prog
    67 00:D3BC: 15 D4 CB      	JSR		L_Clr_lcd_T2_Prog
    68 00:D3BF: 15 D8 CB      	JSR		L_Clr_lcd_T3_Prog
    69 00:D3C2: 15 DC CB      	JSR		L_Clr_lcd_T4_Prog
    70 00:D3C5: 15 E0 CB      	JSR		L_Clr_lcd_T5_Prog
    71 00:D3C8: 15 E4 CB      	JSR		L_Clr_lcd_T6_Prog
    72 00:D3CB: 15 E8 CB      	JSR		L_Clr_lcd_T7_Prog
    73 00:D3CE: 15 EC CB      	JSR		L_Clr_lcd_T8_Prog
    74 00:D3D1: 09            	RTS
    75                        ;======================================================================
    76                        L_Display_NEG_Prog:
    77 00:D3D2: 43 84 18      	LDA		DBUF+DFD
    78 00:D3D5: 51 80         	AND		#080H
    79                        	LJZ		L_Display_NEG_Prog_RTS
+   79 00:D3D7: 12 03          BNE MACRO_SYMBOL_0005
+   79 00:D3D9: 16 00 D4       JMP L_Display_NEG_Prog_RTS
+   79                         MACRO_SYMBOL_0005:
    80                        	JE		DINX, 12, L_Display_NEG_Prog_RTS;相等跳转，不相等继续执行
+   80                         .if(())
+   80 00:D3DC: 73 F8          LDA DINX
+   80 00:D3DE: 56 0C          CMP #$000C
+   80 00:D3E0: 13 1E          BEQ L_Display_NEG_Prog_RTS
+   80                         .else LDA CMP BEQ .endif
    81 00:D3E2: 73 F8         	LDA		DINX
    82 00:D3E4: 04            	CLC
    83 00:D3E5: 19            	ROR
    84 00:D3E6: 1B            	TAX
    85                        	JNC		DISP_NEG_L;判断是低四位还是高四位，若为偶数处理低四位，否则处理高四位
+   85 00:D3E7: 10 0D          BCC DISP_NEG_L
    86 00:D3E9: 06            	CLD
    87 00:D3EA: 04            	CLC
    88 00:D3EB: 63 80 18      	LDA		DBUF,X
    89 00:D3EE: 51 0F         	AND		#00FH
    90 00:D3F0: 50 B0         	ORA		#0B0H
    91 00:D3F2: 6F 80 18      	STA		DBUF,X
    92 00:D3F5: 09            	RTS
    93                        DISP_NEG_L:
    94 00:D3F6: 63 80 18      	LDA		DBUF,X
    95 00:D3F9: 51 F0         	AND		#0F0H
    96 00:D3FB: 50 0B         	ORA		#00BH
    97 00:D3FD: 6F 80 18      	STA		DBUF,X
    98                        L_Display_NEG_Prog_RTS:
    99 00:D400: 09                RTS
   100                        ;==============================================================
   101                        L_Symbol_Prog:
   102 00:D401: 09                RTS
   103                        ; =====================================================================
   104                        L_Copy_DBUF_TO_D1BUF_FD_Prog:
   105 00:D402: 43 84 18      	LDA		DBUF+DFD
   106 00:D405: 4F 89 18      	STA		D1BUF+D1FD
   107 00:D408: 43 80 18      	LDA		DBUF
   108 00:D40B: 4F 85 18      	STA		D1BUF
   109 00:D40E: 43 81 18      	LDA		DBUF+1
   110 00:D411: 4F 86 18      	STA		D1BUF+1
   111 00:D414: 43 82 18      	LDA		DBUF+2
   112 00:D417: 4F 87 18      	STA		D1BUF+2
   113 00:D41A: 43 83 18      	LDA		DBUF+3
   114 00:D41D: 4F 88 18      	STA		D1BUF+3
   115 00:D420: 09            	RTS
   116                        	;-----------------------------------
   117                        L_Copy_D1BUF_TO_DBUF_FD_Prog:
   118 00:D421: 43 89 18      	LDA		D1BUF+D1FD
   119 00:D424: 7F EC         	STA		IBUF+IFD
   120 00:D426: 43 85 18      	LDA		D1BUF
   121 00:D429: 7F E8         	STA		IBUF
   122 00:D42B: 43 86 18      	LDA		D1BUF+1
   123 00:D42E: 7F E9         	STA		IBUF+1
   124 00:D430: 43 87 18      	LDA		D1BUF+2
   125 00:D433: 7F EA         	STA		IBUF+2
   126 00:D435: 43 88 18      	LDA		D1BUF+3
   127 00:D438: 7F EB         	STA		IBUF+3
   128 00:D43A: 09            	RTS
   129                        ;=====================================================================
   130                        L_Display_Number_IBUF_Prog:
   131 00:D43B: 15 49 D4      	JSR		L_Copy_IBUF_TO_DBUF_FD_Prog
   132 00:D43E: 16 6F D4      	JMP		L_Display_Number_Prog
   133                        	;-----------------------------------
   134                        L_Display_Number_BUF1_Prog:
   135 00:D441: 5E 3A         	LDX		#(BUF1-RAM)
   136 00:D443: 15 50 D4      	JSR		L_Save_DBUF_Prog
   137 00:D446: 16 6F D4      	JMP		L_Display_Number_Prog
   138                        ;=====================================================================
   139                        L_Copy_IBUF_TO_DBUF_FD_Prog:
   140 00:D449: 5E 68         	LDX		#(IBUF-RAM)
   141 00:D44B: 63 84 00      	LDA		RAM+IFD,X
   142 00:D44E: 17 03         	BRA		L_Save_DBUF_Prog_X
   143                        L_Save_DBUF_Prog:
   144 00:D450: 63 88 00      	LDA		RAM+FD,X
   145                        L_Save_DBUF_Prog_X:
   146 00:D453: 4F 84 18      	STA		DBUF+DFD
   147 00:D456: 63 80 00      	LDA		RAM,X
   148 00:D459: 4F 80 18      	STA		DBUF
   149 00:D45C: 63 81 00      	LDA		RAM+1,X
   150 00:D45F: 4F 81 18      	STA		DBUF+1
   151 00:D462: 63 82 00      	LDA		RAM+2,X
   152 00:D465: 4F 82 18      	STA		DBUF+2
   153 00:D468: 63 83 00      	LDA		RAM+3,X
   154 00:D46B: 4F 83 18      	STA		DBUF+3
   155 00:D46E: 09            	RTS
   156                        ;=====================================================================
   157                        L_Display_Number_Prog:
   158 00:D46F: 15 02 D4      	JSR		L_Copy_DBUF_TO_D1BUF_FD_Prog
   159                        	;----------------------------------
   160 00:D472: 15 3C D3          JSR     L_Clr_0_Prog
   161 00:D475: 15 92 D3          JSR     L_Display_FD_Prog
   162 00:D478: 15 D2 D3          JSR     L_Display_NEG_Prog
   163 00:D47B: 15 01 D4      	JSR		L_Symbol_Prog
   164                        	;----------------------------------
   165                        L_Display_Number_Prog_DBUF:;DBUF+3存储的是高位数字
   166 00:D47E: 43 83 18      	LDA		DBUF+3
   167 00:D481: 51 F0         	AND     #F0H
   168 00:D483: 15 43 C8      	JSR		L_ROR_4Bit_Prog
   169 00:D486: 5E 00             LDX     #lcd_d1
   170 00:D488: 15 E0 C7          JSR     L_Dis_8Bit_DigitDot_Prog
   171 00:D48B: 43 83 18          LDA		DBUF+3
   172 00:D48E: 51 0F         	AND     #0FH
   173 00:D490: 5E 07             LDX     #lcd_d2
   174 00:D492: 15 E0 C7          JSR     L_Dis_8Bit_DigitDot_Prog
   175                        
   176                        
   177 00:D495: 43 82 18          LDA		DBUF+2
   178 00:D498: 51 F0         	AND     #F0H
   179 00:D49A: 15 43 C8      	JSR		L_ROR_4Bit_Prog
   180 00:D49D: 5E 0E             LDX     #lcd_d3
   181 00:D49F: 15 E0 C7          JSR     L_Dis_8Bit_DigitDot_Prog
   182 00:D4A2: 43 82 18          LDA		DBUF+2
   183 00:D4A5: 51 0F         	AND     #0FH
   184 00:D4A7: 5E 15             LDX     #lcd_d4
   185 00:D4A9: 15 E0 C7          JSR     L_Dis_8Bit_DigitDot_Prog
   186                        
   187                        
   188 00:D4AC: 43 81 18          LDA		DBUF+1
   189 00:D4AF: 51 F0         	AND     #F0H
   190 00:D4B1: 15 43 C8      	JSR		L_ROR_4Bit_Prog
   191 00:D4B4: 5E 1C             LDX     #lcd_d5
   192 00:D4B6: 15 E0 C7          JSR     L_Dis_8Bit_DigitDot_Prog
   193 00:D4B9: 43 81 18          LDA		DBUF+1
   194 00:D4BC: 51 0F         	AND     #0FH
   195 00:D4BE: 5E 23             LDX     #lcd_d6
   196 00:D4C0: 15 E0 C7          JSR     L_Dis_8Bit_DigitDot_Prog
   197                        
   198                        
   199 00:D4C3: 43 80 18          LDA		DBUF
   200 00:D4C6: 51 F0         	AND     #F0H
   201 00:D4C8: 15 43 C8      	JSR		L_ROR_4Bit_Prog
   202 00:D4CB: 5E 2A             LDX     #lcd_d7
   203 00:D4CD: 15 E0 C7          JSR     L_Dis_8Bit_DigitDot_Prog
   204 00:D4D0: 43 80 18          LDA		DBUF
   205 00:D4D3: 51 0F         	AND     #0FH
   206 00:D4D5: 5E 31             LDX     #lcd_d8
   207 00:D4D7: 15 E0 C7          JSR     L_Dis_8Bit_DigitDot_Prog
   208 00:D4DA: 09            	RTS
   209                        
   210                        
   210                        
   182                        .Include	Calculator\Calculator_Scankey.asm
     1                        
     2                        ;===========================================
     3                        L_Calculator_Frist_Press_Prog:
     4 00:D4DB: 15 E2 D4          JSR     L_Calculator_Scankey_Prog
     5 00:D4DE: 15 1A D7          JSR     L_Calculator_Calc_Prog_State_Mechine
     6 00:D4E1: 09                RTS
     7                        
     8                        
     9                        
    10                        
    11                        
    12                        
    13                        
    14                        
    15                        
    16                        
    17                        
    18                        
    19                        
    20                        
    21                        
    22                        
    23                        
    24                        
    25                        
    26                        
    27                        
    28                        L_Calculator_Scankey_Prog:
    29 00:D4E2: 43 97 18          LDA     Calculator_State
    30 00:D4E5: 04                CLC
    31 00:D4E6: 06                CLD
    32 00:D4E7: 18                ROL
    33 00:D4E8: 1B                TAX
    34 00:D4E9: 63 F3 D4          LDA     Table_Calculator_State+1,X
    35 00:D4EC: 0A                PHA
    36 00:D4ED: 63 F2 D4          LDA     Table_Calculator_State,X
    37 00:D4F0: 0A                PHA
    38 00:D4F1: 09                RTS
    39                        Table_Calculator_State:
    40 00:D4F2: F7 D4             DW      L_Calculator_Init_Prog-1
    41 00:D4F4: 0F D5             DW      L_Calculator_State_Symbol_First_Press_Prog-1
    42 00:D4F6: 55 D5             DW      L_Calculator_State_Input_Prog-1
    43                        ;======================================================================
    44                        L_Calculator_Init_Prog:
    45 00:D4F8: 15 D9 D5          JSR     Calculator_Input
    46 00:D4FB: 73 A6             LDA     P_Scankey_value
    47 00:D4FD: 56 10             CMP     #16
    48                        
    49 00:D4FF: 10 0E             BCC     L_Calculator_Init_Prog_RTS
    50 00:D501: 56 14             CMP     #20
    51 00:D503: 13 0A             BEQ     L_Calculator_Init_Prog_RTS
    52                        
    53 00:D505: 53 01             LDA     #Calculator_State_Symbol_First_Press;一旦符号键按下，将IBUF的内容传送到，BUF1中
    54 00:D507: 4F 97 18          STA     Calculator_State                    ;并改变计算器当前状态
    55 00:D50A: 53 01             LDA     #Calc_First_Output
    56 00:D50C: 4F 99 18          STA     Calculator_State_Mechine
    57                        L_Calculator_Init_Prog_RTS:
    58 00:D50F: 09                RTS
    59                        
    60                        
    61                        
    62                        
    63                        ;============================================================================
    64                        L_Calculator_State_Symbol_First_Press_Prog:
    65                        ;在计算器按下符号键后，判断再次按下的是什么键，;如果是数字键改变状态，如果是符号键，改变符号状态，
    66                        ;并判断是否是乘方模式;当小于16时判断数字键按下跳转，改变扫键状态;当大于16时判断是符号键按下，当按下等于号是进行运算
    67 00:D510: 73 A6             LDA     P_Scankey_value
    68 00:D512: 56 10             CMP     #16
    69 00:D514: 10 27             BCC     Calculator_State_Number_Input  ;小于16说明按下的是数字键
    70                        
    71 00:D516: 73 A6             LDA     P_Scankey_value
    72 00:D518: 56 14             CMP     #D_NUM_Equal_Press
    73 00:D51A: 13 2F             BEQ     L_Calculator_State_Symbol_No_Number
    74 00:D51C: 43 98 18          LDA     Calculator_Symbol_State
    75 00:D51F: 56 03             CMP     #State_Mul
    76 00:D521: 13 04             BEQ     Calculator_State_Involution_Judgement
    77 00:D523: 15 B3 D6          JSR     Calculator_Input_Symbol_Prog
    78 00:D526: 09                RTS
    79                        
    80                        Calculator_State_Involution_Judgement:
    81 00:D527: 15 B3 D6          JSR     Calculator_Input_Symbol_Prog
    82 00:D52A: 43 98 18          LDA     Calculator_Symbol_State
    83 00:D52D: 56 03             CMP     #State_Mul
    84 00:D52F: 12 0B             BNE     Calculator_State_Involution_Judgement_RTS
    85 00:D531: 53 05             LDA     #State_Involution
    86 00:D533: 4F 98 18          STA     Calculator_Symbol_State
    87 00:D536: 15 14 CC          JSR     L_Display_lcd_Involution_Prog
    88 00:D539: 15 9A D5          JSR     L_Copy_BUF1_TO_BBUF_Prog
    89                        Calculator_State_Involution_Judgement_RTS:
    90 00:D53C: 09                RTS
    91                        
    92                        Calculator_State_Number_Input:;存在按键输入数字跳转计算器输入状态
    93 00:D53D: 5E 68             LDX     #(IBUF-RAM)
    94 00:D53F: 15 C4 CE          JSR     L_Clear_BUF_Prog
    95 00:D542: 15 D9 D5          JSR     Calculator_Input
    96 00:D545: 53 02             LDA     #Calculator_State_Input
    97 00:D547: 4F 97 18          STA     Calculator_State
    98 00:D54A: 09                RTS
    99                        
   100                        L_Calculator_State_Symbol_No_Number:;当没有数字键按下并按下等号时，进行自加
   101 00:D54B: 53 02             LDA     #Calc_First_Output_
   102 00:D54D: 4F 99 18          STA     Calculator_State_Mechine
   103 00:D550: 53 03             LDA     #Calculator_State_Equal_Press
   104 00:D552: 4F 97 18          STA     Calculator_State
   105                        
   106 00:D555: 09                RTS
   107                        
   108                        L_Calculator_State_Input_Prog:
   109                        
   110                        
   111                        
   112                        
   113                        
   114                        
   115                        
   116                        
   117                        
   117                        
   183                        .Include	Calculator\Calculator_Base_1.asm
     1                        L_Judge_IBUF_Prog:
     2 00:D556: 73 E8         	LDA		IBUF
     3 00:D558: 70 E9         	ORA		IBUF+1
     4 00:D55A: 70 EA         	ORA		IBUF+2
     5 00:D55C: 70 EB         	ORA		IBUF+3
     6 00:D55E: 09            	RTS
     7                        ;---------------------------------
     8                        L_Move_Left_One_Bit_Prog_IBUF:
     9 00:D55F: 04            	CLC
    10 00:D560: 7A E8         	ROL		IBUF
    11 00:D562: 7A E9         	ROL		IBUF+1
    12 00:D564: 7A EA         	ROL		IBUF+2
    13 00:D566: 7A EB         	ROL		IBUF+3
    14 00:D568: 09            	RTS
    15                        ;---------------------------------
    16                        L_Move_Right_One_Bit_Prog_IBUF:
    17 00:D569: 04            	CLC
    18 00:D56A: 7B EB         	ROR		IBUF+3
    19 00:D56C: 7B EA         	ROR		IBUF+2
    20 00:D56E: 7B E9         	ROR		IBUF+1
    21 00:D570: 7B E8         	ROR		IBUF
    22 00:D572: 09            	RTS
    23                        ;--------------------------------
    24                        L_COPY_IBUF_TO_BUF1_FD:
    25 00:D573: 5E 3A         	LDX		#(BUF1-RAM)
    26 00:D575: 73 E8         	LDA		IBUF
    27 00:D577: 6F 80 00      	STA		RAM, X
    28 00:D57A: 73 E9         	LDA		IBUF+1
    29 00:D57C: 6F 81 00      	STA		RAM+1, X
    30 00:D57F: 73 EA         	LDA		IBUF+2
    31 00:D581: 6F 82 00      	STA		RAM+2, X
    32 00:D584: 73 EB         	LDA		IBUF+3
    33 00:D586: 6F 83 00      	STA		RAM+3, X
    34 00:D589: 73 EC         	LDA		IBUF+IFD
    35 00:D58B: 6F 88 00      	STA		RAM+FD, X
    36 00:D58E: 09            	RTS
    37                        ;----------------------------------
    38                        L_COPY_BUF1_TO_BUF2_FD:
    39 00:D58F: 5E 3A         	LDX		#(BUF1-RAM)
    40 00:D591: 15 E8 CF      	JSR		L_Copy_To_BUF2
    41 00:D594: 73 BE         	LDA		BUF1+IFD
    42 00:D596: 6F 88 00      	STA		RAM+FD, X
    43 00:D599: 09            	RTS
    44                        L_Copy_BUF1_TO_BBUF_Prog:
    45 00:D59A: 73 BA         	LDA		BUF1
    46 00:D59C: 4F 8A 18      	STA		BBUF
    47 00:D59F: 73 BB         	LDA		BUF1+1
    48 00:D5A1: 4F 8B 18      	STA		BBUF+1
    49 00:D5A4: 73 BC         	LDA		BUF1+2
    50 00:D5A6: 4F 8C 18      	STA		BBUF+2
    51 00:D5A9: 73 BD         	LDA		BUF1+3
    52 00:D5AB: 4F 8D 18      	STA		BBUF+3
    53 00:D5AE: 73 BE         	LDA		BUF1+IFD
    54 00:D5B0: 4F 8E 18      	STA		BBUF+IFD
    55 00:D5B3: 09            	RTS
    56                        
    57                        L_COPY_BBUF_TO_BUF1_Prog:
    58 00:D5B4: 43 8A 18      	LDA		BBUF
    59 00:D5B7: 7F BA         	STA		BUF1
    60 00:D5B9: 43 8B 18      	LDA		BBUF+1
    61 00:D5BC: 7F BB         	STA		BUF1+1
    62 00:D5BE: 43 8C 18      	LDA		BBUF+2
    63 00:D5C1: 7F BC         	STA		BUF1+2
    64 00:D5C3: 43 8D 18      	LDA		BBUF+3
    65 00:D5C6: 7F BD         	STA		BUF1+3
    66 00:D5C8: 43 8E 18      	LDA		BBUF+IFD
    67 00:D5CB: 7F BE         	STA		BUF1+IFD
    68 00:D5CD: 09            	RTS
    69                        
    70                        L_COPY_BUF2_TO_BUF1_FD:
    71 00:D5CE: 5E 43         	LDX		#(BUF2-RAM)
    72 00:D5D0: 15 BF CF      	JSR		L_Copy_To_BUF1
    73 00:D5D3: 73 BE         	LDA		BUF1+IFD
    74 00:D5D5: 6F 88 00      	STA		RAM+FD, X
    75 00:D5D8: 09            	RTS
    76                        
    77                        ;=====================================
    78                        Calculator_Input:
    79 00:D5D9: 73 A6             LDA     P_Scankey_value
    80 00:D5DB: 56 10             CMP     #16
    81 00:D5DD: 10 05             BCC     Calculator_Input_Number_Prog_TO
    82 00:D5DF: 56 14             CMP     #20
    83 00:D5E1: 10 04             BCC     Calculator_Input_Symbol_Prog_TO
    84 00:D5E3: 09                RTS
    85                        
    86                        Calculator_Input_Number_Prog_TO:
    87 00:D5E4: 16 50 D6          JMP     Calculator_Input_Number_Prog
    88                        
    89                        Calculator_Input_Symbol_Prog_TO:
    90 00:D5E7: 16 B3 D6          JMP     Calculator_Input_Symbol_Prog
    91                        
    92                        
    93                        
    94                        
    95                        
    96                        
    97                        
    98                        
    99                        ; ;============================================
   100                        L_Input_Full_Prog:
   101 00:D5EA: 73 EB             LDA     IBUF+MAX_BYTE-1
   102 00:D5EC: 51 F0             AND     #0F0H
   103                            LJNZ    L_Input_Full_Error
+  103 00:D5EE: 13 03          BEQ MACRO_SYMBOL_0006
+  103 00:D5F0: 16 01 D6       JMP L_Input_Full_Error
+  103                         MACRO_SYMBOL_0006:
   104 00:D5F3: 73 EC             LDA     IBUF+IFD
   105 00:D5F5: 51 7F             AND     #07FH
   106 00:D5F7: 56 08             CMP     #MAX_DIG
   107                            LJZ     RET1
+  107 00:D5F9: 12 03          BNE MACRO_SYMBOL_0007
+  107 00:D5FB: 16 F5 D6       JMP RET1
+  107                         MACRO_SYMBOL_0007:
   108 00:D5FE: 16 F8 D6          JMP     RET0
   109                        
   110                        ; ;=========================================
   111                        
   112                        L_Input_Full_Error:
   113 00:D601: 73 EC         	LDA		IBUF+IFD;读取输入的小数位
   114                        	LJNZ	RET1
+  114 00:D603: 13 03          BEQ MACRO_SYMBOL_0008
+  114 00:D605: 16 F5 D6       JMP RET1
+  114                         MACRO_SYMBOL_0008:
   115 00:D608: 53 08         	LDA     #ERR_IN
   116 00:D60A: 4F 8F 18          STA     ERR
   117 00:D60D: 09                RTS
   118                        
   119                        Input_FD_Inc:
   120 00:D60E: 73 EC         	LDA		IBUF+IFD
   121 00:D610: 51 7F         	AND		#07FH
   122                        	LJZ		RET
+  122 00:D612: 12 03          BNE MACRO_SYMBOL_0009
+  122 00:D614: 16 FB D6       JMP RET
+  122                         MACRO_SYMBOL_0009:
   123 00:D617: 04                CLC
   124 00:D618: 73 EC         	LDA     IBUF+IFD
   125 00:D61A: 54 01             ADC     #1
   126 00:D61C: 7F EC             STA     IBUF+IFD
   127 00:D61E: 09            	RTS
   128                        
   129                        Input_FD:
   130 00:D61F: 73 EC         	LDA		IBUF+IFD
   131 00:D621: 51 7F         	AND		#07FH
   132                        	LJNZ	RET
+  132 00:D623: 13 03          BEQ MACRO_SYMBOL_000A
+  132 00:D625: 16 FB D6       JMP RET
+  132                         MACRO_SYMBOL_000A:
   133 00:D628: 04                CLC
   134 00:D629: 73 EC             LDA     IBUF+IFD
   135 00:D62B: 54 01             ADC     #1
   136 00:D62D: 7F EC             STA     IBUF+IFD
   137 00:D62F: 09            	RTS
   138                        
   139                        
   140                        
   141                        
   142                        ; ;============================================
   143                        
   144                        Calculator_Input_Number:
   145 00:D630: 7F F2             STA     ACC
   146 00:D632: 15 EA D5          JSR     L_Input_Full_Prog
   147                            LJNZ    RET
+  147 00:D635: 13 03          BEQ MACRO_SYMBOL_000B
+  147 00:D637: 16 FB D6       JMP RET
+  147                         MACRO_SYMBOL_000B:
   148 00:D63A: 15 0E D6          JSR     Input_FD_Inc
   149                        
   150 00:D63D: 15 5F D5          JSR     L_Move_Left_One_Bit_Prog_IBUF
   151 00:D640: 15 5F D5          JSR     L_Move_Left_One_Bit_Prog_IBUF
   152 00:D643: 15 5F D5          JSR     L_Move_Left_One_Bit_Prog_IBUF
   153 00:D646: 15 5F D5          JSR     L_Move_Left_One_Bit_Prog_IBUF
   154 00:D649: 73 E8             LDA     IBUF
   155 00:D64B: 70 F2             ORA     ACC
   156 00:D64D: 7F E8             STA     IBUF
   157 00:D64F: 09                RTS
   158                        ;============================================
   159                        
   160                        
   161                        Calculator_Input_Number_Prog:
   162 00:D650: 73 A6             LDA     P_Scankey_value
   163 00:D652: 56 0C             CMP     #D_NUM0_Press
   164 00:D654: 13 29             BEQ     Calculator_Input_Number0
   165 00:D656: 56 01             CMP     #D_NUM1_Press
   166 00:D658: 13 29             BEQ     Calculator_Input_Number1
   167 00:D65A: 56 02             CMP     #D_NUM2_Press
   168 00:D65C: 13 29             BEQ     Calculator_Input_Number2
   169 00:D65E: 56 03             CMP     #D_NUM3_Press
   170 00:D660: 13 29             BEQ     Calculator_Input_Number3
   171 00:D662: 56 04             CMP     #D_NUM4_Press
   172 00:D664: 13 29             BEQ     Calculator_Input_Number4
   173 00:D666: 56 05             CMP     #D_NUM5_Press
   174 00:D668: 13 29             BEQ     Calculator_Input_Number5
   175 00:D66A: 56 08             CMP     #D_NUM6_Press
   176 00:D66C: 13 29             BEQ     Calculator_Input_Number6
   177 00:D66E: 56 09             CMP     #D_NUM7_Press
   178 00:D670: 13 29             BEQ     Calculator_Input_Number7
   179 00:D672: 56 0A             CMP     #D_NUM8_Press
   180 00:D674: 13 29             BEQ     Calculator_Input_Number8
   181 00:D676: 56 0B             CMP     #D_NUM9_Press
   182 00:D678: 13 29             BEQ     Calculator_Input_Number9
   183 00:D67A: 56 0F             CMP     #D_NUM_Point_Press
   184 00:D67C: 13 2E             BEQ     Input_Dot
   185 00:D67E: 09                RTS
   186                        Calculator_Input_Number0:
   187 00:D67F: 53 00             LDA     #0
   188 00:D681: 17 22             BRA     Calculator_Input_NumberX
   189                        Calculator_Input_Number1:
   190 00:D683: 53 01             LDA     #1
   191 00:D685: 17 1E             BRA     Calculator_Input_NumberX
   192                        Calculator_Input_Number2:
   193 00:D687: 53 02             LDA     #2
   194 00:D689: 17 1A             BRA     Calculator_Input_NumberX
   195                        Calculator_Input_Number3:
   196 00:D68B: 53 03             LDA     #3
   197 00:D68D: 17 16             BRA     Calculator_Input_NumberX
   198                        Calculator_Input_Number4:
   199 00:D68F: 53 04             LDA     #4
   200 00:D691: 17 12             BRA     Calculator_Input_NumberX
   201                        Calculator_Input_Number5:
   202 00:D693: 53 05             LDA     #5
   203 00:D695: 17 0E             BRA     Calculator_Input_NumberX
   204                        Calculator_Input_Number6:
   205 00:D697: 53 06             LDA     #6
   206 00:D699: 17 0A             BRA     Calculator_Input_NumberX
   207                        Calculator_Input_Number7:
   208 00:D69B: 53 07             LDA     #7
   209 00:D69D: 17 06             BRA     Calculator_Input_NumberX
   210                        Calculator_Input_Number8:
   211 00:D69F: 53 08             LDA     #8
   212 00:D6A1: 17 02             BRA     Calculator_Input_NumberX
   213                        Calculator_Input_Number9:
   214 00:D6A3: 53 09             LDA     #9
   215                        Calculator_Input_NumberX
   216 00:D6A5: 15 30 D6          JSR		Calculator_Input_Number
   217 00:D6A8: 15 3B D4          JSR     L_Display_Number_IBUF_Prog
   218 00:D6AB: 09                RTS
   219                        
   220                        Input_Dot:
   221 00:D6AC: 15 1F D6      	JSR		Input_FD
   222 00:D6AF: 15 3B D4      	JSR     L_Display_Number_IBUF_Prog
   223 00:D6B2: 09                RTS
   224                        
   225                        
   226                        Calculator_Input_Symbol_Prog:
   227 00:D6B3: 73 A6             LDA     P_Scankey_value
   228 00:D6B5: 56 14             CMP     #D_NUM_Equal_Press
   229 00:D6B7: 13 11             BEQ		Input_Equal
   230 00:D6B9: 56 10             CMP     #D_NUM_Add_Press
   231 00:D6BB: 13 14         	BEQ		Input_Add
   232 00:D6BD: 56 11             CMP     #D_NUM_Minus_Press
   233 00:D6BF: 13 17         	BEQ		Input_Sub_Prog
   234 00:D6C1: 56 12             CMP     #D_NUM_Multiply_Press
   235 00:D6C3: 13 1A         	BEQ		Input_Mul_Prog
   236 00:D6C5: 56 13             CMP     #D_NUM_Divid_Press
   237 00:D6C7: 13 1D         	BEQ		Input_DIV
   238 00:D6C9: 09            	RTS
   239                        Input_Equal:
   240 00:D6CA: 53 01         	LDA		#State_Equal
   241 00:D6CC: 4F 9A 18      	STA		Calculator_Symbol_State_Equal
   242 00:D6CF: 17 20         	BRA		Input_Symbol_Equal
   243                        Input_Add:
   244 00:D6D1: 53 01         	LDA		#State_Add
   245 00:D6D3: 4F 98 18      	STA		Calculator_Symbol_State
   246 00:D6D6: 17 15         	BRA		Input_Symbol
   247                        Input_Sub_Prog:
   248 00:D6D8: 53 02         	LDA		#State_SUB
   249 00:D6DA: 4F 98 18      	STA		Calculator_Symbol_State
   250 00:D6DD: 17 0E         	BRA		Input_Symbol
   251                        Input_Mul_Prog:
   252 00:D6DF: 53 03         	LDA		#State_Mul
   253 00:D6E1: 4F 98 18      	STA		Calculator_Symbol_State
   254 00:D6E4: 17 07         	BRA		Input_Symbol
   255                        Input_DIV:
   256 00:D6E6: 53 04         	LDA		#State_DIV
   257 00:D6E8: 4F 98 18      	STA		Calculator_Symbol_State
   258 00:D6EB: 17 00         	BRA		Input_Symbol
   259                        Input_Symbol:
   260 00:D6ED: 15 4C CC      	JSR		L_Dis_Calculator_Symbol_Prog
   261 00:D6F0: 09            	RTS
   262                        Input_Symbol_Equal:
   263 00:D6F1: 15 69 CC      	JSR		L_Dis_Calculator_Symbol_Prog_Equal
   264 00:D6F4: 09            	RTS
   265                        ;===================================
   266                        RET1:
   267 00:D6F5: 53 01             LDA     #1
   268 00:D6F7: 09                RTS
   269                        RET0:
   270 00:D6F8: 53 00             LDA     #0
   271 00:D6FA: 09                RTS
   272                        RET:
   273 00:D6FB: 09                RTS
   274                        
   275                        ;=====================================
   276                        L_Calculator_Calc_Prog:
   277 00:D6FC: 04            	CLC
   278 00:D6FD: 06            	CLD
   279 00:D6FE: 43 98 18      	LDA		Calculator_Symbol_State
   280 00:D701: 18            	ROL
   281 00:D702: 1B            	TAX
   282 00:D703: 63 0D D7      	LDA		Table_Calc+1,X
   283 00:D706: 0A            	PHA
   284 00:D707: 63 0C D7      	LDA		Table_Calc,X
   285 00:D70A: 0A            	PHA
   286 00:D70B: 09            	RTS
   287                        Table_Calc:
   288 00:D70C: FA D6         	DW		RET-1
   289 00:D70E: 0C D1         	DW		L_Control_Add_Prog-1
   290 00:D710: 74 D1         	DW		L_Control_SUB_Prog-1
   291 00:D712: 9F D1         	DW		L_Control_Mul_Prog-1
   292 00:D714: 20 D2         	DW		L_Control_DIV_Prog-1
   293 00:D716: 9F D1         	DW		L_Control_Mul_Prog-1
   294                        
   295                        
   296                        
   297                        ;==========================================
   298                        L_OutPut_Result_IN_:;存在按键输入数字的函数
   299                        
   300 00:D718: 09            	RTS
   301                        L_OutPut_Result_:;不存在按键输入数字的函数
   302                        
   303                        	RTS
   303 00:D719: 09            
   184                        .Include	Calculator\Calculator_Mechine.asm
     1                        L_Calculator_Calc_Prog_State_Mechine:
     2 00:D71A: 43 99 18          LDA     Calculator_State_Mechine
     3 00:D71D: 04                CLC
     4 00:D71E: 06                CLD
     5 00:D71F: 18                ROL
     6 00:D720: 1B                TAX
     7 00:D721: 63 2B D7          LDA     Table_Calc_OutPut+1,X
     8 00:D724: 0A                PHA
     9 00:D725: 63 2A D7          LDA     Table_Calc_OutPut,X
    10 00:D728: 0A                PHA
    11 00:D729: 09                RTS
    12                        
    13                        Table_Calc_OutPut:
    14 00:D72A: 2F D7             DW      L_OutPut_Prog_Init-1
    15 00:D72C: 30 D7             DW      L_Output_Prog_First_Output-1
    16 00:D72E: 3F D7             DW      L_Output_Prog_First_Output_-1
    17                        
    18                        L_OutPut_Prog_Init:
    19 00:D730: 09                RTS
    20                        ;===============================================================
    21                        L_Output_Prog_First_Output:;按键第一次按下加减乘除符号键所造成的影响
    22 00:D731: 15 73 D5          JSR     L_COPY_IBUF_TO_BUF1_FD
    23 00:D734: 15 A3 D2          JSR     L_Control_BUF1_Adjust_Result
    24 00:D737: 15 8F D5          JSR     L_COPY_BUF1_TO_BUF2_FD
    25 00:D73A: 53 00             LDA     #Calc_Init
    26 00:D73C: 4F 99 18          STA     Calculator_State_Mechine
    27 00:D73F: 09                RTS
    28                        ;================================================================
    29                        L_Output_Prog_First_Output_:;没有数字按下时按下等号键
    30 00:D740: 15 73 D5          JSR     L_COPY_IBUF_TO_BUF1_FD
    31 00:D743: 15 A3 D2          JSR     L_Control_BUF1_Adjust_Result
    32 00:D746: 15 FC D6          JSR     L_Calculator_Calc_Prog
    33 00:D749: 53 00             LDA     #Calc_Init
    34 00:D74B: 4F 99 18          STA     Calculator_State_Mechine
    35 00:D74E: 16 51 D7          JMP     L_Display_Calculator_Output
    36                        
    37                        
    38                        
    39                        
    40                        L_Display_Calculator_Output:
    41 00:D751: 15 CE D5          JSR     L_COPY_BUF2_TO_BUF1_FD
    42 00:D754: 15 41 D4          JSR     L_Display_Number_BUF1_Prog
    43 00:D757: 09                RTS
    43                        
   185                        
   186                        
   187                        
   188                        .INCLUDE	Half_s\Half.asm
     1                        L_Half_Second_Prog:
     2 00:D758: 30 A0 0E      	BBR0 	Sys_Flag_B,L_END_Half_Second_Prog	;判断半秒标志
     3 00:D75B: 20 A0         	RMB0 	Sys_Flag_B							;清楚半秒标志
     4 00:D75D: 73 A3         	LDA		R_Reset_Time
     5 00:D75F: 12 21         	BNE		L_Reset_2s_Prog
     6 00:D761: 39 A0 06      	BBS1	Sys_Flag_B,L_1Second_Prog			;判断一秒标志
     7 00:D764: 29 A0         	SMB1	Sys_Flag_B							;设置1秒标志
     8 00:D766: 15 60 DA      	JSR		L_SysFlash_Prog						;闪烁程序
     9                        L_END_Half_Second_Prog:
    10 00:D769: 09                RTS
    11                        ;=================================================================
    12                        L_1Second_Prog:
    13 00:D76A: 21 A0             RMB1    Sys_Flag_B;清除1秒标志
    14 00:D76C: 15 3A DA      	JSR		L_Set_Mode_Auto_Exit
    15 00:D76F: 15 32 DB      	JSR		L_Control_Beep_prog_Auto_Exit
    16                        
    17 00:D772: 15 93 D7      	JSR     L_Update_Time_Prog
    18 00:D775: 15 0F D8      	JSR		L_Update_Another_Time_Prog
    19 00:D778: 15 6A D9      	JSR		L_Alarm_Prog
    20 00:D77B: 15 FA D9          JSR		L_Control_Positive_Timer_Prog
    21 00:D77E: 15 27 C9      	JSR		L_Display_Normal_Prog
    22 00:D781: 09            	RTS
    23                        ;==============================================================
    24                        L_Reset_2s_Prog:;全显
    25 00:D782: 79 A3         	DEC		R_Reset_Time
    26 00:D784: 73 A3         	LDA		R_Reset_Time
    27 00:D786: 12 0A         	BNE		L_End_Reset_2s_Prog
    28 00:D788: 15 ED C0      	JSR		L_Clr_All_DisRam_Prog
    29 00:D78B: 15 BE C9      	JSR		L_Display_Prog
    30 00:D78E: 15 59 DB      	JSR		L_Beep_1s
    31 00:D791: 09            	RTS
    32                        L_End_Reset_2s_Prog:
    33 00:D792: 09            	RTS
    33                        
   189                        .INCLUDE	Half_s\Clock.asm
     1                        ;=========================
     2                        L_Update_Time_Prog:
     3                        	; JSR		L_Update_Time_Ms_Prog
     4 00:D793: 15 E4 D7      	JSR		L_Update_Time_Sec_Prog
     5                        
     6                        
     7 00:D796: 10 20         	BCC		L_End_Update_Time_Prog
     8                        
     9 00:D798: 15 C4 D7      	JSR		L_Control_Snz_Prog
    10 00:D79B: 15 E9 D7      	JSR		L_Update_Time_Min_Prog
    11                        
    12                        
    13 00:D79E: 10 18         	BCC		L_End_Update_Time_Prog
    14                        
    15                        
    16 00:D7A0: 15 B9 D7      	JSR		L_Control_Beep_Time_On_Alarm_Prog
    17 00:D7A3: 15 EE D7      	JSR		L_Update_Time_Hr_Prog
    18                        
    19                        
    20 00:D7A6: 10 10         	BCC		L_End_Update_Time_Prog
    21                        
    22 00:D7A8: 15 F5 D7      	JSR		L_Update_Time_Day_Prog
    23                        
    24                        
    25 00:D7AB: 10 08         	BCC		L_End_Update_Date_Prog
    26                        
    27 00:D7AD: 15 FD D7      	JSR		L_Update_Time_Month_Prog
    28                        
    29                        
    30 00:D7B0: 10 03         	BCC		L_End_Update_Date_Prog
    31                        
    32 00:D7B2: 15 04 D8      	JSR		L_Update_Time_Year_Prog
    33                        
    34                        
    35                        L_End_Update_Date_Prog:
    36 00:D7B5: 15 C7 D8      	JSR		L_Auto_Counter_Week
    37                        L_End_Update_Time_Prog:
    38 00:D7B8: 09            	RTS
    39                        ;================================================
    40                        L_Control_Beep_Time_On_Alarm_Prog:;控制整点报时
    41 00:D7B9: 31 A1 FC      	BBR1	Sys_Flag_C,L_End_Update_Time_Prog;判断整点报时是否开启
    42 00:D7BC: 53 02         	LDA		#2
    43 00:D7BE: 4F 94 18      	STA		R_Voice_Unit
    44                        	EN_LCD_IRQ
+   44 00:D7C1: 2E 0E          SMB6 IER
    45 00:D7C3: 09            	RTS
    46                        ;==================================================
    47                        ;控制贪睡闹钟
    48                        L_Control_Snz_Prog:
    49 00:D7C4: 37 A1 F1      	BBR7	Sys_Flag_C,L_End_Update_Time_Prog
    50 00:D7C7: 00            	SEC
    51 00:D7C8: 43 95 18      	LDA		R_Snz_Time
    52 00:D7CB: 55 01         	SBC		#1
    53 00:D7CD: 4F 95 18      	STA		R_Snz_Time
    54 00:D7D0: 12 E6         	BNE		L_End_Update_Time_Prog
    55 00:D7D2: 53 05         	LDA		#D_Snz_Time
    56 00:D7D4: 4F 95 18      	STA		R_Snz_Time
    57 00:D7D7: 15 93 D9      	JSR		L_Alarm_Control_Prog_2
    58 00:D7DA: 43 96 18      	LDA		R_Snz_Frequency
    59 00:D7DD: 00            	SEC
    60 00:D7DE: 55 01         	SBC		#1
    61 00:D7E0: 4F 96 18      	STA		R_Snz_Frequency
    62 00:D7E3: 09            	RTS
    63                        ;===================================
    64                        ;-----时间的增加---------------------
    65                        ;===================================
    66                        ;----------------------------------
    67                        L_Update_Time_Sec_Prog:
    68 00:D7E4: 5E 00         	LDX 	#(R_Time_Sec-Time_Str_Addr)
    69 00:D7E6: 16 28 D8      	JMP		L_Inc_To_60_Prog
    70                        L_Update_Time_Min_Prog:;时间分钟更新加
    71 00:D7E9: 5E 01         	LDX		#(R_Time_Min-Time_Str_Addr)
    72 00:D7EB: 16 28 D8      	JMP		L_Inc_To_60_Prog
    73                        ;---------------------------
    74                        L_Update_Time_Hr_Prog:;时间小时更新加
    75 00:D7EE: 5E 02         	LDX		#(R_Time_Hr-Time_Str_Addr)
    76 00:D7F0: 53 17         	LDA		#23
    77 00:D7F2: 16 2A D8      	JMP		L_Inc_To_Any_Count_Prog
    78                        ;----------------------------------
    79                        L_Update_Time_Day_Prog:;时间天数更新加
    80 00:D7F5: 15 82 D8      	JSR		L_Check_MaxDay_Prog
    81 00:D7F8: 5E 03         	LDX		#(R_Time_Day-Time_Str_Addr)
    82 00:D7FA: 16 44 D8      	JMP		L_Inc_To_Any_Count_Prog_To_1
    83                        ;-------------------------------------
    84                        L_Update_Time_Month_Prog:;时间月更新加
    85 00:D7FD: 5E 04         	LDX		#(R_Time_Month-Time_Str_Addr)
    86 00:D7FF: 53 0C         	LDA		#12
    87 00:D801: 16 44 D8      	JMP		L_Inc_To_Any_Count_Prog_To_1
    88                        
    89                        ;----------------------------------
    90                        L_Update_Time_Year_Prog:;时间年更新加
    91 00:D804: 5E 05         	LDX		#(R_Time_Year-Time_Str_Addr)
    92 00:D806: 53 63         	LDA		#99
    93 00:D808: 15 2A D8      	JSR		L_Inc_To_Any_Count_Prog
    94 00:D80B: 15 91 D8      	JSR		L_Judge_MaxDay_Prog
    95 00:D80E: 09            	RTS
    96                        ;======================================
    97                        ;---------第二时间更新------------------
    98                        ;======================================
    99                        L_Update_Another_Time_Prog:
   100 00:D80F: 73 A8         	LDA		R_Time_Sec
   101 00:D811: 12 08         	BNE		L_Update_Another_Time_Prog_OUT
   102 00:D813: 15 1C D8      	JSR		L_Update_Another_Time_Min_Prog
   103 00:D816: 10 03         	BCC		L_Update_Another_Time_Prog_OUT
   104 00:D818: 15 21 D8      	JSR		L_Update_Another_Time_Hr_Prog
   105                        L_Update_Another_Time_Prog_OUT:
   106 00:D81B: 09            	RTS
   107                        
   108                        L_Update_Another_Time_Min_Prog:;时间分钟更新加
   109 00:D81C: 5E 07         	LDX		#(R_Time_Min_Another-Time_Str_Addr)
   110 00:D81E: 16 28 D8      	JMP		L_Inc_To_60_Prog
   111                        ;---------------------------
   112                        L_Update_Another_Time_Hr_Prog:;时间小时更新加
   113 00:D821: 5E 08         	LDX		#(R_Time_Hr_Another-Time_Str_Addr)
   114 00:D823: 53 17         	LDA		#23
   115 00:D825: 16 2A D8      	JMP		L_Inc_To_Any_Count_Prog
   116                        
   117                        
   118                        ;================================
   119                        L_Inc_To_60_Prog:;将数从0加到59
   120 00:D828: 53 3B         	LDA		#59
   121                        L_Inc_To_Any_Count_Prog:
   122 00:D82A: 00            	SEC
   123 00:D82B: 65 28 18      	SBC		Time_Addr,X
   124 00:D82E: 13 0D         	BEQ		L_Inc_Over_Prog
   125 00:D830: 10 0B         	BCC		L_Inc_Over_Prog
   126 00:D832: 04            	CLC
   127 00:D833: 63 28 18      	LDA		Time_Addr,X
   128 00:D836: 54 01         	ADC		#1
   129 00:D838: 6F 28 18      	STA		Time_Addr,X
   130 00:D83B: 04            	CLC
   131 00:D83C: 09            	RTS
   132                        L_Inc_Over_Prog:
   133 00:D83D: 53 00         	LDA		#0
   134 00:D83F: 6F 28 18      	STA		Time_Addr,X
   135 00:D842: 00            	SEC
   136                        L_End_Inc_To_60_Prog:
   137 00:D843: 09            	RTS
   138                        
   139                        L_Inc_To_Any_Count_Prog_To_1:;将数从1加到59
   140 00:D844: 00            	SEC
   141 00:D845: 65 28 18      	SBC		Time_Addr,X
   142 00:D848: 13 0C         	BEQ		L_Inc_Over_Prog_To_1
   143 00:D84A: 10 0A         	BCC		L_Inc_Over_Prog_To_1
   144 00:D84C: 04            	CLC
   145 00:D84D: 63 28 18      	LDA		Time_Addr,X
   146 00:D850: 54 01         	ADC		#1
   147 00:D852: 6F 28 18      	STA		Time_Addr,X
   148 00:D855: 09            	RTS
   149                        L_Inc_Over_Prog_To_1:
   150 00:D856: 53 01         	LDA		#1
   151 00:D858: 6F 28 18      	STA		Time_Addr,X
   152 00:D85B: 09            	RTS
   153                        ;=======================================================
   154                        L_Dec_To_60_Prog:
   155 00:D85C: 53 3B         	LDA		#59
   156                        L_Dec_To_0_Prog:
   157 00:D85E: 7F F2         	STA		P_Temp
   158 00:D860: 53 00         	LDA		#0
   159                        L_Dec_To_Anycount_Prog:
   160 00:D862: 00            	SEC
   161 00:D863: 65 28 18          SBC     Time_Addr,X
   162 00:D866: 13 0D         	BEQ		L_Dec_Over_Prog
   163 00:D868: 11 0B         	BCS		L_Dec_Over_Prog
   164                        
   165 00:D86A: 00            	SEC
   166 00:D86B: 63 28 18      	LDA		Time_Addr,X
   167 00:D86E: 55 01         	SBC		#1
   168 00:D870: 6F 28 18      	STA		Time_Addr,X
   169 00:D873: 00            	SEC
   170 00:D874: 09            	RTS
   171                        L_Dec_Over_Prog:
   172 00:D875: 73 F2         	LDA		P_Temp
   173 00:D877: 6F 28 18      	STA		Time_Addr,X
   174 00:D87A: 04            	CLC
   175 00:D87B: 09            	RTS
   176                        L_Dec_To_1_Prog:
   177 00:D87C: 7F F2             STA     P_Temp
   178 00:D87E: 53 01             LDA     #1
   179 00:D880: 17 E0             BRA     L_Dec_To_Anycount_Prog
   180                        ;===============================================
   181                        ;=====================================
   182                        ;-------------------------------------
   183                        ;=====================================
   184                        L_Check_MaxDay_Prog:;检查每月的最大天数
   185 00:D882: 73 AC         	LDA		R_Time_Month
   186 00:D884: 07            	DEC
   187 00:D885: 1B            	TAX
   188                        L_Check_MaxDay_Prog_Alarm_clock_Prog:
   189 00:D886: 3B A0 04      	BBS3	Sys_Flag_B,L_Check_LeapYear_MaxDay_Prog
   190 00:D889: 63 1F D9      	LDA		T_NoLeapYear_Month,X
   191 00:D88C: 09            	RTS
   192                        L_Check_LeapYear_MaxDay_Prog:
   193 00:D88D: 63 13 D9      	LDA		T_LeapYear_Month,X
   194 00:D890: 09            	RTS
   195                        ;==============================
   196                        ;------------------------------
   197                        ;==============================
   198                        L_Judge_MaxDay_Prog:;如果最大天数最大超界限，则给予月份的最大天数
   199 00:D891: 15 82 D8      	JSR		L_Check_MaxDay_Prog
   200 00:D894: 7F F7         	STA		P_Temp+5
   201 00:D896: 76 AB         	CMP		R_Time_Day
   202 00:D898: 11 04         	BCS		L_Judge_MaxDay_Prog_RTS
   203 00:D89A: 73 F7         	LDA		P_Temp+5
   204 00:D89C: 7F AB         	STA		R_Time_Day
   205                        L_Judge_MaxDay_Prog_RTS:
   206 00:D89E: 09            	RTS
   207                        ;==================================
   208                        L_Check_LeapYear_Prog:;检查是否是闰年
   209 00:D89F: 73 AD         	LDA		R_Time_Year
   210 00:D8A1: 7F F2         	STA		P_Temp
   211 00:D8A3: 04            	CLC
   212 00:D8A4: 7B F2         	ROR		P_Temp
   213 00:D8A6: 7E F2         	LDX		P_Temp
   214 00:D8A8: 63 2B D9      	LDA		T_LeapYear_Week,X
   215 00:D8AB: 7F F2         	STA		P_Temp
   216 00:D8AD: 30 AD 0C      	BBR0	R_Time_Year,L_Counter_LeapYear;建表从2000年开始处于低四位，高四位，需要右移四位
   217 00:D8B0: 04            	CLC
   218 00:D8B1: 7B F2         	ROR		P_Temp
   219 00:D8B3: 04            	CLC
   220 00:D8B4: 7B F2         	ROR		P_Temp
   221 00:D8B6: 04            	CLC
   222 00:D8B7: 7B F2         	ROR		P_Temp
   223 00:D8B9: 04            	CLC
   224 00:D8BA: 7B F2         	ROR		P_Temp
   225                        L_Counter_LeapYear:
   226 00:D8BC: 23 A0         	RMB3	Sys_Flag_B
   227 00:D8BE: 53 08         	LDA		#08H
   228 00:D8C0: 71 F2         	AND		P_Temp
   229 00:D8C2: 70 A0         	ORA		Sys_Flag_B
   230 00:D8C4: 7F A0         	STA		Sys_Flag_B;第四位为1则为闰年，否则·为平年
   231 00:D8C6: 09            	RTS
   232                        ;===========================================
   233                        ;P_Temp,0-3bit存储对应年分的1月1日星期几，4bit存储平闰年
   234                        ;P_Temp+1存储前几个月的天数除以7的余数
   235                        L_Auto_Counter_Week:
   236 00:D8C7: 15 9F D8      	JSR		L_Check_LeapYear_Prog
   237 00:D8CA: 15 91 D8      	JSR		L_Judge_MaxDay_Prog
   238 00:D8CD: 73 AC         	LDA		R_Time_Month
   239 00:D8CF: 1B            	TAX
   240 00:D8D0: 63 5D D9      	LDA		T_Month_Week,X
   241 00:D8D3: 7F F3         	STA		P_Temp+1
   242 00:D8D5: 33 A0 0C      	BBR3	Sys_Flag_B,L_Counter_Week_2;非闰年跳转，非闰年需要将右移四位
   243 00:D8D8: 04            	CLC
   244 00:D8D9: 7B F3         	ROR		P_Temp+1
   245 00:D8DB: 04            	CLC
   246 00:D8DC: 7B F3         	ROR		P_Temp+1
   247 00:D8DE: 04            	CLC
   248 00:D8DF: 7B F3         	ROR		P_Temp+1
   249 00:D8E1: 04            	CLC
   250 00:D8E2: 7B F3         	ROR		P_Temp+1
   251                        L_Counter_Week_2:;十六进制运算
   252 00:D8E4: 53 0F         	LDA		#$0F
   253 00:D8E6: 71 F3         	AND		P_Temp+1;保留低四位多余的天数
   254 00:D8E8: 7F F3         	STA		P_Temp+1
   255 00:D8EA: 53 07         	LDA		#7
   256 00:D8EC: 71 F2         	AND		P_Temp;保留低三位位每年一月一号星期几
   257 00:D8EE: 04            	CLC
   258 00:D8EF: 74 F3         	ADC		P_Temp+1;每年一月一日星期几加上日期再加上多余的天数
   259 00:D8F1: 74 AB         	ADC		R_Time_Day
   260 00:D8F3: 7F F2         	STA		P_Temp
   261                        L_Loop_WeekSub_7:
   262 00:D8F5: 00            	SEC
   263 00:D8F6: 73 F2         	LDA		P_Temp
   264 00:D8F8: 55 07         	SBC		#7
   265 00:D8FA: 10 05         	BCC		L_End_Counter_Week
   266 00:D8FC: 7F F2         	STA		P_Temp
   267 00:D8FE: 16 F5 D8      	JMP		L_Loop_WeekSub_7
   268                        L_End_Counter_Week:
   269 00:D901: 73 F2         	LDA		P_Temp
   270 00:D903: 13 05         	BEQ		L_SetWeek_Sat
   271 00:D905: 79 F2         	DEC		P_Temp
   272 00:D907: 16 0E D9      	JMP		L_Exit_Counter_Week
   273                        L_SetWeek_Sat:
   274 00:D90A: 53 06         	LDA		#6
   275 00:D90C: 7F F2         	STA		P_Temp
   276                        L_Exit_Counter_Week:
   277 00:D90E: 73 F2         	LDA		P_Temp
   278 00:D910: 7F AE         	STA		R_Time_Week
   279 00:D912: 09            	RTS
   280                        ;===============================================
   281                        ;-------------------------------------------
   282                        T_LeapYear_Month:
   283 00:D913: 1F            	DB		31
   284 00:D914: 1D            	DB		29
   285 00:D915: 1F            	DB		31
   286 00:D916: 1E            	DB		30
   287 00:D917: 1F            	DB		31
   288 00:D918: 1E            	DB		30
   289 00:D919: 1F            	DB		31
   290 00:D91A: 1F            	DB		31
   291 00:D91B: 1E            	DB		30
   292 00:D91C: 1F            	DB		31
   293 00:D91D: 1E            	DB		30
   294 00:D91E: 1F            	DB		31
   295                        T_NoLeapYear_Month:
   296 00:D91F: 1F            	DB		31
   297 00:D920: 1C            	DB		28
   298 00:D921: 1F            	DB		31
   299 00:D922: 1E            	DB		30
   300 00:D923: 1F            	DB		31
   301 00:D924: 1E            	DB		30
   302 00:D925: 1F            	DB		31
   303 00:D926: 1F            	DB		31
   304 00:D927: 1E            	DB		30
   305 00:D928: 1F            	DB		31
   306 00:D929: 1E            	DB		30
   307 00:D92A: 1F            	DB		31
   308                        T_LeapYear_Week:
   309 00:D92B: 1E            	DB		1EH   ;2001,2000 ;E="1110"代表2000年1月1日是星期六(110),是闰年(1),
   310 00:D92C: 32            	DB		32H   ;2003,2002	;000星期天
   311 00:D92D: 6C            	DB		6CH   ;2005,2004	;001星期一
   312 00:D92E: 10            	DB		10H   ;2007,2006	;010星期二
   313 00:D92F: 4A            	DB		4AH   ;2009,2008	;011星期三
   314 00:D930: 65            	DB		65H   ;2011,2010	;100星期四
   315 00:D931: 28            	DB		28H   ;2013,2012	;101星期五
   316 00:D932: 43            	DB		43H   ;2015,2014	;110星期六
   317 00:D933: 0D            	DB		0DH   ;2017,2016
   318 00:D934: 21            	DB		21H   ;2019,2018
   319 00:D935: 5B            	DB		5BH   ;2021,2020
   320 00:D936: 06            	DB		06H   ;2023,2022
   321 00:D937: 39            	DB		39H   ;2025,2024
   322 00:D938: 54            	DB		54H   ;2027,2026
   323 00:D939: 1E            	DB		1EH   ;2029,2028
   324 00:D93A: 32            	DB		32H   ;2031,2030
   325 00:D93B: 6C            	DB		6CH   ;2033,2032
   326 00:D93C: 10            	DB		10H   ;2035,2034
   327 00:D93D: 4A            	DB		4AH   ;2037,2036
   328 00:D93E: 65            	DB		65H   ;2039,2038
   329 00:D93F: 28            	DB		28H   ;2041,2040
   330 00:D940: 43            	DB		43H   ;2043,2042
   331 00:D941: 0D            	DB		0DH   ;2045,2044
   332 00:D942: 21            	DB		21H   ;2047,2046
   333 00:D943: 5B            	DB		5BH   ;2049,2048
   334 00:D944: 06            	DB		06H   ;2051,2050
   335 00:D945: 39            	DB		39H   ;2053,2052
   336 00:D946: 54            	DB		54H   ;2055,2054
   337 00:D947: 1E            	DB		1EH   ;2057,2056
   338 00:D948: 32            	DB		32H   ;2059,2058
   339 00:D949: 6C            	DB		6CH   ;2061,2060
   340 00:D94A: 10            	DB		10H   ;2063,2062
   341 00:D94B: 4A            	DB		4AH   ;2065,2064
   342 00:D94C: 65            	DB		65H   ;2067,2066
   343 00:D94D: 28            	DB		28H   ;2069,2068
   344 00:D94E: 43            	DB		43H   ;2071,2070
   345 00:D94F: 0D            	DB		0DH   ;2073,2072
   346 00:D950: 21            	DB		21H   ;2075,2074
   347 00:D951: 5B            	DB		5BH   ;2077,2076
   348 00:D952: 06            	DB		06H   ;2079,2078
   349 00:D953: 39            	DB		39H   ;2081,2080
   350 00:D954: 54            	DB		54H   ;2083,2082
   351 00:D955: 1E            	DB		1EH   ;2085,2084
   352 00:D956: 32            	DB		32H   ;2087,2086
   353 00:D957: 6C            	DB		6CH   ;2089,2088
   354 00:D958: 10            	DB		10H   ;2091,2090
   355 00:D959: 4A            	DB		4AH   ;2093,2092
   356 00:D95A: 65            	DB		65H   ;2095,2094
   357 00:D95B: 28            	DB		28H   ;2097,2096
   358 00:D95C: 43            	DB		43H   ;2099,2098
   359                        ;--------------------------------
   360                        T_Month_Week:
   361 00:D95D: 00            	DB		00H
   362 00:D95E: 00            	DB		00H   ;JANUARY		从1月1日开始，所以1月为0
   363 00:D95F: 33            	DB		33H   ;FABRUARY 	低4Bit为非闰年，高4Bit为闰年,
   364 00:D960: 43            	DB		43H   ;MARCH		每4bit数字是前几个月全部的天数减去7的倍数的剩余天数
   365 00:D961: 76            	DB		76H   ;APRIL
   366 00:D962: 21            	DB		21H   ;MAY
   367 00:D963: 54            	DB		54H   ;JUNE
   368 00:D964: 76            	DB		76H   ;JULY
   369 00:D965: 32            	DB		32H   ;AUGUST
   370 00:D966: 65            	DB		65H   ;SEPTEMBER
   371 00:D967: 10            	DB		10H   ;OCTOBER
   372 00:D968: 43            	DB		43H   ;NOVEMBER
   373 00:D969: 65            	DB		65H   ;DECEMBER
   373                        
   190                        .INCLUDE	Half_s\Alarm_Clock.asm
     1                        L_Alarm_Prog:;闹钟判断的时间是贪睡闹钟时间，而正常闹钟时间作为显示闹钟时间
     2 00:D96A: 73 B9         	LDA		R_Alarm_Mode
     3 00:D96C: 13 2F         	BEQ		L_Alarm_Prog_OUT
     4 00:D96E: 3C A1 2C      	BBS4	Sys_Flag_C,L_Alarm_Prog_OUT
     5                        
     6 00:D971: 73 A8         	LDA		R_Time_Sec
     7 00:D973: 12 28         	BNE		L_Alarm_Prog_OUT
     8 00:D975: 73 AA         	LDA		R_Time_Hr
     9 00:D977: 76 B8         	CMP		R_Alarm_Clock_Hr
    10 00:D979: 12 22         	BNE		L_Alarm_Prog_OUT
    11 00:D97B: 73 A9         	LDA		R_Time_Min
    12 00:D97D: 76 B7         	CMP		R_Alarm_Clock_Min
    13 00:D97F: 12 1C         	BNE		L_Alarm_Prog_OUT
    14                        
    15                        L_Alarm_Control_Prog:
    16 00:D981: 73 B9         	LDA		R_Alarm_Mode
    17 00:D983: 56 02         	CMP		#2
    18 00:D985: 12 0C         	BNE		L_Alarm_Control_Prog_2;判断是否为贪睡
    19 00:D987: 2F A1         	SMB7	Sys_Flag_C
    20 00:D989: 53 06         	LDA		#D_Snz_Frequency
    21 00:D98B: 4F 96 18      	STA		R_Snz_Frequency
    22 00:D98E: 53 05         	LDA		#D_Snz_Time
    23 00:D990: 4F 95 18      	STA		R_Snz_Time
    24                        L_Alarm_Control_Prog_2:
    25                        
    26                        
    27                        
    28                        L_Alarm_Prog_1:
    29 00:D993: 2C A1         	SMB4	Sys_Flag_C
    30 00:D995: 53 0B         	LDA		#D_Beep_Open_Last_Time_Alarm
    31 00:D997: 4F 93 18      	STA		R_Close_Beep_Time
    32 00:D99A: 15 32 DB      	JSR		L_Control_Beep_prog_Auto_Exit
    33                        L_Alarm_Prog_OUT:
    34 00:D99D: 09            	RTS
    35                        
    36                        
    37                        
    38                        
    39                        
    40                        
    41                        
    42                        
    42                        
   191                        .INCLUDE	Half_s\Timer.asm
     1                        ; L_Timer_Prog:
     2                            ; BBS4    Sys_Flag_D,L_Timer_Prog_OUT
     3                            ; BBR2    Sys_Flag_D,L_Timer_Prog_OUT;是否开始计时,根据标志位判断定时器是否开启
     4                            ; BBR0	Sys_Flag_D,L_Positive_Timer		;判断正计时,根据标志位判断正计时还是倒计时
     5                        	; BRA     L_Desitive_Timer		;判断倒计时
     6                        L_Update_Timer_Sec_Prog:
     7 00:D99E: 5E 0A             LDX     #(R_Timer_Sec-Time_Str_Addr)
     8 00:D9A0: 16 28 D8          JMP     L_Inc_To_60_Prog
     9                        ;----------------------------------------------------
    10                        L_Update_Timer_Min_Prog:
    11 00:D9A3: 5E 0B             LDX     #(R_Timer_Min-Time_Str_Addr)
    12 00:D9A5: 16 28 D8          JMP     L_Inc_To_60_Prog
    13                        ; ;----------------------------------------------------
    14                        L_Update_Timer_Hr_Prog:
    15 00:D9A8: 5E 0C             LDX     #(R_Timer_Hr-Time_Str_Addr)
    16 00:D9AA: 53 17             LDA     #23
    17 00:D9AC: 16 2A D8          JMP     L_Inc_To_Any_Count_Prog
    18                        ;----------------------------------------------------
    19                        
    20                        L_Positive_Timer:
    21 00:D9AF: 15 9E D9          JSR     L_Update_Timer_Sec_Prog
    22 00:D9B2: 10 12             BCC     L_Timer_Prog_OUT
    23 00:D9B4: 15 A3 D9          JSR     L_Update_Timer_Min_Prog
    24 00:D9B7: 10 0D             BCC     L_Timer_Prog_OUT
    25 00:D9B9: 15 A8 D9          JSR     L_Update_Timer_Hr_Prog
    26 00:D9BC: 10 08             BCC     L_Timer_Prog_OUT
    27 00:D9BE: 53 00             LDA     #0
    28 00:D9C0: 7F B4             STA     R_Timer_Hr
    29 00:D9C2: 7F B3             STA     R_Timer_Min
    30 00:D9C4: 7F B2             STA     R_Timer_Sec;记满重启计时
    31                        L_Timer_Prog_OUT:
    32 00:D9C6: 09                RTS
    33                        
    34                        
    35                        
    36                        L_Update_Timer_Ms_Prog_Countine_Prog:
    37 00:D9C7: 1B                TAX
    38 00:D9C8: 63 18 DA          LDA     Table_Timer_Ms,X
    39 00:D9CB: 7F B1             STA     R_Timer_Ms
    40 00:D9CD: 43 90 18          LDA     R_Mode
    41 00:D9D0: 56 04             CMP     #4
    42 00:D9D2: 12 F2             BNE     L_Timer_Prog_OUT
    43 00:D9D4: 15 78 C9          JSR     L_Display_Postive_Timer_Normal_Prog
    44 00:D9D7: 09                RTS
    45                        
    46                        L_Update_Timer_Ms_Prog:
    47 00:D9D8: 30 A2 EB          BBR0    Sys_Flag_D,L_Timer_Prog_OUT
    48 00:D9DB: 78 B5             INC     R_Timer_X
    49 00:D9DD: 73 B5             LDA     R_Timer_X
    50 00:D9DF: 56 22             CMP     #34
    51 00:D9E1: 10 E4             BCC     L_Update_Timer_Ms_Prog_Countine_Prog
    52 00:D9E3: 43 90 18          LDA     R_Mode
    53 00:D9E6: 56 04             CMP     #4
    54 00:D9E8: 12 DC             BNE     L_Timer_Prog_OUT
    55 00:D9EA: 53 00             LDA     #0
    56 00:D9EC: 7F B5             STA     R_Timer_X
    57 00:D9EE: 7F B1             STA     R_Timer_Ms
    58 00:D9F0: 15 78 C9          JSR     L_Display_Postive_Timer_Normal_Prog
    59 00:D9F3: 15 AF D9          JSR     L_Positive_Timer
    60                        
    61 00:D9F6: 15 78 C9          JSR     L_Display_Postive_Timer_Normal_Prog
    62 00:D9F9: 09                RTS
    63                        L_Control_Positive_Timer_Prog:
    64 00:D9FA: 30 A2 C9      	BBR0	Sys_Flag_D,L_Timer_Prog_OUT;正计时未开始
    65 00:D9FD: 3E A2 0A      	BBS6	Sys_Flag_D,L_Control_Positive_Timer_Prog_RTS
    66 00:DA00: 2E A2         	SMB6	Sys_Flag_D
    67 00:DA02: 73 B5         	LDA		R_Timer_X
    68 00:DA04: 7F B6         	STA		R_Timer_X_1
    69 00:DA06: 15 78 C9      	JSR		L_Display_Postive_Timer_Normal_Prog
    70 00:DA09: 09            	RTS
    71                        L_Control_Positive_Timer_Prog_RTS:
    72 00:DA0A: 73 B6         	LDA		R_Timer_X_1
    73 00:DA0C: 7F B5         	STA		R_Timer_X
    74 00:DA0E: 1B                TAX
    75 00:DA0F: 63 18 DA          LDA     Table_Timer_Ms,X
    76 00:DA12: 7F B1             STA     R_Timer_Ms
    77 00:DA14: 15 78 C9      	JSR		L_Display_Postive_Timer_Normal_Prog
    78 00:DA17: 09            	RTS
    79                        
    80                        
    81                        Table_Timer_Ms:
    82 00:DA18: 00                .DB     0
    83 00:DA19: 03                .DB     3
    84 00:DA1A: 06                .DB     6
    85 00:DA1B: 09                .DB     9
    86 00:DA1C: 0C                .DB     12
    87 00:DA1D: 0F                .DB     15
    88 00:DA1E: 12                .DB     18
    89 00:DA1F: 15                .DB     21
    90 00:DA20: 18                .DB     24
    91 00:DA21: 1B                .DB     27
    92 00:DA22: 1E                .DB     30
    93 00:DA23: 21                .DB     33
    94 00:DA24: 24                .DB     36
    95 00:DA25: 27                .DB     39
    96 00:DA26: 2A                .DB     42
    97 00:DA27: 2D                .DB     45
    98 00:DA28: 30                .DB     48
    99 00:DA29: 33                .DB     51
   100 00:DA2A: 36                .DB     54
   101 00:DA2B: 39                .DB     57
   102 00:DA2C: 3C                .DB     60
   103 00:DA2D: 3F                .DB     63
   104 00:DA2E: 42                .DB     66
   105 00:DA2F: 45                .DB     69
   106 00:DA30: 48                .DB     72
   107 00:DA31: 4B                .DB     75
   108 00:DA32: 4E                .DB     78
   109 00:DA33: 51                .DB     81
   110 00:DA34: 54                .DB     84
   111 00:DA35: 57                .DB     87
   112 00:DA36: 5A                .DB     90
   113 00:DA37: 5D                .DB     93
   114 00:DA38: 60                .DB     96
   115 00:DA39: 63                .DB     99
   116                        
   117                        
   118                        
   119                        
   120                        
   121                        
   122                        
   123                        
   123                        
   192                        .INCLUDE	Half_s\Common.asm
     1                        L_Set_Mode_Auto_Exit:
     2 00:DA3A: 33 9F 22      	BBR3	Sys_Flag_A,L_Set_Mode_Auto_Exit_OUT
     3 00:DA3D: 73 9F         	LDA		Sys_Flag_A
     4 00:DA3F: 51 14         	AND		#14H
     5 00:DA41: 12 1C         	BNE		L_Set_Mode_Auto_Exit_OUT;长按和快加时不进行设置
     6 00:DA43: 04            	CLC
     7 00:DA44: 43 91 18      	LDA		R_Set_Mode_Exit_Time
     8 00:DA47: 54 01         	ADC		#1
     9 00:DA49: 4F 91 18      	STA		R_Set_Mode_Exit_Time
    10 00:DA4C: 56 51         	CMP		#D_Set_Mode_Exit_Time
    11 00:DA4E: 11 03         	BCS		L_Set_Mode_Auto_Exit_1
    12 00:DA50: 13 01         	BEQ		L_Set_Mode_Auto_Exit_1
    13 00:DA52: 09            	RTS
    14                        L_Set_Mode_Auto_Exit_1:
    15 00:DA53: 23 9F         	RMB3	Sys_Flag_A
    16 00:DA55: 53 00         	LDA		#0
    17 00:DA57: 4F 91 18      	STA		R_Set_Mode_Exit_Time
    18 00:DA5A: 7F F1         	STA		R_Mode_Set
    19 00:DA5C: 15 BE C9      	JSR		L_Display_Prog
    20                        L_Set_Mode_Auto_Exit_OUT:
    21 00:DA5F: 09            	RTS
    21                        
   193                        .INCLUDE	Half_s\Flash.asm
     1                        L_SysFlash_Prog:
     2 00:DA60: 15 75 DA      	JSR		L_SysFlash_Set_Mode_Prog
     3 00:DA63: 15 67 DA      	JSR		L_SysFlash_Prog_Positive_Timer
     4                        ; 	JSR		L_SysFlash_Alm_Symbol_Prog
     5                        ; 	JSR		L_SysFlash_Snz_Symbol_Prog
     6 00:DA66: 09            	RTS
     7                        
     8                        
     9                        
    10                        L_SysFlash_Prog_Positive_Timer:
    11 00:DA67: 30 A2 0A      	BBR0	Sys_Flag_D,L_SysFlash_Prog_Positive_Timer_RTS
    12 00:DA6A: 43 90 18      	LDA		R_Mode
    13 00:DA6D: 56 04         	CMP		#4
    14 00:DA6F: 12 03         	BNE		L_SysFlash_Prog_Positive_Timer_RTS
    15 00:DA71: 15 B1 CB      	JSR		L_Clr_col_Prog
    16                        L_SysFlash_Prog_Positive_Timer_RTS:
    17 00:DA74: 09            	RTS
    18                        
    19                        L_SysFlash_Set_Mode_Prog:
    20 00:DA75: 33 9F FC      	BBR3	Sys_Flag_A,L_SysFlash_Prog_Positive_Timer_RTS
    21 00:DA78: 43 90 18      	LDA		R_Mode
    22 00:DA7B: 04            	CLC
    23 00:DA7C: 06            	CLD
    24 00:DA7D: 18            	ROL
    25 00:DA7E: 1B            	TAX
    26 00:DA7F: 63 89 DA      	LDA		Table_SysFlash+1,X
    27 00:DA82: 0A            	PHA
    28 00:DA83: 63 88 DA      	LDA		Table_SysFlash,X
    29 00:DA86: 0A            	PHA
    30 00:DA87: 09            	RTS
    31                        Table_SysFlash:
    32 00:DA88: 91 DA         	DW		L_SysFlash_Set_Mode_Prog_Time-1
    33 00:DA8A: 73 DA         	DW		L_SysFlash_Prog_Positive_Timer_RTS-1
    34 00:DA8C: BD DA         	DW		L_SysFlash_Set_Mode_Prog_usually-1
    35 00:DA8E: BD DA         	DW		L_SysFlash_Set_Mode_Prog_usually-1
    36 00:DA90: 73 DA         	DW		L_SysFlash_Prog_Positive_Timer_RTS-1
    37                        
    38                        
    39                        
    40                        L_SysFlash_Set_Mode_Prog_Time:
    41 00:DA92: 04            	CLC
    42 00:DA93: 06            	CLD
    43 00:DA94: 73 F1         	LDA		R_Mode_Set
    44 00:DA96: 18            	ROL
    45 00:DA97: 1B            	TAX
    46 00:DA98: 63 A2 DA      	LDA		Table_SysFlash_Time+1,X
    47 00:DA9B: 0A            	PHA
    48 00:DA9C: 63 A1 DA      	LDA		Table_SysFlash_Time,X
    49 00:DA9F: 0A            	PHA
    50 00:DAA0: 09            	RTS
    51                        Table_SysFlash_Time:
    52 00:DAA1: B6 DA         	DW		L_SysFlash_Set_Mode_Prog_Time_Sec-1
    53                        Table_Usually:
    54 00:DAA3: EF CB         	DW		L_Clr_lcd_d1_Prog-1
    55 00:DAA5: F7 CB         	DW		L_Clr_lcd_d2_Prog-1
    56 00:DAA7: FF CB         	DW		L_Clr_lcd_d4_Prog-1
    57 00:DAA9: 03 CC         	DW		L_Clr_lcd_d5_Prog-1
    58 00:DAAB: EF CB         	DW		L_Clr_lcd_d1_Prog-1
    59 00:DAAD: F7 CB         	DW		L_Clr_lcd_d2_Prog-1
    60 00:DAAF: FF CB         	DW		L_Clr_lcd_d4_Prog-1
    61 00:DAB1: 03 CC         	DW		L_Clr_lcd_d5_Prog-1
    62 00:DAB3: 0B CC         	DW		L_Clr_lcd_d7_Prog-1
    63 00:DAB5: 0F CC         	DW		L_Clr_lcd_d8_Prog-1
    64                        L_SysFlash_Set_Mode_Prog_Time_Sec:
    65 00:DAB7: 15 10 CC      	JSR		L_Clr_lcd_d8_Prog
    66 00:DABA: 15 0C CC      	JSR		L_Clr_lcd_d7_Prog
    67 00:DABD: 09            	RTS
    68                        L_SysFlash_Set_Mode_Prog_usually:
    69 00:DABE: 04            	CLC
    70 00:DABF: 06            	CLD
    71 00:DAC0: 73 F1         	LDA		R_Mode_Set
    72 00:DAC2: 18            	ROL
    73 00:DAC3: 1B            	TAX
    74 00:DAC4: 63 A4 DA      	LDA		Table_Usually+1,X
    75 00:DAC7: 0A            	PHA
    76 00:DAC8: 63 A3 DA      	LDA		Table_Usually,X
    77 00:DACB: 0A            	PHA
    78                        	RTS
    78 00:DACC: 09            
   194                        
   195                        .INCLUDE	Sound\Beep.asm
     1                        ;============================================================
     2                        L_control_Beep_prog:
     3 00:DACD: 43 94 18      	LDA		R_Voice_Unit;闹铃持续的次数时间
     4 00:DAD0: 13 0D         	BEQ		L_control_Beep_prog_out
     5 00:DAD2: 04            	CLC
     6 00:DAD3: 43 92 18      	LDA		R_Alarm_Clock_Open_Beep_Time
     7 00:DAD6: 54 01         	ADC		#1
     8 00:DAD8: 4F 92 18      	STA		R_Alarm_Clock_Open_Beep_Time
     9 00:DADB: 56 02         	CMP		#2
    10 00:DADD: 11 01         	BCS		L_Open_Beep_Prog
    11                        L_control_Beep_prog_out:
    12 00:DADF: 09            	RTS
    13                        
    14                        
    15                        ; ;---------------------------------------------------------------------
    16                        L_Open_Beep_Prog:
    17 00:DAE0: 53 00         	LDA		#0
    18 00:DAE2: 4F 92 18      	STA		R_Alarm_Clock_Open_Beep_Time
    19 00:DAE5: 37 16 16      	BBR7	P_TMRCTRL,L_Open_Beep_Prog_1
    20 00:DAE8: 00            	SEC
    21 00:DAE9: 43 94 18      	LDA		R_Voice_Unit
    22 00:DAEC: 55 01         	SBC		#1
    23 00:DAEE: 4F 94 18      	STA		R_Voice_Unit
    24                        
    25                        L_Close_Beep_Prog:
    26 00:DAF1: 53 00         	LDA		#$00
    27 00:DAF3: 7F 1F         	STA		P_AUD
    28 00:DAF5: 27 16         	RMB7	P_TMRCTRL	;关闭声音输出
    29 00:DAF7: 20 1D         	RMB0	P_SYSCLK ;Weak
    30                        	PB3_PB3_NOMS
+   30 00:DAF9: 21 0C          RMB1 PADF0
+   30 00:DAFB: 23 06          RMB3 PBTYPE
    31                        	; LDA		#0
    32                        	; STA		P_PB
    33 00:DAFD: 09            	RTS
    34                        ;--------------------------------------
    35                        L_Open_Beep_Prog_1:
    36                        	PB3_PWM
+   36 00:DAFE: 29 0C          SMB1 PADF0
+   36 00:DB00: 2B 06          SMB3 PBTYPE
    37 00:DB02: 53 80         	LDA		#$80
    38 00:DB04: 7F 18         	STA		P_DIVC
    39 00:DB06: 28 1D         	SMB0	P_SYSCLK ;STRONG
    40 00:DB08: 53 FF         	LDA		#$FF
    41 00:DB0A: 7F 1F         	STA		P_AUD
    42 00:DB0C: 2F 16         	SMB7	P_TMRCTRL	;打开声音输出
    43 00:DB0E: 09            	RTS
    44                        ;==========================================
    45                        L_Scankey_Short_ST_SP_Press_Prog_Alarm:
    46                        ;====================================================
    47                        L_Scankey_Close_Alarm_Beep:
    48 00:DB0F: 73 A1         	LDA		Sys_Flag_C
    49 00:DB11: 51 10         	AND		#10h
    50 00:DB13: 13 1C         	BEQ		L_Scankey_Close_Alarm_Beep_OUT
    51 00:DB15: 15 F1 DA      	JSR		L_Close_Beep_Prog
    52 00:DB18: 53 00         	LDA		#0
    53 00:DB1A: 4F 94 18      	STA		R_Voice_Unit
    54 00:DB1D: 4F 93 18      	STA		R_Close_Beep_Time
    55 00:DB20: 24 A1         	RMB4	Sys_Flag_C
    56 00:DB22: 43 96 18      	LDA		R_Snz_Frequency
    57 00:DB25: 12 07         	BNE		L_Scankey_Close_Alarm_Beep_2
    58 00:DB27: 53 00         	LDA		#0
    59 00:DB29: 4F 95 18      	STA		R_Snz_Time
    60 00:DB2C: 27 A1         	RMB7	Sys_Flag_C
    61                        L_Scankey_Close_Alarm_Beep_2:
    62                        	; JSR		L_Display_Normal_Prog
    63 00:DB2E: 3B 9F 00      	BBS3	Sys_Flag_A,L_Scankey_Close_Alarm_Beep_OUT
    64                        	; JSR		L_Display_Set_Mode_Prog
    65                        L_Scankey_Close_Alarm_Beep_OUT:
    66 00:DB31: 09            	RTS
    67                        
    68                        
    69                        
    70                        
    71                        
    72                        
    73                        
    74                        
    75                        L_Control_Beep_prog_Auto_Exit:;多久自动退出响闹,如果没有则按每秒给值
    76 00:DB32: 73 A1         	LDA		Sys_Flag_C
    77 00:DB34: 51 10         	AND		#10H
    78 00:DB36: 13 F9         	BEQ		L_Scankey_Close_Alarm_Beep_OUT
    79 00:DB38: 00            	SEC
    80 00:DB39: 43 93 18      	LDA		R_Close_Beep_Time
    81 00:DB3C: 55 01         	SBC		#1
    82 00:DB3E: 4F 93 18      	STA		R_Close_Beep_Time;定时器
    83 00:DB41: 13 CC         	BEQ		L_Scankey_Short_ST_SP_Press_Prog_Alarm
    84                        	EN_LCD_IRQ
+   84 00:DB43: 2E 0E          SMB6 IER
    85 00:DB45: 53 02         	LDA		#2
    86 00:DB47: 4F 94 18      	STA		R_Voice_Unit
    87 00:DB4A: 3C A2 E4      	BBS4	Sys_Flag_D,L_Scankey_Close_Alarm_Beep_OUT
    88 00:DB4D: 09                RTS
    88                        
   196                        
   197                        .INCLUDE	Delay.asm
     1                        ;============================================================
     2                        L_ScanKey_Delay_Prog:    ;延时功能
     3 00:DB4E: 53 E0         	LDA		#$E0
     4 00:DB50: 7F F2         	STA		P_Temp
     5                        L_Loop_ScanKey_Delay:
     6 00:DB52: 78 F2         	INC		P_Temp
     7 00:DB54: 73 F2         	LDA		P_Temp
     8 00:DB56: 12 FA         	BNE		L_Loop_ScanKey_Delay
     9 00:DB58: 09            	RTS
    10                        L_Beep_1s:    ;响一声
    11 00:DB59: 3D A1 07      	BBS5	Sys_Flag_C,L_Beep_1s_RTS
    12                        L_Beep_1s_Usually:
    13 00:DB5C: 53 01         	LDA		#1
    14 00:DB5E: 4F 94 18      	STA		R_Voice_Unit
    15                        	EN_LCD_IRQ
+   15 00:DB61: 2E 0E          SMB6 IER
    16                        L_Beep_1s_RTS
    17 00:DB63: 09            	RTS
    18                        
    19 00:DB64: 15 59 DB      JSR		L_Beep_1s
    19                        
   198                        
   199                        ;--------------------------------------------------------
   200                        ;***********************************************************************
   201 00:DB67: FF FF FF FF   	.BLKB	$FFFF-$,$FF
   201 00:DB67: FF FF FF FF   
   201 00:DB67: FF FF FF FF   
   202                        
   203                        	.ORG	0FFF8H
   204                        
   205 00:FFF8: D5            	DB		11010101B	;
   206                        ; bit0 	=0
   207                        ; bit1	=0
   208                        ; bit2 	=0当PA7做复位时，只能写1低电平有效，高电平有效烧录会报错
   209                        ; bit3	=0PA口做输入下拉和输入上拉，1PA口做输入下拉和三态
   210                        ; bit4 	=0
   211                        ; bit5 	=0
   212                        ; bit6	=0VDD=1.5V,1 VDD=3V
   213                        ; bit7	=0做复位，1做PA7口
   214 00:FFF9: FF            	DB		11111111B	;
   215                        
   216                        ;***********************************************************************
   217                        	.ORG	0FFFCH
   218 00:FFFC: 00 C0         	DW		V_RESET
   219 00:FFFE: 90 C0         	DW		V_IRQ
   220                        
   221                        	.ENDS
   222                        	.END

 --------------------
      Warnings:0
      Errors  :0
